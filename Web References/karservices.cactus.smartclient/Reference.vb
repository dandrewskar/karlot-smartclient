'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace karservices.cactus.smartclient
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="kar_smartclient_webserviceSoap", [Namespace]:="http://karservices.com/")>  _
    Partial Public Class kar_smartclient_webservice
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CallOutWashdockToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddTrailerToWashDockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CallOutWashDockNoMoveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CallToWashDockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClearTrailerExceptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetKarDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInboundSheetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCarrierListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailerRowByBarcodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTrailerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrailerDataBySystemIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrailerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInboundSheetRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOutboundSheetRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MarkForYardCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResetYardCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailerCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessYardCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetYardCheckRefDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetYardCheckReviewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UseRackOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveCarriersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailersByScacOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailersByTrailerIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailersDatasetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailersByLoadStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetTrailerOutOfServiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetTrailerInServiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMovesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TakeMoveCalledToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TakeMoveCalledFromWashDockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TakeMoveCalledOutDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TakeMoveCalledDoorToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupFromDoorToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupFromLotToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupFromWashDockToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupFromDoorToLotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupForRelocateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ParkAtDoorDestinationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ParkAtLotLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ParkAtWashDockLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOpenTaskCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserTaskCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserTasksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllOpenTasksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AssignTaskToUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TaskFinishedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CompleteTaskByUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsMoveCancelledOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsMoveTakenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMoveChecksumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetServerTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetTrailerSealsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBuildingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBuildingsByDroptypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDoorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CallTrailerMoveToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CallTrailerMoveOutDoorToLotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CallTrailerMoveOutDoorToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailerMovesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPalletTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddBasicTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTaskTextItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTaskArgsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUpdateTrailerDSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostUpdateTrailerInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDoorTrailersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelTrailerMovesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCompletedMovesByDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPreCoolingTrailersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPreCoolingTrailersByTrailerIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPreCoolingTrailersByCarrierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPrecoolTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddStopPrecoolTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelPrecoolTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrecoolingTasksByTrailerSystemIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveWashDockTrailersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CallOutWashDockToLotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://guymon-ok.karservices.com/Webservice/Eservice.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CallOutWashdockToDoorCompleted As CallOutWashdockToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event AddTrailerToWashDockCompleted As AddTrailerToWashDockCompletedEventHandler
        
        '''<remarks/>
        Public Event CallOutWashDockNoMoveCompleted As CallOutWashDockNoMoveCompletedEventHandler
        
        '''<remarks/>
        Public Event CallToWashDockCompleted As CallToWashDockCompletedEventHandler
        
        '''<remarks/>
        Public Event ClearTrailerExceptionCompleted As ClearTrailerExceptionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetKarDataCompleted As GetKarDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInboundSheetCompleted As GetInboundSheetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCarrierListCompleted As GetCarrierListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailerRowByBarcodeCompleted As GetActiveTrailerRowByBarcodeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTrailerCompleted As UpdateTrailerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrailerDataBySystemIDCompleted As GetTrailerDataBySystemIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrailerCompleted As GetTrailerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInboundSheetRecordsCompleted As GetInboundSheetRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOutboundSheetRecordsCompleted As GetOutboundSheetRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event MarkForYardCheckCompleted As MarkForYardCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event ResetYardCheckCompleted As ResetYardCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailerCountCompleted As GetActiveTrailerCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailersCompleted As GetActiveTrailersCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessYardCheckCompleted As ProcessYardCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event GetYardCheckRefDataCompleted As GetYardCheckRefDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetYardCheckReviewCompleted As GetYardCheckReviewCompletedEventHandler
        
        '''<remarks/>
        Public Event UseRackCompleted As UseRackCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveCarriersCompleted As GetActiveCarriersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailersByScacCompleted As GetActiveTrailersByScacCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailersByTrailerIDCompleted As GetActiveTrailersByTrailerIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailersDatasetCompleted As GetActiveTrailersDatasetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailersByLoadStatusCompleted As GetActiveTrailersByLoadStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event SetTrailerOutOfServiceCompleted As SetTrailerOutOfServiceCompletedEventHandler
        
        '''<remarks/>
        Public Event SetTrailerInServiceCompleted As SetTrailerInServiceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMovesCompleted As GetMovesCompletedEventHandler
        
        '''<remarks/>
        Public Event TakeMoveCalledToDoorCompleted As TakeMoveCalledToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event TakeMoveCalledFromWashDockCompleted As TakeMoveCalledFromWashDockCompletedEventHandler
        
        '''<remarks/>
        Public Event TakeMoveCalledOutDoorCompleted As TakeMoveCalledOutDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event TakeMoveCalledDoorToDoorCompleted As TakeMoveCalledDoorToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupFromDoorToDoorCompleted As PickupFromDoorToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupFromLotToDoorCompleted As PickupFromLotToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupFromWashDockToDoorCompleted As PickupFromWashDockToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupFromDoorToLotCompleted As PickupFromDoorToLotCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupForRelocateCompleted As PickupForRelocateCompletedEventHandler
        
        '''<remarks/>
        Public Event ParkAtDoorDestinationCompleted As ParkAtDoorDestinationCompletedEventHandler
        
        '''<remarks/>
        Public Event ParkAtLotLocationCompleted As ParkAtLotLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event ParkAtWashDockLocationCompleted As ParkAtWashDockLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOpenTaskCountCompleted As GetOpenTaskCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserTaskCountCompleted As GetUserTaskCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserTasksCompleted As GetUserTasksCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllOpenTasksCompleted As GetAllOpenTasksCompletedEventHandler
        
        '''<remarks/>
        Public Event AssignTaskToUserCompleted As AssignTaskToUserCompletedEventHandler
        
        '''<remarks/>
        Public Event TaskFinishedCompleted As TaskFinishedCompletedEventHandler
        
        '''<remarks/>
        Public Event CompleteTaskByUserCompleted As CompleteTaskByUserCompletedEventHandler
        
        '''<remarks/>
        Public Event IsMoveCancelledCompleted As IsMoveCancelledCompletedEventHandler
        
        '''<remarks/>
        Public Event IsMoveTakenCompleted As IsMoveTakenCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMoveChecksumCompleted As GetMoveChecksumCompletedEventHandler
        
        '''<remarks/>
        Public Event GetServerTimeCompleted As GetServerTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetTrailerSealsCompleted As SetTrailerSealsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBuildingsCompleted As GetBuildingsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBuildingsByDroptypeCompleted As GetBuildingsByDroptypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDoorsCompleted As GetDoorsCompletedEventHandler
        
        '''<remarks/>
        Public Event CallTrailerMoveToDoorCompleted As CallTrailerMoveToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event CallTrailerMoveOutDoorToLotCompleted As CallTrailerMoveOutDoorToLotCompletedEventHandler
        
        '''<remarks/>
        Public Event CallTrailerMoveOutDoorToDoorCompleted As CallTrailerMoveOutDoorToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailerMovesCompleted As GetActiveTrailerMovesCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPalletTaskCompleted As AddPalletTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event AddBasicTaskCompleted As AddBasicTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTaskTextItemsCompleted As GetTaskTextItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTaskArgsListCompleted As GetTaskArgsListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUpdateTrailerDSCompleted As GetUpdateTrailerDSCompletedEventHandler
        
        '''<remarks/>
        Public Event PostUpdateTrailerInfoCompleted As PostUpdateTrailerInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDoorTrailersCompleted As GetDoorTrailersCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelTrailerMovesCompleted As CancelTrailerMovesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCompletedMovesByDateCompleted As GetCompletedMovesByDateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPreCoolingTrailersCompleted As GetPreCoolingTrailersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPreCoolingTrailersByTrailerIDCompleted As GetPreCoolingTrailersByTrailerIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPreCoolingTrailersByCarrierCompleted As GetPreCoolingTrailersByCarrierCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPrecoolTaskCompleted As AddPrecoolTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event AddStopPrecoolTaskCompleted As AddStopPrecoolTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelPrecoolTaskCompleted As CancelPrecoolTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrecoolingTasksByTrailerSystemIDCompleted As GetPrecoolingTasksByTrailerSystemIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveWashDockTrailersCompleted As GetActiveWashDockTrailersCompletedEventHandler
        
        '''<remarks/>
        Public Event CallOutWashDockToLotCompleted As CallOutWashDockToLotCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CallOutWashdockToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallOutWashdockToDoor(ByVal pWashType As String, ByVal pWashedBy As String, ByVal tMoveID As Integer, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String) As Boolean
            Dim results() As Object = Me.Invoke("CallOutWashdockToDoor", New Object() {pWashType, pWashedBy, tMoveID, pTrailer, pUserID, pStationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallOutWashdockToDoorAsync(ByVal pWashType As String, ByVal pWashedBy As String, ByVal tMoveID As Integer, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String)
            Me.CallOutWashdockToDoorAsync(pWashType, pWashedBy, tMoveID, pTrailer, pUserID, pStationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallOutWashdockToDoorAsync(ByVal pWashType As String, ByVal pWashedBy As String, ByVal tMoveID As Integer, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String, ByVal userState As Object)
            If (Me.CallOutWashdockToDoorOperationCompleted Is Nothing) Then
                Me.CallOutWashdockToDoorOperationCompleted = AddressOf Me.OnCallOutWashdockToDoorOperationCompleted
            End If
            Me.InvokeAsync("CallOutWashdockToDoor", New Object() {pWashType, pWashedBy, tMoveID, pTrailer, pUserID, pStationID}, Me.CallOutWashdockToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallOutWashdockToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallOutWashdockToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallOutWashdockToDoorCompleted(Me, New CallOutWashdockToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AddTrailerToWashDock", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddTrailerToWashDock(ByVal pWashBay As String, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String) As Boolean
            Dim results() As Object = Me.Invoke("AddTrailerToWashDock", New Object() {pWashBay, pTrailer, pUserID, pStationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddTrailerToWashDockAsync(ByVal pWashBay As String, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String)
            Me.AddTrailerToWashDockAsync(pWashBay, pTrailer, pUserID, pStationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddTrailerToWashDockAsync(ByVal pWashBay As String, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String, ByVal userState As Object)
            If (Me.AddTrailerToWashDockOperationCompleted Is Nothing) Then
                Me.AddTrailerToWashDockOperationCompleted = AddressOf Me.OnAddTrailerToWashDockOperationCompleted
            End If
            Me.InvokeAsync("AddTrailerToWashDock", New Object() {pWashBay, pTrailer, pUserID, pStationID}, Me.AddTrailerToWashDockOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddTrailerToWashDockOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddTrailerToWashDockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddTrailerToWashDockCompleted(Me, New AddTrailerToWashDockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CallOutWashDockNoMove", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallOutWashDockNoMove(ByVal pWashedBy As String, ByVal pWashType As String, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String) As Boolean
            Dim results() As Object = Me.Invoke("CallOutWashDockNoMove", New Object() {pWashedBy, pWashType, pTrailer, pUserID, pStationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallOutWashDockNoMoveAsync(ByVal pWashedBy As String, ByVal pWashType As String, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String)
            Me.CallOutWashDockNoMoveAsync(pWashedBy, pWashType, pTrailer, pUserID, pStationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallOutWashDockNoMoveAsync(ByVal pWashedBy As String, ByVal pWashType As String, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String, ByVal userState As Object)
            If (Me.CallOutWashDockNoMoveOperationCompleted Is Nothing) Then
                Me.CallOutWashDockNoMoveOperationCompleted = AddressOf Me.OnCallOutWashDockNoMoveOperationCompleted
            End If
            Me.InvokeAsync("CallOutWashDockNoMove", New Object() {pWashedBy, pWashType, pTrailer, pUserID, pStationID}, Me.CallOutWashDockNoMoveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallOutWashDockNoMoveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallOutWashDockNoMoveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallOutWashDockNoMoveCompleted(Me, New CallOutWashDockNoMoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CallToWashDock", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallToWashDock(ByVal Trailer As Trailer, ByVal UserID As String, ByVal StationID As String, ByVal WashBayLoc As String) As Integer
            Dim results() As Object = Me.Invoke("CallToWashDock", New Object() {Trailer, UserID, StationID, WashBayLoc})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallToWashDockAsync(ByVal Trailer As Trailer, ByVal UserID As String, ByVal StationID As String, ByVal WashBayLoc As String)
            Me.CallToWashDockAsync(Trailer, UserID, StationID, WashBayLoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallToWashDockAsync(ByVal Trailer As Trailer, ByVal UserID As String, ByVal StationID As String, ByVal WashBayLoc As String, ByVal userState As Object)
            If (Me.CallToWashDockOperationCompleted Is Nothing) Then
                Me.CallToWashDockOperationCompleted = AddressOf Me.OnCallToWashDockOperationCompleted
            End If
            Me.InvokeAsync("CallToWashDock", New Object() {Trailer, UserID, StationID, WashBayLoc}, Me.CallToWashDockOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallToWashDockOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallToWashDockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallToWashDockCompleted(Me, New CallToWashDockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/ClearTrailerException", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ClearTrailerException(ByVal trailerSystemId As Integer) As WsResponse
            Dim results() As Object = Me.Invoke("ClearTrailerException", New Object() {trailerSystemId})
            Return CType(results(0),WsResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ClearTrailerExceptionAsync(ByVal trailerSystemId As Integer)
            Me.ClearTrailerExceptionAsync(trailerSystemId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClearTrailerExceptionAsync(ByVal trailerSystemId As Integer, ByVal userState As Object)
            If (Me.ClearTrailerExceptionOperationCompleted Is Nothing) Then
                Me.ClearTrailerExceptionOperationCompleted = AddressOf Me.OnClearTrailerExceptionOperationCompleted
            End If
            Me.InvokeAsync("ClearTrailerException", New Object() {trailerSystemId}, Me.ClearTrailerExceptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnClearTrailerExceptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClearTrailerExceptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClearTrailerExceptionCompleted(Me, New ClearTrailerExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetKarData", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetKarData() As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetKarData", New Object(-1) {})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetKarDataAsync()
            Me.GetKarDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetKarDataAsync(ByVal userState As Object)
            If (Me.GetKarDataOperationCompleted Is Nothing) Then
                Me.GetKarDataOperationCompleted = AddressOf Me.OnGetKarDataOperationCompleted
            End If
            Me.InvokeAsync("GetKarData", New Object(-1) {}, Me.GetKarDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetKarDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKarDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKarDataCompleted(Me, New GetKarDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetInboundSheet", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInboundSheet() As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetInboundSheet", New Object(-1) {})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInboundSheetAsync()
            Me.GetInboundSheetAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInboundSheetAsync(ByVal userState As Object)
            If (Me.GetInboundSheetOperationCompleted Is Nothing) Then
                Me.GetInboundSheetOperationCompleted = AddressOf Me.OnGetInboundSheetOperationCompleted
            End If
            Me.InvokeAsync("GetInboundSheet", New Object(-1) {}, Me.GetInboundSheetOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInboundSheetOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInboundSheetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInboundSheetCompleted(Me, New GetInboundSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetCarrierList", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCarrierList() As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetCarrierList", New Object(-1) {})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCarrierListAsync()
            Me.GetCarrierListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCarrierListAsync(ByVal userState As Object)
            If (Me.GetCarrierListOperationCompleted Is Nothing) Then
                Me.GetCarrierListOperationCompleted = AddressOf Me.OnGetCarrierListOperationCompleted
            End If
            Me.InvokeAsync("GetCarrierList", New Object(-1) {}, Me.GetCarrierListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCarrierListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCarrierListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCarrierListCompleted(Me, New GetCarrierListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailerRowByBarcode", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailerRowByBarcode(ByVal Barcode As String) As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetActiveTrailerRowByBarcode", New Object() {Barcode})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerRowByBarcodeAsync(ByVal Barcode As String)
            Me.GetActiveTrailerRowByBarcodeAsync(Barcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerRowByBarcodeAsync(ByVal Barcode As String, ByVal userState As Object)
            If (Me.GetActiveTrailerRowByBarcodeOperationCompleted Is Nothing) Then
                Me.GetActiveTrailerRowByBarcodeOperationCompleted = AddressOf Me.OnGetActiveTrailerRowByBarcodeOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailerRowByBarcode", New Object() {Barcode}, Me.GetActiveTrailerRowByBarcodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailerRowByBarcodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailerRowByBarcodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailerRowByBarcodeCompleted(Me, New GetActiveTrailerRowByBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/UpdateTrailer", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTrailer(ByVal DS As BarcodeDataSet, ByVal User As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateTrailer", New Object() {DS, User})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTrailerAsync(ByVal DS As BarcodeDataSet, ByVal User As String)
            Me.UpdateTrailerAsync(DS, User, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTrailerAsync(ByVal DS As BarcodeDataSet, ByVal User As String, ByVal userState As Object)
            If (Me.UpdateTrailerOperationCompleted Is Nothing) Then
                Me.UpdateTrailerOperationCompleted = AddressOf Me.OnUpdateTrailerOperationCompleted
            End If
            Me.InvokeAsync("UpdateTrailer", New Object() {DS, User}, Me.UpdateTrailerOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTrailerOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTrailerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTrailerCompleted(Me, New UpdateTrailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetTrailerDataBySystemID", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrailerDataBySystemID(ByVal SystemID As Integer) As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetTrailerDataBySystemID", New Object() {SystemID})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrailerDataBySystemIDAsync(ByVal SystemID As Integer)
            Me.GetTrailerDataBySystemIDAsync(SystemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrailerDataBySystemIDAsync(ByVal SystemID As Integer, ByVal userState As Object)
            If (Me.GetTrailerDataBySystemIDOperationCompleted Is Nothing) Then
                Me.GetTrailerDataBySystemIDOperationCompleted = AddressOf Me.OnGetTrailerDataBySystemIDOperationCompleted
            End If
            Me.InvokeAsync("GetTrailerDataBySystemID", New Object() {SystemID}, Me.GetTrailerDataBySystemIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrailerDataBySystemIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrailerDataBySystemIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrailerDataBySystemIDCompleted(Me, New GetTrailerDataBySystemIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetTrailer", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrailer(ByVal SystemID As Integer) As Trailer
            Dim results() As Object = Me.Invoke("GetTrailer", New Object() {SystemID})
            Return CType(results(0),Trailer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrailerAsync(ByVal SystemID As Integer)
            Me.GetTrailerAsync(SystemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrailerAsync(ByVal SystemID As Integer, ByVal userState As Object)
            If (Me.GetTrailerOperationCompleted Is Nothing) Then
                Me.GetTrailerOperationCompleted = AddressOf Me.OnGetTrailerOperationCompleted
            End If
            Me.InvokeAsync("GetTrailer", New Object() {SystemID}, Me.GetTrailerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrailerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrailerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrailerCompleted(Me, New GetTrailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetInboundSheetRecords", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInboundSheetRecords(ByVal LastID As Integer) As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetInboundSheetRecords", New Object() {LastID})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInboundSheetRecordsAsync(ByVal LastID As Integer)
            Me.GetInboundSheetRecordsAsync(LastID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInboundSheetRecordsAsync(ByVal LastID As Integer, ByVal userState As Object)
            If (Me.GetInboundSheetRecordsOperationCompleted Is Nothing) Then
                Me.GetInboundSheetRecordsOperationCompleted = AddressOf Me.OnGetInboundSheetRecordsOperationCompleted
            End If
            Me.InvokeAsync("GetInboundSheetRecords", New Object() {LastID}, Me.GetInboundSheetRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInboundSheetRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInboundSheetRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInboundSheetRecordsCompleted(Me, New GetInboundSheetRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetOutboundSheetRecords", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOutboundSheetRecords(ByVal LastID As Integer) As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetOutboundSheetRecords", New Object() {LastID})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOutboundSheetRecordsAsync(ByVal LastID As Integer)
            Me.GetOutboundSheetRecordsAsync(LastID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOutboundSheetRecordsAsync(ByVal LastID As Integer, ByVal userState As Object)
            If (Me.GetOutboundSheetRecordsOperationCompleted Is Nothing) Then
                Me.GetOutboundSheetRecordsOperationCompleted = AddressOf Me.OnGetOutboundSheetRecordsOperationCompleted
            End If
            Me.InvokeAsync("GetOutboundSheetRecords", New Object() {LastID}, Me.GetOutboundSheetRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOutboundSheetRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOutboundSheetRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOutboundSheetRecordsCompleted(Me, New GetOutboundSheetRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/MarkForYardCheck", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MarkForYardCheck(ByVal Barcode As String) As Integer
            Dim results() As Object = Me.Invoke("MarkForYardCheck", New Object() {Barcode})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MarkForYardCheckAsync(ByVal Barcode As String)
            Me.MarkForYardCheckAsync(Barcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MarkForYardCheckAsync(ByVal Barcode As String, ByVal userState As Object)
            If (Me.MarkForYardCheckOperationCompleted Is Nothing) Then
                Me.MarkForYardCheckOperationCompleted = AddressOf Me.OnMarkForYardCheckOperationCompleted
            End If
            Me.InvokeAsync("MarkForYardCheck", New Object() {Barcode}, Me.MarkForYardCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnMarkForYardCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.MarkForYardCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MarkForYardCheckCompleted(Me, New MarkForYardCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/ResetYardCheck", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ResetYardCheck() As Integer
            Dim results() As Object = Me.Invoke("ResetYardCheck", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ResetYardCheckAsync()
            Me.ResetYardCheckAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetYardCheckAsync(ByVal userState As Object)
            If (Me.ResetYardCheckOperationCompleted Is Nothing) Then
                Me.ResetYardCheckOperationCompleted = AddressOf Me.OnResetYardCheckOperationCompleted
            End If
            Me.InvokeAsync("ResetYardCheck", New Object(-1) {}, Me.ResetYardCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetYardCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetYardCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetYardCheckCompleted(Me, New ResetYardCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailerCount", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailerCount() As Integer
            Dim results() As Object = Me.Invoke("GetActiveTrailerCount", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerCountAsync()
            Me.GetActiveTrailerCountAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerCountAsync(ByVal userState As Object)
            If (Me.GetActiveTrailerCountOperationCompleted Is Nothing) Then
                Me.GetActiveTrailerCountOperationCompleted = AddressOf Me.OnGetActiveTrailerCountOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailerCount", New Object(-1) {}, Me.GetActiveTrailerCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailerCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailerCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailerCountCompleted(Me, New GetActiveTrailerCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailers", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailers() As BarcodeDataSet
            Dim results() As Object = Me.Invoke("GetActiveTrailers", New Object(-1) {})
            Return CType(results(0),BarcodeDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersAsync()
            Me.GetActiveTrailersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersAsync(ByVal userState As Object)
            If (Me.GetActiveTrailersOperationCompleted Is Nothing) Then
                Me.GetActiveTrailersOperationCompleted = AddressOf Me.OnGetActiveTrailersOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailers", New Object(-1) {}, Me.GetActiveTrailersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailersCompleted(Me, New GetActiveTrailersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/ProcessYardCheck", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessYardCheck(ByVal TrailerData As BarcodeDataSet, ByVal CheckedBy As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcessYardCheck", New Object() {TrailerData, CheckedBy})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessYardCheckAsync(ByVal TrailerData As BarcodeDataSet, ByVal CheckedBy As String)
            Me.ProcessYardCheckAsync(TrailerData, CheckedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessYardCheckAsync(ByVal TrailerData As BarcodeDataSet, ByVal CheckedBy As String, ByVal userState As Object)
            If (Me.ProcessYardCheckOperationCompleted Is Nothing) Then
                Me.ProcessYardCheckOperationCompleted = AddressOf Me.OnProcessYardCheckOperationCompleted
            End If
            Me.InvokeAsync("ProcessYardCheck", New Object() {TrailerData, CheckedBy}, Me.ProcessYardCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessYardCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessYardCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessYardCheckCompleted(Me, New ProcessYardCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetYardCheckRefData", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetYardCheckRefData() As YardCheckReferenceDataSet
            Dim results() As Object = Me.Invoke("GetYardCheckRefData", New Object(-1) {})
            Return CType(results(0),YardCheckReferenceDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetYardCheckRefDataAsync()
            Me.GetYardCheckRefDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetYardCheckRefDataAsync(ByVal userState As Object)
            If (Me.GetYardCheckRefDataOperationCompleted Is Nothing) Then
                Me.GetYardCheckRefDataOperationCompleted = AddressOf Me.OnGetYardCheckRefDataOperationCompleted
            End If
            Me.InvokeAsync("GetYardCheckRefData", New Object(-1) {}, Me.GetYardCheckRefDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetYardCheckRefDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetYardCheckRefDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetYardCheckRefDataCompleted(Me, New GetYardCheckRefDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetYardCheckReview", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetYardCheckReview(ByVal YardCheckID As Integer) As YardCheckReview
            Dim results() As Object = Me.Invoke("GetYardCheckReview", New Object() {YardCheckID})
            Return CType(results(0),YardCheckReview)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetYardCheckReviewAsync(ByVal YardCheckID As Integer)
            Me.GetYardCheckReviewAsync(YardCheckID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetYardCheckReviewAsync(ByVal YardCheckID As Integer, ByVal userState As Object)
            If (Me.GetYardCheckReviewOperationCompleted Is Nothing) Then
                Me.GetYardCheckReviewOperationCompleted = AddressOf Me.OnGetYardCheckReviewOperationCompleted
            End If
            Me.InvokeAsync("GetYardCheckReview", New Object() {YardCheckID}, Me.GetYardCheckReviewOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetYardCheckReviewOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetYardCheckReviewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetYardCheckReviewCompleted(Me, New GetYardCheckReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/UseRack", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UseRack(ByVal Name As String, ByVal Code As String) As KarLotUser
            Dim results() As Object = Me.Invoke("UseRack", New Object() {Name, Code})
            Return CType(results(0),KarLotUser)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UseRackAsync(ByVal Name As String, ByVal Code As String)
            Me.UseRackAsync(Name, Code, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UseRackAsync(ByVal Name As String, ByVal Code As String, ByVal userState As Object)
            If (Me.UseRackOperationCompleted Is Nothing) Then
                Me.UseRackOperationCompleted = AddressOf Me.OnUseRackOperationCompleted
            End If
            Me.InvokeAsync("UseRack", New Object() {Name, Code}, Me.UseRackOperationCompleted, userState)
        End Sub
        
        Private Sub OnUseRackOperationCompleted(ByVal arg As Object)
            If (Not (Me.UseRackCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UseRackCompleted(Me, New UseRackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveCarriers", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveCarriers() As Carrier()
            Dim results() As Object = Me.Invoke("GetActiveCarriers", New Object(-1) {})
            Return CType(results(0),Carrier())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveCarriersAsync()
            Me.GetActiveCarriersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveCarriersAsync(ByVal userState As Object)
            If (Me.GetActiveCarriersOperationCompleted Is Nothing) Then
                Me.GetActiveCarriersOperationCompleted = AddressOf Me.OnGetActiveCarriersOperationCompleted
            End If
            Me.InvokeAsync("GetActiveCarriers", New Object(-1) {}, Me.GetActiveCarriersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveCarriersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveCarriersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveCarriersCompleted(Me, New GetActiveCarriersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailersByScac", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailersByScac(ByVal Scac As String) As Trailer()
            Dim results() As Object = Me.Invoke("GetActiveTrailersByScac", New Object() {Scac})
            Return CType(results(0),Trailer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByScacAsync(ByVal Scac As String)
            Me.GetActiveTrailersByScacAsync(Scac, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByScacAsync(ByVal Scac As String, ByVal userState As Object)
            If (Me.GetActiveTrailersByScacOperationCompleted Is Nothing) Then
                Me.GetActiveTrailersByScacOperationCompleted = AddressOf Me.OnGetActiveTrailersByScacOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailersByScac", New Object() {Scac}, Me.GetActiveTrailersByScacOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailersByScacOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailersByScacCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailersByScacCompleted(Me, New GetActiveTrailersByScacCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailersByTrailerID", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailersByTrailerID(ByVal pTrailerID As String) As Trailer()
            Dim results() As Object = Me.Invoke("GetActiveTrailersByTrailerID", New Object() {pTrailerID})
            Return CType(results(0),Trailer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByTrailerIDAsync(ByVal pTrailerID As String)
            Me.GetActiveTrailersByTrailerIDAsync(pTrailerID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByTrailerIDAsync(ByVal pTrailerID As String, ByVal userState As Object)
            If (Me.GetActiveTrailersByTrailerIDOperationCompleted Is Nothing) Then
                Me.GetActiveTrailersByTrailerIDOperationCompleted = AddressOf Me.OnGetActiveTrailersByTrailerIDOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailersByTrailerID", New Object() {pTrailerID}, Me.GetActiveTrailersByTrailerIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailersByTrailerIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailersByTrailerIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailersByTrailerIDCompleted(Me, New GetActiveTrailersByTrailerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailersDataset", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailersDataset() As ActiveTrailerDataSet
            Dim results() As Object = Me.Invoke("GetActiveTrailersDataset", New Object(-1) {})
            Return CType(results(0),ActiveTrailerDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersDatasetAsync()
            Me.GetActiveTrailersDatasetAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersDatasetAsync(ByVal userState As Object)
            If (Me.GetActiveTrailersDatasetOperationCompleted Is Nothing) Then
                Me.GetActiveTrailersDatasetOperationCompleted = AddressOf Me.OnGetActiveTrailersDatasetOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailersDataset", New Object(-1) {}, Me.GetActiveTrailersDatasetOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailersDatasetOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailersDatasetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailersDatasetCompleted(Me, New GetActiveTrailersDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailersByLoadStatus", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailersByLoadStatus(ByVal pLoadStatus As String) As Trailer()
            Dim results() As Object = Me.Invoke("GetActiveTrailersByLoadStatus", New Object() {pLoadStatus})
            Return CType(results(0),Trailer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByLoadStatusAsync(ByVal pLoadStatus As String)
            Me.GetActiveTrailersByLoadStatusAsync(pLoadStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByLoadStatusAsync(ByVal pLoadStatus As String, ByVal userState As Object)
            If (Me.GetActiveTrailersByLoadStatusOperationCompleted Is Nothing) Then
                Me.GetActiveTrailersByLoadStatusOperationCompleted = AddressOf Me.OnGetActiveTrailersByLoadStatusOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailersByLoadStatus", New Object() {pLoadStatus}, Me.GetActiveTrailersByLoadStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailersByLoadStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailersByLoadStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailersByLoadStatusCompleted(Me, New GetActiveTrailersByLoadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/SetTrailerOutOfService", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetTrailerOutOfService(ByVal pTrailerSystemId As Integer, ByVal pNotes As String) As Trailer
            Dim results() As Object = Me.Invoke("SetTrailerOutOfService", New Object() {pTrailerSystemId, pNotes})
            Return CType(results(0),Trailer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetTrailerOutOfServiceAsync(ByVal pTrailerSystemId As Integer, ByVal pNotes As String)
            Me.SetTrailerOutOfServiceAsync(pTrailerSystemId, pNotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTrailerOutOfServiceAsync(ByVal pTrailerSystemId As Integer, ByVal pNotes As String, ByVal userState As Object)
            If (Me.SetTrailerOutOfServiceOperationCompleted Is Nothing) Then
                Me.SetTrailerOutOfServiceOperationCompleted = AddressOf Me.OnSetTrailerOutOfServiceOperationCompleted
            End If
            Me.InvokeAsync("SetTrailerOutOfService", New Object() {pTrailerSystemId, pNotes}, Me.SetTrailerOutOfServiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetTrailerOutOfServiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetTrailerOutOfServiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetTrailerOutOfServiceCompleted(Me, New SetTrailerOutOfServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/SetTrailerInService", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetTrailerInService(ByVal pTrailerSystemId As Integer, ByVal pNotes As String) As Trailer
            Dim results() As Object = Me.Invoke("SetTrailerInService", New Object() {pTrailerSystemId, pNotes})
            Return CType(results(0),Trailer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetTrailerInServiceAsync(ByVal pTrailerSystemId As Integer, ByVal pNotes As String)
            Me.SetTrailerInServiceAsync(pTrailerSystemId, pNotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTrailerInServiceAsync(ByVal pTrailerSystemId As Integer, ByVal pNotes As String, ByVal userState As Object)
            If (Me.SetTrailerInServiceOperationCompleted Is Nothing) Then
                Me.SetTrailerInServiceOperationCompleted = AddressOf Me.OnSetTrailerInServiceOperationCompleted
            End If
            Me.InvokeAsync("SetTrailerInService", New Object() {pTrailerSystemId, pNotes}, Me.SetTrailerInServiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetTrailerInServiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetTrailerInServiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetTrailerInServiceCompleted(Me, New SetTrailerInServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetMoves", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMoves() As TrailerMoveTO()
            Dim results() As Object = Me.Invoke("GetMoves", New Object(-1) {})
            Return CType(results(0),TrailerMoveTO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMovesAsync()
            Me.GetMovesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMovesAsync(ByVal userState As Object)
            If (Me.GetMovesOperationCompleted Is Nothing) Then
                Me.GetMovesOperationCompleted = AddressOf Me.OnGetMovesOperationCompleted
            End If
            Me.InvokeAsync("GetMoves", New Object(-1) {}, Me.GetMovesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMovesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMovesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMovesCompleted(Me, New GetMovesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/TakeMoveCalledToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TakeMoveCalledToDoor(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("TakeMoveCalledToDoor", New Object() {tMove, User, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String)
            Me.TakeMoveCalledToDoorAsync(tMove, User, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.TakeMoveCalledToDoorOperationCompleted Is Nothing) Then
                Me.TakeMoveCalledToDoorOperationCompleted = AddressOf Me.OnTakeMoveCalledToDoorOperationCompleted
            End If
            Me.InvokeAsync("TakeMoveCalledToDoor", New Object() {tMove, User, StationID}, Me.TakeMoveCalledToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnTakeMoveCalledToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.TakeMoveCalledToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TakeMoveCalledToDoorCompleted(Me, New TakeMoveCalledToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/TakeMoveCalledFromWashDock", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TakeMoveCalledFromWashDock(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("TakeMoveCalledFromWashDock", New Object() {tMove, User, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledFromWashDockAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String)
            Me.TakeMoveCalledFromWashDockAsync(tMove, User, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledFromWashDockAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.TakeMoveCalledFromWashDockOperationCompleted Is Nothing) Then
                Me.TakeMoveCalledFromWashDockOperationCompleted = AddressOf Me.OnTakeMoveCalledFromWashDockOperationCompleted
            End If
            Me.InvokeAsync("TakeMoveCalledFromWashDock", New Object() {tMove, User, StationID}, Me.TakeMoveCalledFromWashDockOperationCompleted, userState)
        End Sub
        
        Private Sub OnTakeMoveCalledFromWashDockOperationCompleted(ByVal arg As Object)
            If (Not (Me.TakeMoveCalledFromWashDockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TakeMoveCalledFromWashDockCompleted(Me, New TakeMoveCalledFromWashDockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/TakeMoveCalledOutDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TakeMoveCalledOutDoor(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("TakeMoveCalledOutDoor", New Object() {tMove, User, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledOutDoorAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String)
            Me.TakeMoveCalledOutDoorAsync(tMove, User, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledOutDoorAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.TakeMoveCalledOutDoorOperationCompleted Is Nothing) Then
                Me.TakeMoveCalledOutDoorOperationCompleted = AddressOf Me.OnTakeMoveCalledOutDoorOperationCompleted
            End If
            Me.InvokeAsync("TakeMoveCalledOutDoor", New Object() {tMove, User, StationID}, Me.TakeMoveCalledOutDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnTakeMoveCalledOutDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.TakeMoveCalledOutDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TakeMoveCalledOutDoorCompleted(Me, New TakeMoveCalledOutDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/TakeMoveCalledDoorToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TakeMoveCalledDoorToDoor(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("TakeMoveCalledDoorToDoor", New Object() {tMove, User, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledDoorToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String)
            Me.TakeMoveCalledDoorToDoorAsync(tMove, User, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TakeMoveCalledDoorToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.TakeMoveCalledDoorToDoorOperationCompleted Is Nothing) Then
                Me.TakeMoveCalledDoorToDoorOperationCompleted = AddressOf Me.OnTakeMoveCalledDoorToDoorOperationCompleted
            End If
            Me.InvokeAsync("TakeMoveCalledDoorToDoor", New Object() {tMove, User, StationID}, Me.TakeMoveCalledDoorToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnTakeMoveCalledDoorToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.TakeMoveCalledDoorToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TakeMoveCalledDoorToDoorCompleted(Me, New TakeMoveCalledDoorToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/PickupFromDoorToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupFromDoorToDoor(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("PickupFromDoorToDoor", New Object() {tMove, pUserID, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupFromDoorToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String)
            Me.PickupFromDoorToDoorAsync(tMove, pUserID, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupFromDoorToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.PickupFromDoorToDoorOperationCompleted Is Nothing) Then
                Me.PickupFromDoorToDoorOperationCompleted = AddressOf Me.OnPickupFromDoorToDoorOperationCompleted
            End If
            Me.InvokeAsync("PickupFromDoorToDoor", New Object() {tMove, pUserID, StationID}, Me.PickupFromDoorToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupFromDoorToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupFromDoorToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupFromDoorToDoorCompleted(Me, New PickupFromDoorToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/PickupFromLotToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupFromLotToDoor(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("PickupFromLotToDoor", New Object() {tMove, pUserID, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupFromLotToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String)
            Me.PickupFromLotToDoorAsync(tMove, pUserID, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupFromLotToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.PickupFromLotToDoorOperationCompleted Is Nothing) Then
                Me.PickupFromLotToDoorOperationCompleted = AddressOf Me.OnPickupFromLotToDoorOperationCompleted
            End If
            Me.InvokeAsync("PickupFromLotToDoor", New Object() {tMove, pUserID, StationID}, Me.PickupFromLotToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupFromLotToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupFromLotToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupFromLotToDoorCompleted(Me, New PickupFromLotToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/PickupFromWashDockToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupFromWashDockToDoor(ByVal tMove As TrailerMoveTO, ByVal pUser As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("PickupFromWashDockToDoor", New Object() {tMove, pUser, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupFromWashDockToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal pUser As String, ByVal StationID As String)
            Me.PickupFromWashDockToDoorAsync(tMove, pUser, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupFromWashDockToDoorAsync(ByVal tMove As TrailerMoveTO, ByVal pUser As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.PickupFromWashDockToDoorOperationCompleted Is Nothing) Then
                Me.PickupFromWashDockToDoorOperationCompleted = AddressOf Me.OnPickupFromWashDockToDoorOperationCompleted
            End If
            Me.InvokeAsync("PickupFromWashDockToDoor", New Object() {tMove, pUser, StationID}, Me.PickupFromWashDockToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupFromWashDockToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupFromWashDockToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupFromWashDockToDoorCompleted(Me, New PickupFromWashDockToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/PickupFromDoorToLot", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupFromDoorToLot(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("PickupFromDoorToLot", New Object() {tMove, pUserID, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupFromDoorToLotAsync(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String)
            Me.PickupFromDoorToLotAsync(tMove, pUserID, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupFromDoorToLotAsync(ByVal tMove As TrailerMoveTO, ByVal pUserID As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.PickupFromDoorToLotOperationCompleted Is Nothing) Then
                Me.PickupFromDoorToLotOperationCompleted = AddressOf Me.OnPickupFromDoorToLotOperationCompleted
            End If
            Me.InvokeAsync("PickupFromDoorToLot", New Object() {tMove, pUserID, StationID}, Me.PickupFromDoorToLotOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupFromDoorToLotOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupFromDoorToLotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupFromDoorToLotCompleted(Me, New PickupFromDoorToLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/PickupForRelocate", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupForRelocate(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("PickupForRelocate", New Object() {pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupForRelocateAsync(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean)
            Me.PickupForRelocateAsync(pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupForRelocateAsync(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal userState As Object)
            If (Me.PickupForRelocateOperationCompleted Is Nothing) Then
                Me.PickupForRelocateOperationCompleted = AddressOf Me.OnPickupForRelocateOperationCompleted
            End If
            Me.InvokeAsync("PickupForRelocate", New Object() {pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove}, Me.PickupForRelocateOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupForRelocateOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupForRelocateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupForRelocateCompleted(Me, New PickupForRelocateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/ParkAtDoorDestination", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ParkAtDoorDestination(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("ParkAtDoorDestination", New Object() {tMove, User, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ParkAtDoorDestinationAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String)
            Me.ParkAtDoorDestinationAsync(tMove, User, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ParkAtDoorDestinationAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.ParkAtDoorDestinationOperationCompleted Is Nothing) Then
                Me.ParkAtDoorDestinationOperationCompleted = AddressOf Me.OnParkAtDoorDestinationOperationCompleted
            End If
            Me.InvokeAsync("ParkAtDoorDestination", New Object() {tMove, User, StationID}, Me.ParkAtDoorDestinationOperationCompleted, userState)
        End Sub
        
        Private Sub OnParkAtDoorDestinationOperationCompleted(ByVal arg As Object)
            If (Not (Me.ParkAtDoorDestinationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ParkAtDoorDestinationCompleted(Me, New ParkAtDoorDestinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/ParkAtLotLocation", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ParkAtLotLocation(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("ParkAtLotLocation", New Object() {tMove, User, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ParkAtLotLocationAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String)
            Me.ParkAtLotLocationAsync(tMove, User, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ParkAtLotLocationAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.ParkAtLotLocationOperationCompleted Is Nothing) Then
                Me.ParkAtLotLocationOperationCompleted = AddressOf Me.OnParkAtLotLocationOperationCompleted
            End If
            Me.InvokeAsync("ParkAtLotLocation", New Object() {tMove, User, StationID}, Me.ParkAtLotLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnParkAtLotLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.ParkAtLotLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ParkAtLotLocationCompleted(Me, New ParkAtLotLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/ParkAtWashDockLocation", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ParkAtWashDockLocation(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("ParkAtWashDockLocation", New Object() {tMove, User, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ParkAtWashDockLocationAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String)
            Me.ParkAtWashDockLocationAsync(tMove, User, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ParkAtWashDockLocationAsync(ByVal tMove As TrailerMoveTO, ByVal User As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.ParkAtWashDockLocationOperationCompleted Is Nothing) Then
                Me.ParkAtWashDockLocationOperationCompleted = AddressOf Me.OnParkAtWashDockLocationOperationCompleted
            End If
            Me.InvokeAsync("ParkAtWashDockLocation", New Object() {tMove, User, StationID}, Me.ParkAtWashDockLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnParkAtWashDockLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.ParkAtWashDockLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ParkAtWashDockLocationCompleted(Me, New ParkAtWashDockLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetOpenTaskCount", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOpenTaskCount() As Integer
            Dim results() As Object = Me.Invoke("GetOpenTaskCount", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOpenTaskCountAsync()
            Me.GetOpenTaskCountAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOpenTaskCountAsync(ByVal userState As Object)
            If (Me.GetOpenTaskCountOperationCompleted Is Nothing) Then
                Me.GetOpenTaskCountOperationCompleted = AddressOf Me.OnGetOpenTaskCountOperationCompleted
            End If
            Me.InvokeAsync("GetOpenTaskCount", New Object(-1) {}, Me.GetOpenTaskCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOpenTaskCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOpenTaskCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOpenTaskCountCompleted(Me, New GetOpenTaskCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetUserTaskCount", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserTaskCount(ByVal UserID As String) As Integer
            Dim results() As Object = Me.Invoke("GetUserTaskCount", New Object() {UserID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserTaskCountAsync(ByVal UserID As String)
            Me.GetUserTaskCountAsync(UserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserTaskCountAsync(ByVal UserID As String, ByVal userState As Object)
            If (Me.GetUserTaskCountOperationCompleted Is Nothing) Then
                Me.GetUserTaskCountOperationCompleted = AddressOf Me.OnGetUserTaskCountOperationCompleted
            End If
            Me.InvokeAsync("GetUserTaskCount", New Object() {UserID}, Me.GetUserTaskCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserTaskCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserTaskCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserTaskCountCompleted(Me, New GetUserTaskCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetUserTasks", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserTasks(ByVal UserID As String) As TasksDataSet
            Dim results() As Object = Me.Invoke("GetUserTasks", New Object() {UserID})
            Return CType(results(0),TasksDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserTasksAsync(ByVal UserID As String)
            Me.GetUserTasksAsync(UserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserTasksAsync(ByVal UserID As String, ByVal userState As Object)
            If (Me.GetUserTasksOperationCompleted Is Nothing) Then
                Me.GetUserTasksOperationCompleted = AddressOf Me.OnGetUserTasksOperationCompleted
            End If
            Me.InvokeAsync("GetUserTasks", New Object() {UserID}, Me.GetUserTasksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserTasksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserTasksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserTasksCompleted(Me, New GetUserTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetAllOpenTasks", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllOpenTasks() As TasksDataSet
            Dim results() As Object = Me.Invoke("GetAllOpenTasks", New Object(-1) {})
            Return CType(results(0),TasksDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllOpenTasksAsync()
            Me.GetAllOpenTasksAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllOpenTasksAsync(ByVal userState As Object)
            If (Me.GetAllOpenTasksOperationCompleted Is Nothing) Then
                Me.GetAllOpenTasksOperationCompleted = AddressOf Me.OnGetAllOpenTasksOperationCompleted
            End If
            Me.InvokeAsync("GetAllOpenTasks", New Object(-1) {}, Me.GetAllOpenTasksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllOpenTasksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllOpenTasksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllOpenTasksCompleted(Me, New GetAllOpenTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AssignTaskToUser", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AssignTaskToUser(ByVal TaskID As Integer, ByVal UserID As String) As Integer
            Dim results() As Object = Me.Invoke("AssignTaskToUser", New Object() {TaskID, UserID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AssignTaskToUserAsync(ByVal TaskID As Integer, ByVal UserID As String)
            Me.AssignTaskToUserAsync(TaskID, UserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignTaskToUserAsync(ByVal TaskID As Integer, ByVal UserID As String, ByVal userState As Object)
            If (Me.AssignTaskToUserOperationCompleted Is Nothing) Then
                Me.AssignTaskToUserOperationCompleted = AddressOf Me.OnAssignTaskToUserOperationCompleted
            End If
            Me.InvokeAsync("AssignTaskToUser", New Object() {TaskID, UserID}, Me.AssignTaskToUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAssignTaskToUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AssignTaskToUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AssignTaskToUserCompleted(Me, New AssignTaskToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/TaskFinished", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TaskFinished(ByVal TaskID As Integer) As Integer
            Dim results() As Object = Me.Invoke("TaskFinished", New Object() {TaskID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TaskFinishedAsync(ByVal TaskID As Integer)
            Me.TaskFinishedAsync(TaskID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TaskFinishedAsync(ByVal TaskID As Integer, ByVal userState As Object)
            If (Me.TaskFinishedOperationCompleted Is Nothing) Then
                Me.TaskFinishedOperationCompleted = AddressOf Me.OnTaskFinishedOperationCompleted
            End If
            Me.InvokeAsync("TaskFinished", New Object() {TaskID}, Me.TaskFinishedOperationCompleted, userState)
        End Sub
        
        Private Sub OnTaskFinishedOperationCompleted(ByVal arg As Object)
            If (Not (Me.TaskFinishedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TaskFinishedCompleted(Me, New TaskFinishedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CompleteTaskByUser", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CompleteTaskByUser(ByVal pTaskID As Integer, ByVal pTaskType As String, ByVal pTrailerSystemID As Integer, ByVal UserID As String) As Boolean
            Dim results() As Object = Me.Invoke("CompleteTaskByUser", New Object() {pTaskID, pTaskType, pTrailerSystemID, UserID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CompleteTaskByUserAsync(ByVal pTaskID As Integer, ByVal pTaskType As String, ByVal pTrailerSystemID As Integer, ByVal UserID As String)
            Me.CompleteTaskByUserAsync(pTaskID, pTaskType, pTrailerSystemID, UserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CompleteTaskByUserAsync(ByVal pTaskID As Integer, ByVal pTaskType As String, ByVal pTrailerSystemID As Integer, ByVal UserID As String, ByVal userState As Object)
            If (Me.CompleteTaskByUserOperationCompleted Is Nothing) Then
                Me.CompleteTaskByUserOperationCompleted = AddressOf Me.OnCompleteTaskByUserOperationCompleted
            End If
            Me.InvokeAsync("CompleteTaskByUser", New Object() {pTaskID, pTaskType, pTrailerSystemID, UserID}, Me.CompleteTaskByUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnCompleteTaskByUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.CompleteTaskByUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CompleteTaskByUserCompleted(Me, New CompleteTaskByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/IsMoveCancelled", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsMoveCancelled(ByVal pOrigMoveID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("IsMoveCancelled", New Object() {pOrigMoveID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsMoveCancelledAsync(ByVal pOrigMoveID As Integer)
            Me.IsMoveCancelledAsync(pOrigMoveID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsMoveCancelledAsync(ByVal pOrigMoveID As Integer, ByVal userState As Object)
            If (Me.IsMoveCancelledOperationCompleted Is Nothing) Then
                Me.IsMoveCancelledOperationCompleted = AddressOf Me.OnIsMoveCancelledOperationCompleted
            End If
            Me.InvokeAsync("IsMoveCancelled", New Object() {pOrigMoveID}, Me.IsMoveCancelledOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsMoveCancelledOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsMoveCancelledCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsMoveCancelledCompleted(Me, New IsMoveCancelledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/IsMoveTaken", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsMoveTaken(ByVal pMoveID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("IsMoveTaken", New Object() {pMoveID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsMoveTakenAsync(ByVal pMoveID As Integer)
            Me.IsMoveTakenAsync(pMoveID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsMoveTakenAsync(ByVal pMoveID As Integer, ByVal userState As Object)
            If (Me.IsMoveTakenOperationCompleted Is Nothing) Then
                Me.IsMoveTakenOperationCompleted = AddressOf Me.OnIsMoveTakenOperationCompleted
            End If
            Me.InvokeAsync("IsMoveTaken", New Object() {pMoveID}, Me.IsMoveTakenOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsMoveTakenOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsMoveTakenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsMoveTakenCompleted(Me, New IsMoveTakenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetMoveChecksum", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMoveChecksum() As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> System.Nullable(Of Integer)
            Dim results() As Object = Me.Invoke("GetMoveChecksum", New Object(-1) {})
            Return CType(results(0),System.Nullable(Of Integer))
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMoveChecksumAsync()
            Me.GetMoveChecksumAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMoveChecksumAsync(ByVal userState As Object)
            If (Me.GetMoveChecksumOperationCompleted Is Nothing) Then
                Me.GetMoveChecksumOperationCompleted = AddressOf Me.OnGetMoveChecksumOperationCompleted
            End If
            Me.InvokeAsync("GetMoveChecksum", New Object(-1) {}, Me.GetMoveChecksumOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMoveChecksumOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMoveChecksumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMoveChecksumCompleted(Me, New GetMoveChecksumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetServerTime", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServerTime() As Date
            Dim results() As Object = Me.Invoke("GetServerTime", New Object(-1) {})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServerTimeAsync()
            Me.GetServerTimeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServerTimeAsync(ByVal userState As Object)
            If (Me.GetServerTimeOperationCompleted Is Nothing) Then
                Me.GetServerTimeOperationCompleted = AddressOf Me.OnGetServerTimeOperationCompleted
            End If
            Me.InvokeAsync("GetServerTime", New Object(-1) {}, Me.GetServerTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServerTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServerTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServerTimeCompleted(Me, New GetServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/SetTrailerSeals", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetTrailerSeals(ByVal pTrailerSystemId As Integer, ByVal pSeal1 As String, ByVal pSeal2 As String, ByVal pSeal3 As String, ByVal pUser As String, ByVal StationID As String) As Boolean
            Dim results() As Object = Me.Invoke("SetTrailerSeals", New Object() {pTrailerSystemId, pSeal1, pSeal2, pSeal3, pUser, StationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetTrailerSealsAsync(ByVal pTrailerSystemId As Integer, ByVal pSeal1 As String, ByVal pSeal2 As String, ByVal pSeal3 As String, ByVal pUser As String, ByVal StationID As String)
            Me.SetTrailerSealsAsync(pTrailerSystemId, pSeal1, pSeal2, pSeal3, pUser, StationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTrailerSealsAsync(ByVal pTrailerSystemId As Integer, ByVal pSeal1 As String, ByVal pSeal2 As String, ByVal pSeal3 As String, ByVal pUser As String, ByVal StationID As String, ByVal userState As Object)
            If (Me.SetTrailerSealsOperationCompleted Is Nothing) Then
                Me.SetTrailerSealsOperationCompleted = AddressOf Me.OnSetTrailerSealsOperationCompleted
            End If
            Me.InvokeAsync("SetTrailerSeals", New Object() {pTrailerSystemId, pSeal1, pSeal2, pSeal3, pUser, StationID}, Me.SetTrailerSealsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetTrailerSealsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetTrailerSealsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetTrailerSealsCompleted(Me, New SetTrailerSealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetBuildings", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBuildings() As Building()
            Dim results() As Object = Me.Invoke("GetBuildings", New Object(-1) {})
            Return CType(results(0),Building())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBuildingsAsync()
            Me.GetBuildingsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBuildingsAsync(ByVal userState As Object)
            If (Me.GetBuildingsOperationCompleted Is Nothing) Then
                Me.GetBuildingsOperationCompleted = AddressOf Me.OnGetBuildingsOperationCompleted
            End If
            Me.InvokeAsync("GetBuildings", New Object(-1) {}, Me.GetBuildingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBuildingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBuildingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBuildingsCompleted(Me, New GetBuildingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetBuildingsByDroptype", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBuildingsByDroptype(ByVal DropType As String) As Building()
            Dim results() As Object = Me.Invoke("GetBuildingsByDroptype", New Object() {DropType})
            Return CType(results(0),Building())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBuildingsByDroptypeAsync(ByVal DropType As String)
            Me.GetBuildingsByDroptypeAsync(DropType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBuildingsByDroptypeAsync(ByVal DropType As String, ByVal userState As Object)
            If (Me.GetBuildingsByDroptypeOperationCompleted Is Nothing) Then
                Me.GetBuildingsByDroptypeOperationCompleted = AddressOf Me.OnGetBuildingsByDroptypeOperationCompleted
            End If
            Me.InvokeAsync("GetBuildingsByDroptype", New Object() {DropType}, Me.GetBuildingsByDroptypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBuildingsByDroptypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBuildingsByDroptypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBuildingsByDroptypeCompleted(Me, New GetBuildingsByDroptypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetDoors", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDoors(ByVal BuildingID As String) As Door()
            Dim results() As Object = Me.Invoke("GetDoors", New Object() {BuildingID})
            Return CType(results(0),Door())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDoorsAsync(ByVal BuildingID As String)
            Me.GetDoorsAsync(BuildingID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDoorsAsync(ByVal BuildingID As String, ByVal userState As Object)
            If (Me.GetDoorsOperationCompleted Is Nothing) Then
                Me.GetDoorsOperationCompleted = AddressOf Me.OnGetDoorsOperationCompleted
            End If
            Me.InvokeAsync("GetDoors", New Object() {BuildingID}, Me.GetDoorsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDoorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDoorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDoorsCompleted(Me, New GetDoorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CallTrailerMoveToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallTrailerMoveToDoor(ByVal pTrailer As Trailer, ByVal pNewTemp As String, ByVal pPalletsNeeded As String, ByVal pUser As String, ByVal pStationID As String, ByVal pDoor As String, ByVal pStopOffLocation As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal pUserInitials As String) As Boolean
            Dim results() As Object = Me.Invoke("CallTrailerMoveToDoor", New Object() {pTrailer, pNewTemp, pPalletsNeeded, pUser, pStationID, pDoor, pStopOffLocation, pSpecialInstructions, pPriorityMove, pUserInitials})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallTrailerMoveToDoorAsync(ByVal pTrailer As Trailer, ByVal pNewTemp As String, ByVal pPalletsNeeded As String, ByVal pUser As String, ByVal pStationID As String, ByVal pDoor As String, ByVal pStopOffLocation As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal pUserInitials As String)
            Me.CallTrailerMoveToDoorAsync(pTrailer, pNewTemp, pPalletsNeeded, pUser, pStationID, pDoor, pStopOffLocation, pSpecialInstructions, pPriorityMove, pUserInitials, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallTrailerMoveToDoorAsync(ByVal pTrailer As Trailer, ByVal pNewTemp As String, ByVal pPalletsNeeded As String, ByVal pUser As String, ByVal pStationID As String, ByVal pDoor As String, ByVal pStopOffLocation As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal pUserInitials As String, ByVal userState As Object)
            If (Me.CallTrailerMoveToDoorOperationCompleted Is Nothing) Then
                Me.CallTrailerMoveToDoorOperationCompleted = AddressOf Me.OnCallTrailerMoveToDoorOperationCompleted
            End If
            Me.InvokeAsync("CallTrailerMoveToDoor", New Object() {pTrailer, pNewTemp, pPalletsNeeded, pUser, pStationID, pDoor, pStopOffLocation, pSpecialInstructions, pPriorityMove, pUserInitials}, Me.CallTrailerMoveToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallTrailerMoveToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallTrailerMoveToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallTrailerMoveToDoorCompleted(Me, New CallTrailerMoveToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CallTrailerMoveOutDoorToLot", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallTrailerMoveOutDoorToLot(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("CallTrailerMoveOutDoorToLot", New Object() {pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallTrailerMoveOutDoorToLotAsync(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean)
            Me.CallTrailerMoveOutDoorToLotAsync(pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallTrailerMoveOutDoorToLotAsync(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal userState As Object)
            If (Me.CallTrailerMoveOutDoorToLotOperationCompleted Is Nothing) Then
                Me.CallTrailerMoveOutDoorToLotOperationCompleted = AddressOf Me.OnCallTrailerMoveOutDoorToLotOperationCompleted
            End If
            Me.InvokeAsync("CallTrailerMoveOutDoorToLot", New Object() {pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove}, Me.CallTrailerMoveOutDoorToLotOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallTrailerMoveOutDoorToLotOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallTrailerMoveOutDoorToLotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallTrailerMoveOutDoorToLotCompleted(Me, New CallTrailerMoveOutDoorToLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CallTrailerMoveOutDoorToDoor", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallTrailerMoveOutDoorToDoor(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal pNextDoor As String) As Boolean
            Dim results() As Object = Me.Invoke("CallTrailerMoveOutDoorToDoor", New Object() {pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove, pNextDoor})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallTrailerMoveOutDoorToDoorAsync(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal pNextDoor As String)
            Me.CallTrailerMoveOutDoorToDoorAsync(pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove, pNextDoor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallTrailerMoveOutDoorToDoorAsync(ByVal pTrailer As Trailer, ByVal pUser As String, ByVal pStationID As String, ByVal pSpecialInstructions As String, ByVal pPriorityMove As Boolean, ByVal pNextDoor As String, ByVal userState As Object)
            If (Me.CallTrailerMoveOutDoorToDoorOperationCompleted Is Nothing) Then
                Me.CallTrailerMoveOutDoorToDoorOperationCompleted = AddressOf Me.OnCallTrailerMoveOutDoorToDoorOperationCompleted
            End If
            Me.InvokeAsync("CallTrailerMoveOutDoorToDoor", New Object() {pTrailer, pUser, pStationID, pSpecialInstructions, pPriorityMove, pNextDoor}, Me.CallTrailerMoveOutDoorToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallTrailerMoveOutDoorToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallTrailerMoveOutDoorToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallTrailerMoveOutDoorToDoorCompleted(Me, New CallTrailerMoveOutDoorToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailerMoves", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailerMoves(ByVal pSystemID As Integer) As TrailerMoveTO()
            Dim results() As Object = Me.Invoke("GetActiveTrailerMoves", New Object() {pSystemID})
            Return CType(results(0),TrailerMoveTO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerMovesAsync(ByVal pSystemID As Integer)
            Me.GetActiveTrailerMovesAsync(pSystemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerMovesAsync(ByVal pSystemID As Integer, ByVal userState As Object)
            If (Me.GetActiveTrailerMovesOperationCompleted Is Nothing) Then
                Me.GetActiveTrailerMovesOperationCompleted = AddressOf Me.OnGetActiveTrailerMovesOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailerMoves", New Object() {pSystemID}, Me.GetActiveTrailerMovesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailerMovesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailerMovesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailerMovesCompleted(Me, New GetActiveTrailerMovesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AddPalletTask", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPalletTask(ByVal UserID As String, ByVal DetailsText As String, ByVal Carrier As String, ByVal TrailerID As String, ByVal PalletType As String, ByVal Priority As Integer) As Integer
            Dim results() As Object = Me.Invoke("AddPalletTask", New Object() {UserID, DetailsText, Carrier, TrailerID, PalletType, Priority})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddPalletTaskAsync(ByVal UserID As String, ByVal DetailsText As String, ByVal Carrier As String, ByVal TrailerID As String, ByVal PalletType As String, ByVal Priority As Integer)
            Me.AddPalletTaskAsync(UserID, DetailsText, Carrier, TrailerID, PalletType, Priority, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPalletTaskAsync(ByVal UserID As String, ByVal DetailsText As String, ByVal Carrier As String, ByVal TrailerID As String, ByVal PalletType As String, ByVal Priority As Integer, ByVal userState As Object)
            If (Me.AddPalletTaskOperationCompleted Is Nothing) Then
                Me.AddPalletTaskOperationCompleted = AddressOf Me.OnAddPalletTaskOperationCompleted
            End If
            Me.InvokeAsync("AddPalletTask", New Object() {UserID, DetailsText, Carrier, TrailerID, PalletType, Priority}, Me.AddPalletTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPalletTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPalletTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPalletTaskCompleted(Me, New AddPalletTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AddBasicTask", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddBasicTask(ByVal TaskDetails As String, ByVal UserID As String, ByVal Priority As Integer) As Integer
            Dim results() As Object = Me.Invoke("AddBasicTask", New Object() {TaskDetails, UserID, Priority})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddBasicTaskAsync(ByVal TaskDetails As String, ByVal UserID As String, ByVal Priority As Integer)
            Me.AddBasicTaskAsync(TaskDetails, UserID, Priority, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddBasicTaskAsync(ByVal TaskDetails As String, ByVal UserID As String, ByVal Priority As Integer, ByVal userState As Object)
            If (Me.AddBasicTaskOperationCompleted Is Nothing) Then
                Me.AddBasicTaskOperationCompleted = AddressOf Me.OnAddBasicTaskOperationCompleted
            End If
            Me.InvokeAsync("AddBasicTask", New Object() {TaskDetails, UserID, Priority}, Me.AddBasicTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddBasicTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddBasicTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddBasicTaskCompleted(Me, New AddBasicTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetTaskTextItems", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskTextItems() As TaskTextDataSet.TaskTextDataTable
            Dim results() As Object = Me.Invoke("GetTaskTextItems", New Object(-1) {})
            Return CType(results(0),TaskTextDataSet.TaskTextDataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTaskTextItemsAsync()
            Me.GetTaskTextItemsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTaskTextItemsAsync(ByVal userState As Object)
            If (Me.GetTaskTextItemsOperationCompleted Is Nothing) Then
                Me.GetTaskTextItemsOperationCompleted = AddressOf Me.OnGetTaskTextItemsOperationCompleted
            End If
            Me.InvokeAsync("GetTaskTextItems", New Object(-1) {}, Me.GetTaskTextItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTaskTextItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTaskTextItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTaskTextItemsCompleted(Me, New GetTaskTextItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetTaskArgsList", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskArgsList() As TaskTextArgTO()
            Dim results() As Object = Me.Invoke("GetTaskArgsList", New Object(-1) {})
            Return CType(results(0),TaskTextArgTO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTaskArgsListAsync()
            Me.GetTaskArgsListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTaskArgsListAsync(ByVal userState As Object)
            If (Me.GetTaskArgsListOperationCompleted Is Nothing) Then
                Me.GetTaskArgsListOperationCompleted = AddressOf Me.OnGetTaskArgsListOperationCompleted
            End If
            Me.InvokeAsync("GetTaskArgsList", New Object(-1) {}, Me.GetTaskArgsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTaskArgsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTaskArgsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTaskArgsListCompleted(Me, New GetTaskArgsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetUpdateTrailerDS", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUpdateTrailerDS() As UpdateTrailerDataSet
            Dim results() As Object = Me.Invoke("GetUpdateTrailerDS", New Object(-1) {})
            Return CType(results(0),UpdateTrailerDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUpdateTrailerDSAsync()
            Me.GetUpdateTrailerDSAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUpdateTrailerDSAsync(ByVal userState As Object)
            If (Me.GetUpdateTrailerDSOperationCompleted Is Nothing) Then
                Me.GetUpdateTrailerDSOperationCompleted = AddressOf Me.OnGetUpdateTrailerDSOperationCompleted
            End If
            Me.InvokeAsync("GetUpdateTrailerDS", New Object(-1) {}, Me.GetUpdateTrailerDSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUpdateTrailerDSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUpdateTrailerDSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUpdateTrailerDSCompleted(Me, New GetUpdateTrailerDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/PostUpdateTrailerInfo", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostUpdateTrailerInfo(ByVal UpdateTrailerDS As UpdateTrailerDataSet) As Integer
            Dim results() As Object = Me.Invoke("PostUpdateTrailerInfo", New Object() {UpdateTrailerDS})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostUpdateTrailerInfoAsync(ByVal UpdateTrailerDS As UpdateTrailerDataSet)
            Me.PostUpdateTrailerInfoAsync(UpdateTrailerDS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostUpdateTrailerInfoAsync(ByVal UpdateTrailerDS As UpdateTrailerDataSet, ByVal userState As Object)
            If (Me.PostUpdateTrailerInfoOperationCompleted Is Nothing) Then
                Me.PostUpdateTrailerInfoOperationCompleted = AddressOf Me.OnPostUpdateTrailerInfoOperationCompleted
            End If
            Me.InvokeAsync("PostUpdateTrailerInfo", New Object() {UpdateTrailerDS}, Me.PostUpdateTrailerInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostUpdateTrailerInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostUpdateTrailerInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostUpdateTrailerInfoCompleted(Me, New PostUpdateTrailerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetDoorTrailers", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDoorTrailers() As Trailer()
            Dim results() As Object = Me.Invoke("GetDoorTrailers", New Object(-1) {})
            Return CType(results(0),Trailer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDoorTrailersAsync()
            Me.GetDoorTrailersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDoorTrailersAsync(ByVal userState As Object)
            If (Me.GetDoorTrailersOperationCompleted Is Nothing) Then
                Me.GetDoorTrailersOperationCompleted = AddressOf Me.OnGetDoorTrailersOperationCompleted
            End If
            Me.InvokeAsync("GetDoorTrailers", New Object(-1) {}, Me.GetDoorTrailersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDoorTrailersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDoorTrailersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDoorTrailersCompleted(Me, New GetDoorTrailersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CancelTrailerMoves", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelTrailerMoves(ByVal pMoves() As Trailer, ByVal pUserID As String) As Boolean
            Dim results() As Object = Me.Invoke("CancelTrailerMoves", New Object() {pMoves, pUserID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelTrailerMovesAsync(ByVal pMoves() As Trailer, ByVal pUserID As String)
            Me.CancelTrailerMovesAsync(pMoves, pUserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelTrailerMovesAsync(ByVal pMoves() As Trailer, ByVal pUserID As String, ByVal userState As Object)
            If (Me.CancelTrailerMovesOperationCompleted Is Nothing) Then
                Me.CancelTrailerMovesOperationCompleted = AddressOf Me.OnCancelTrailerMovesOperationCompleted
            End If
            Me.InvokeAsync("CancelTrailerMoves", New Object() {pMoves, pUserID}, Me.CancelTrailerMovesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelTrailerMovesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelTrailerMovesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelTrailerMovesCompleted(Me, New CancelTrailerMovesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetCompletedMovesByDate", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCompletedMovesByDate(ByVal pStartDate As Date, ByVal pEndDate As Date) As MovesDataSet
            Dim results() As Object = Me.Invoke("GetCompletedMovesByDate", New Object() {pStartDate, pEndDate})
            Return CType(results(0),MovesDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCompletedMovesByDateAsync(ByVal pStartDate As Date, ByVal pEndDate As Date)
            Me.GetCompletedMovesByDateAsync(pStartDate, pEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCompletedMovesByDateAsync(ByVal pStartDate As Date, ByVal pEndDate As Date, ByVal userState As Object)
            If (Me.GetCompletedMovesByDateOperationCompleted Is Nothing) Then
                Me.GetCompletedMovesByDateOperationCompleted = AddressOf Me.OnGetCompletedMovesByDateOperationCompleted
            End If
            Me.InvokeAsync("GetCompletedMovesByDate", New Object() {pStartDate, pEndDate}, Me.GetCompletedMovesByDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCompletedMovesByDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCompletedMovesByDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCompletedMovesByDateCompleted(Me, New GetCompletedMovesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetPreCoolingTrailers", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPreCoolingTrailers() As PreCoolTrailerTO()
            Dim results() As Object = Me.Invoke("GetPreCoolingTrailers", New Object(-1) {})
            Return CType(results(0),PreCoolTrailerTO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPreCoolingTrailersAsync()
            Me.GetPreCoolingTrailersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPreCoolingTrailersAsync(ByVal userState As Object)
            If (Me.GetPreCoolingTrailersOperationCompleted Is Nothing) Then
                Me.GetPreCoolingTrailersOperationCompleted = AddressOf Me.OnGetPreCoolingTrailersOperationCompleted
            End If
            Me.InvokeAsync("GetPreCoolingTrailers", New Object(-1) {}, Me.GetPreCoolingTrailersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPreCoolingTrailersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPreCoolingTrailersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPreCoolingTrailersCompleted(Me, New GetPreCoolingTrailersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetPreCoolingTrailersByTrailerID", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPreCoolingTrailersByTrailerID(ByVal pTrailerID As String) As PreCoolTrailerTO()
            Dim results() As Object = Me.Invoke("GetPreCoolingTrailersByTrailerID", New Object() {pTrailerID})
            Return CType(results(0),PreCoolTrailerTO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPreCoolingTrailersByTrailerIDAsync(ByVal pTrailerID As String)
            Me.GetPreCoolingTrailersByTrailerIDAsync(pTrailerID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPreCoolingTrailersByTrailerIDAsync(ByVal pTrailerID As String, ByVal userState As Object)
            If (Me.GetPreCoolingTrailersByTrailerIDOperationCompleted Is Nothing) Then
                Me.GetPreCoolingTrailersByTrailerIDOperationCompleted = AddressOf Me.OnGetPreCoolingTrailersByTrailerIDOperationCompleted
            End If
            Me.InvokeAsync("GetPreCoolingTrailersByTrailerID", New Object() {pTrailerID}, Me.GetPreCoolingTrailersByTrailerIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPreCoolingTrailersByTrailerIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPreCoolingTrailersByTrailerIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPreCoolingTrailersByTrailerIDCompleted(Me, New GetPreCoolingTrailersByTrailerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetPreCoolingTrailersByCarrier", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPreCoolingTrailersByCarrier(ByVal pCarrier As String) As PreCoolTrailerTO()
            Dim results() As Object = Me.Invoke("GetPreCoolingTrailersByCarrier", New Object() {pCarrier})
            Return CType(results(0),PreCoolTrailerTO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPreCoolingTrailersByCarrierAsync(ByVal pCarrier As String)
            Me.GetPreCoolingTrailersByCarrierAsync(pCarrier, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPreCoolingTrailersByCarrierAsync(ByVal pCarrier As String, ByVal userState As Object)
            If (Me.GetPreCoolingTrailersByCarrierOperationCompleted Is Nothing) Then
                Me.GetPreCoolingTrailersByCarrierOperationCompleted = AddressOf Me.OnGetPreCoolingTrailersByCarrierOperationCompleted
            End If
            Me.InvokeAsync("GetPreCoolingTrailersByCarrier", New Object() {pCarrier}, Me.GetPreCoolingTrailersByCarrierOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPreCoolingTrailersByCarrierOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPreCoolingTrailersByCarrierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPreCoolingTrailersByCarrierCompleted(Me, New GetPreCoolingTrailersByCarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AddPrecoolTask", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPrecoolTask(ByVal pTemperature As String, ByVal pScheduledDateTime As Date, ByVal pDetails As String, ByVal pUser As KarLotUser, ByVal pTrailer As PreCoolTrailerTO, ByVal pNotifyEmail As String) As PreCoolTrailerTO
            Dim results() As Object = Me.Invoke("AddPrecoolTask", New Object() {pTemperature, pScheduledDateTime, pDetails, pUser, pTrailer, pNotifyEmail})
            Return CType(results(0),PreCoolTrailerTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddPrecoolTaskAsync(ByVal pTemperature As String, ByVal pScheduledDateTime As Date, ByVal pDetails As String, ByVal pUser As KarLotUser, ByVal pTrailer As PreCoolTrailerTO, ByVal pNotifyEmail As String)
            Me.AddPrecoolTaskAsync(pTemperature, pScheduledDateTime, pDetails, pUser, pTrailer, pNotifyEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPrecoolTaskAsync(ByVal pTemperature As String, ByVal pScheduledDateTime As Date, ByVal pDetails As String, ByVal pUser As KarLotUser, ByVal pTrailer As PreCoolTrailerTO, ByVal pNotifyEmail As String, ByVal userState As Object)
            If (Me.AddPrecoolTaskOperationCompleted Is Nothing) Then
                Me.AddPrecoolTaskOperationCompleted = AddressOf Me.OnAddPrecoolTaskOperationCompleted
            End If
            Me.InvokeAsync("AddPrecoolTask", New Object() {pTemperature, pScheduledDateTime, pDetails, pUser, pTrailer, pNotifyEmail}, Me.AddPrecoolTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPrecoolTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPrecoolTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPrecoolTaskCompleted(Me, New AddPrecoolTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AddStopPrecoolTask", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddStopPrecoolTask(ByVal pDetails As String, ByVal pUser As KarLotUser, ByVal pTrailer As PreCoolTrailerTO, ByVal pNotifyEmail As String) As PreCoolTrailerTO
            Dim results() As Object = Me.Invoke("AddStopPrecoolTask", New Object() {pDetails, pUser, pTrailer, pNotifyEmail})
            Return CType(results(0),PreCoolTrailerTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddStopPrecoolTaskAsync(ByVal pDetails As String, ByVal pUser As KarLotUser, ByVal pTrailer As PreCoolTrailerTO, ByVal pNotifyEmail As String)
            Me.AddStopPrecoolTaskAsync(pDetails, pUser, pTrailer, pNotifyEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddStopPrecoolTaskAsync(ByVal pDetails As String, ByVal pUser As KarLotUser, ByVal pTrailer As PreCoolTrailerTO, ByVal pNotifyEmail As String, ByVal userState As Object)
            If (Me.AddStopPrecoolTaskOperationCompleted Is Nothing) Then
                Me.AddStopPrecoolTaskOperationCompleted = AddressOf Me.OnAddStopPrecoolTaskOperationCompleted
            End If
            Me.InvokeAsync("AddStopPrecoolTask", New Object() {pDetails, pUser, pTrailer, pNotifyEmail}, Me.AddStopPrecoolTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddStopPrecoolTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddStopPrecoolTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddStopPrecoolTaskCompleted(Me, New AddStopPrecoolTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CancelPrecoolTask", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelPrecoolTask(ByVal pUser As KarLotUser, ByVal pTaskID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("CancelPrecoolTask", New Object() {pUser, pTaskID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelPrecoolTaskAsync(ByVal pUser As KarLotUser, ByVal pTaskID As Integer)
            Me.CancelPrecoolTaskAsync(pUser, pTaskID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelPrecoolTaskAsync(ByVal pUser As KarLotUser, ByVal pTaskID As Integer, ByVal userState As Object)
            If (Me.CancelPrecoolTaskOperationCompleted Is Nothing) Then
                Me.CancelPrecoolTaskOperationCompleted = AddressOf Me.OnCancelPrecoolTaskOperationCompleted
            End If
            Me.InvokeAsync("CancelPrecoolTask", New Object() {pUser, pTaskID}, Me.CancelPrecoolTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelPrecoolTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelPrecoolTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelPrecoolTaskCompleted(Me, New CancelPrecoolTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetPrecoolingTasksByTrailerSystemID", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrecoolingTasksByTrailerSystemID(ByVal pSystemID As Integer) As TasksDataSet
            Dim results() As Object = Me.Invoke("GetPrecoolingTasksByTrailerSystemID", New Object() {pSystemID})
            Return CType(results(0),TasksDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrecoolingTasksByTrailerSystemIDAsync(ByVal pSystemID As Integer)
            Me.GetPrecoolingTasksByTrailerSystemIDAsync(pSystemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrecoolingTasksByTrailerSystemIDAsync(ByVal pSystemID As Integer, ByVal userState As Object)
            If (Me.GetPrecoolingTasksByTrailerSystemIDOperationCompleted Is Nothing) Then
                Me.GetPrecoolingTasksByTrailerSystemIDOperationCompleted = AddressOf Me.OnGetPrecoolingTasksByTrailerSystemIDOperationCompleted
            End If
            Me.InvokeAsync("GetPrecoolingTasksByTrailerSystemID", New Object() {pSystemID}, Me.GetPrecoolingTasksByTrailerSystemIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrecoolingTasksByTrailerSystemIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrecoolingTasksByTrailerSystemIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrecoolingTasksByTrailerSystemIDCompleted(Me, New GetPrecoolingTasksByTrailerSystemIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveWashDockTrailers", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveWashDockTrailers() As MovesDataSet
            Dim results() As Object = Me.Invoke("GetActiveWashDockTrailers", New Object(-1) {})
            Return CType(results(0),MovesDataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveWashDockTrailersAsync()
            Me.GetActiveWashDockTrailersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveWashDockTrailersAsync(ByVal userState As Object)
            If (Me.GetActiveWashDockTrailersOperationCompleted Is Nothing) Then
                Me.GetActiveWashDockTrailersOperationCompleted = AddressOf Me.OnGetActiveWashDockTrailersOperationCompleted
            End If
            Me.InvokeAsync("GetActiveWashDockTrailers", New Object(-1) {}, Me.GetActiveWashDockTrailersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveWashDockTrailersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveWashDockTrailersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveWashDockTrailersCompleted(Me, New GetActiveWashDockTrailersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CallOutWashDockToLot", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallOutWashDockToLot(ByVal pWashType As String, ByVal pWashedBy As String, ByVal tMoveID As Integer, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String) As Boolean
            Dim results() As Object = Me.Invoke("CallOutWashDockToLot", New Object() {pWashType, pWashedBy, tMoveID, pTrailer, pUserID, pStationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallOutWashDockToLotAsync(ByVal pWashType As String, ByVal pWashedBy As String, ByVal tMoveID As Integer, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String)
            Me.CallOutWashDockToLotAsync(pWashType, pWashedBy, tMoveID, pTrailer, pUserID, pStationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallOutWashDockToLotAsync(ByVal pWashType As String, ByVal pWashedBy As String, ByVal tMoveID As Integer, ByVal pTrailer As Trailer, ByVal pUserID As String, ByVal pStationID As String, ByVal userState As Object)
            If (Me.CallOutWashDockToLotOperationCompleted Is Nothing) Then
                Me.CallOutWashDockToLotOperationCompleted = AddressOf Me.OnCallOutWashDockToLotOperationCompleted
            End If
            Me.InvokeAsync("CallOutWashDockToLot", New Object() {pWashType, pWashedBy, tMoveID, pTrailer, pUserID, pStationID}, Me.CallOutWashDockToLotOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallOutWashDockToLotOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallOutWashDockToLotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallOutWashDockToLotCompleted(Me, New CallOutWashDockToLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class Trailer
        
        Private specialInstructionsField As String
        
        Private trailerTypeField As String
        
        Private trailerOutField As Boolean
        
        Private trailerOutByField As String
        
        Private trailerOutTimeField As Date
        
        Private trailerAddedByField As String
        
        Private trailerAddedTimeField As Date
        
        Private lastUserField As String
        
        Private cleanStateField As String
        
        Private preCoolingField As String
        
        Private preCoolRequestedField As String
        
        Private activeField As String
        
        Private carrierField As Carrier
        
        Private barcodeField As String
        
        Private systemIDField As Integer
        
        Private trailerIDField As String
        
        Private temperatureField As String
        
        Private palletsOnBoardField As String
        
        Private palletsRequestedField As String
        
        Private lastActionField As Date
        
        Private classificationField As String
        
        Private currentLocationField As String
        
        Private nextLocationField As String
        
        Private thirdLocationField As String
        
        Private loadField As TrailerLoadClass
        
        Private moveStatusField As String
        
        Private whosMoveField As String
        
        Private moveIDField As Integer
        
        Private seal1Field As String
        
        Private seal2Field As String
        
        Private seal3Field As String
        
        Private loadNumberField As String
        
        Private sealExceptionField As Boolean
        
        Private calloutUserInitialsField As String
        
        Private referUnitModeField As String
        
        Private outOfServiceField As Boolean
        
        Private notesField As String
        
        Private hasExceptionField As Boolean
        
        Private exceptionCodeField As String
        
        Private exceptionCodeDescriptionField As String
        
        Private fuelRoundCheckField As Boolean
        
        Private palletsField As String
        
        Private setPointCelsiusField As System.Nullable(Of Double)
        
        '''<remarks/>
        Public Property SpecialInstructions() As String
            Get
                Return Me.specialInstructionsField
            End Get
            Set
                Me.specialInstructionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerType() As String
            Get
                Return Me.trailerTypeField
            End Get
            Set
                Me.trailerTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerOut() As Boolean
            Get
                Return Me.trailerOutField
            End Get
            Set
                Me.trailerOutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerOutBy() As String
            Get
                Return Me.trailerOutByField
            End Get
            Set
                Me.trailerOutByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerOutTime() As Date
            Get
                Return Me.trailerOutTimeField
            End Get
            Set
                Me.trailerOutTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerAddedBy() As String
            Get
                Return Me.trailerAddedByField
            End Get
            Set
                Me.trailerAddedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerAddedTime() As Date
            Get
                Return Me.trailerAddedTimeField
            End Get
            Set
                Me.trailerAddedTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastUser() As String
            Get
                Return Me.lastUserField
            End Get
            Set
                Me.lastUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CleanState() As String
            Get
                Return Me.cleanStateField
            End Get
            Set
                Me.cleanStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreCooling() As String
            Get
                Return Me.preCoolingField
            End Get
            Set
                Me.preCoolingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreCoolRequested() As String
            Get
                Return Me.preCoolRequestedField
            End Get
            Set
                Me.preCoolRequestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Active() As String
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Carrier() As Carrier
            Get
                Return Me.carrierField
            End Get
            Set
                Me.carrierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Barcode() As String
            Get
                Return Me.barcodeField
            End Get
            Set
                Me.barcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SystemID() As Integer
            Get
                Return Me.systemIDField
            End Get
            Set
                Me.systemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerID() As String
            Get
                Return Me.trailerIDField
            End Get
            Set
                Me.trailerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Temperature() As String
            Get
                Return Me.temperatureField
            End Get
            Set
                Me.temperatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PalletsOnBoard() As String
            Get
                Return Me.palletsOnBoardField
            End Get
            Set
                Me.palletsOnBoardField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PalletsRequested() As String
            Get
                Return Me.palletsRequestedField
            End Get
            Set
                Me.palletsRequestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastAction() As Date
            Get
                Return Me.lastActionField
            End Get
            Set
                Me.lastActionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Classification() As String
            Get
                Return Me.classificationField
            End Get
            Set
                Me.classificationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentLocation() As String
            Get
                Return Me.currentLocationField
            End Get
            Set
                Me.currentLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NextLocation() As String
            Get
                Return Me.nextLocationField
            End Get
            Set
                Me.nextLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ThirdLocation() As String
            Get
                Return Me.thirdLocationField
            End Get
            Set
                Me.thirdLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Load() As TrailerLoadClass
            Get
                Return Me.loadField
            End Get
            Set
                Me.loadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MoveStatus() As String
            Get
                Return Me.moveStatusField
            End Get
            Set
                Me.moveStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WhosMove() As String
            Get
                Return Me.whosMoveField
            End Get
            Set
                Me.whosMoveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MoveID() As Integer
            Get
                Return Me.moveIDField
            End Get
            Set
                Me.moveIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Seal1() As String
            Get
                Return Me.seal1Field
            End Get
            Set
                Me.seal1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Seal2() As String
            Get
                Return Me.seal2Field
            End Get
            Set
                Me.seal2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Seal3() As String
            Get
                Return Me.seal3Field
            End Get
            Set
                Me.seal3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoadNumber() As String
            Get
                Return Me.loadNumberField
            End Get
            Set
                Me.loadNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SealException() As Boolean
            Get
                Return Me.sealExceptionField
            End Get
            Set
                Me.sealExceptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CalloutUserInitials() As String
            Get
                Return Me.calloutUserInitialsField
            End Get
            Set
                Me.calloutUserInitialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferUnitMode() As String
            Get
                Return Me.referUnitModeField
            End Get
            Set
                Me.referUnitModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OutOfService() As Boolean
            Get
                Return Me.outOfServiceField
            End Get
            Set
                Me.outOfServiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasException() As Boolean
            Get
                Return Me.hasExceptionField
            End Get
            Set
                Me.hasExceptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExceptionCode() As String
            Get
                Return Me.exceptionCodeField
            End Get
            Set
                Me.exceptionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExceptionCodeDescription() As String
            Get
                Return Me.exceptionCodeDescriptionField
            End Get
            Set
                Me.exceptionCodeDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FuelRoundCheck() As Boolean
            Get
                Return Me.fuelRoundCheckField
            End Get
            Set
                Me.fuelRoundCheckField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Pallets() As String
            Get
                Return Me.palletsField
            End Get
            Set
                Me.palletsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SetPointCelsius() As System.Nullable(Of Double)
            Get
                Return Me.setPointCelsiusField
            End Get
            Set
                Me.setPointCelsiusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class Carrier
        
        Private nameField As String
        
        Private scacField As String
        
        Private groupField As String
        
        Private otherIDField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Scac() As String
            Get
                Return Me.scacField
            End Get
            Set
                Me.scacField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Group() As String
            Get
                Return Me.groupField
            End Get
            Set
                Me.groupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OtherID() As String
            Get
                Return Me.otherIDField
            End Get
            Set
                Me.otherIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class PreCoolTrailerTO
        
        Private systemIDField As Integer
        
        Private barcodeField As String
        
        Private carrierField As String
        
        Private trailerIDField As String
        
        Private loadStatusField As String
        
        Private classificationField As String
        
        Private temperatureField As String
        
        Private precoolingField As String
        
        Private precoolStartedField As Date
        
        Private palletsOnBoardField As String
        
        Private currentLocationField As String
        
        Private precoolRequestedField As String
        
        Private stopRequestedField As Boolean
        
        Private setPointCelsiusField As System.Nullable(Of Double)
        
        '''<remarks/>
        Public Property SystemID() As Integer
            Get
                Return Me.systemIDField
            End Get
            Set
                Me.systemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Barcode() As String
            Get
                Return Me.barcodeField
            End Get
            Set
                Me.barcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Carrier() As String
            Get
                Return Me.carrierField
            End Get
            Set
                Me.carrierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerID() As String
            Get
                Return Me.trailerIDField
            End Get
            Set
                Me.trailerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoadStatus() As String
            Get
                Return Me.loadStatusField
            End Get
            Set
                Me.loadStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Classification() As String
            Get
                Return Me.classificationField
            End Get
            Set
                Me.classificationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Temperature() As String
            Get
                Return Me.temperatureField
            End Get
            Set
                Me.temperatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Precooling() As String
            Get
                Return Me.precoolingField
            End Get
            Set
                Me.precoolingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrecoolStarted() As Date
            Get
                Return Me.precoolStartedField
            End Get
            Set
                Me.precoolStartedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PalletsOnBoard() As String
            Get
                Return Me.palletsOnBoardField
            End Get
            Set
                Me.palletsOnBoardField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentLocation() As String
            Get
                Return Me.currentLocationField
            End Get
            Set
                Me.currentLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrecoolRequested() As String
            Get
                Return Me.precoolRequestedField
            End Get
            Set
                Me.precoolRequestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StopRequested() As Boolean
            Get
                Return Me.stopRequestedField
            End Get
            Set
                Me.stopRequestedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SetPointCelsius() As System.Nullable(Of Double)
            Get
                Return Me.setPointCelsiusField
            End Get
            Set
                Me.setPointCelsiusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class TaskTextArgTO
        
        Private taskTextTypeField As Integer
        
        Private argValueField As String
        
        '''<remarks/>
        Public Property TaskTextType() As Integer
            Get
                Return Me.taskTextTypeField
            End Get
            Set
                Me.taskTextTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ArgValue() As String
            Get
                Return Me.argValueField
            End Get
            Set
                Me.argValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class Door
        
        Private doorNameField As String
        
        Private doorIDField As String
        
        Private buildingLocationField As Building
        
        Private doorStateField As n_DoorState
        
        Private friendlyNameField As String
        
        '''<remarks/>
        Public Property DoorName() As String
            Get
                Return Me.doorNameField
            End Get
            Set
                Me.doorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DoorID() As String
            Get
                Return Me.doorIDField
            End Get
            Set
                Me.doorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BuildingLocation() As Building
            Get
                Return Me.buildingLocationField
            End Get
            Set
                Me.buildingLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DoorState() As n_DoorState
            Get
                Return Me.doorStateField
            End Get
            Set
                Me.doorStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FriendlyName() As String
            Get
                Return Me.friendlyNameField
            End Get
            Set
                Me.friendlyNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class Building
        
        Private nameField As String
        
        Private locationField As Point
        
        Private widthField As Integer
        
        Private heightField As Integer
        
        Private backColorField As Color
        
        Private foreColorField As Color
        
        Private buildingIDField As String
        
        Private buildingTypeField As DropDestType
        
        Private dropLocationTypeField As String
        
        Private itemDataField As Integer
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As Point
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Width() As Integer
            Get
                Return Me.widthField
            End Get
            Set
                Me.widthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Height() As Integer
            Get
                Return Me.heightField
            End Get
            Set
                Me.heightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BackColor() As Color
            Get
                Return Me.backColorField
            End Get
            Set
                Me.backColorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ForeColor() As Color
            Get
                Return Me.foreColorField
            End Get
            Set
                Me.foreColorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BuildingID() As String
            Get
                Return Me.buildingIDField
            End Get
            Set
                Me.buildingIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BuildingType() As DropDestType
            Get
                Return Me.buildingTypeField
            End Get
            Set
                Me.buildingTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DropLocationType() As String
            Get
                Return Me.dropLocationTypeField
            End Get
            Set
                Me.dropLocationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ItemData() As Integer
            Get
                Return Me.itemDataField
            End Get
            Set
                Me.itemDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class Point
        
        Private xField As Integer
        
        Private yField As Integer
        
        '''<remarks/>
        Public Property X() As Integer
            Get
                Return Me.xField
            End Get
            Set
                Me.xField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Y() As Integer
            Get
                Return Me.yField
            End Get
            Set
                Me.yField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class Color
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Public Enum DropDestType
        
        '''<remarks/>
        WASH
        
        '''<remarks/>
        DOOR
        
        '''<remarks/>
        LOT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Public Enum n_DoorState
        
        '''<remarks/>
        InactiveNoTrailer
        
        '''<remarks/>
        TrailerCalledToDoor
        
        '''<remarks/>
        TrailerMovingToDoor
        
        '''<remarks/>
        TrailerInDoor
        
        '''<remarks/>
        TrailerCalledOutDoor
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class TrailerMoveTO
        
        Private moveIDField As Integer
        
        Private carrierField As String
        
        Private trailerIDField As String
        
        Private startLocationField As String
        
        Private destinationLocationField As String
        
        Private stopOffLocationField As String
        
        Private loadStatusField As String
        
        Private moveStatusField As String
        
        Private temperatureField As Integer
        
        Private palletsOnBoardField As String
        
        Private palletsRequestedField As String
        
        Private preCoolingField As Boolean
        
        Private preCoolingStartedField As Date
        
        Private lastActionField As Date
        
        Private lastUserField As String
        
        Private timeCalledField As Date
        
        Private calledByField As String
        
        Private timeTakenField As Date
        
        Private takenByField As String
        
        Private timePickedUpField As Date
        
        Private pickedUpByField As String
        
        Private timeParkedField As Date
        
        Private parkedByField As String
        
        Private whosMoveField As String
        
        Private moveInstructionsField As String
        
        Private activeMoveField As Boolean
        
        Private trailerSystemIDField As Integer
        
        Private cancelledField As Boolean
        
        Private cancelledByField As String
        
        Private completedField As Boolean
        
        Private timeCancelledField As Date
        
        Private problemReportedField As Boolean
        
        Private timeProblemReportedField As Date
        
        Private problemReportedByField As String
        
        Private problemTypeField As String
        
        Private stationCallingField As String
        
        Private priorityMoveField As Boolean
        
        Private seal1Field As String
        
        Private seal2Field As String
        
        Private seal3Field As String
        
        Private loadNumberField As String
        
        Private sealedByField As String
        
        Private referUnitModeField As String
        
        Private calloutUserInitialsField As String
        
        Private hasExceptionField As Boolean
        
        Private exceptionCodeField As String
        
        Private exceptionCodeDescriptionField As String
        
        Private taggedEmptyCleanField As Boolean
        
        Private setPointCelsiusField As System.Nullable(Of Double)
        
        '''<remarks/>
        Public Property MoveID() As Integer
            Get
                Return Me.moveIDField
            End Get
            Set
                Me.moveIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Carrier() As String
            Get
                Return Me.carrierField
            End Get
            Set
                Me.carrierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerID() As String
            Get
                Return Me.trailerIDField
            End Get
            Set
                Me.trailerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartLocation() As String
            Get
                Return Me.startLocationField
            End Get
            Set
                Me.startLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DestinationLocation() As String
            Get
                Return Me.destinationLocationField
            End Get
            Set
                Me.destinationLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StopOffLocation() As String
            Get
                Return Me.stopOffLocationField
            End Get
            Set
                Me.stopOffLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoadStatus() As String
            Get
                Return Me.loadStatusField
            End Get
            Set
                Me.loadStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MoveStatus() As String
            Get
                Return Me.moveStatusField
            End Get
            Set
                Me.moveStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Temperature() As Integer
            Get
                Return Me.temperatureField
            End Get
            Set
                Me.temperatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PalletsOnBoard() As String
            Get
                Return Me.palletsOnBoardField
            End Get
            Set
                Me.palletsOnBoardField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PalletsRequested() As String
            Get
                Return Me.palletsRequestedField
            End Get
            Set
                Me.palletsRequestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreCooling() As Boolean
            Get
                Return Me.preCoolingField
            End Get
            Set
                Me.preCoolingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreCoolingStarted() As Date
            Get
                Return Me.preCoolingStartedField
            End Get
            Set
                Me.preCoolingStartedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastAction() As Date
            Get
                Return Me.lastActionField
            End Get
            Set
                Me.lastActionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastUser() As String
            Get
                Return Me.lastUserField
            End Get
            Set
                Me.lastUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeCalled() As Date
            Get
                Return Me.timeCalledField
            End Get
            Set
                Me.timeCalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CalledBy() As String
            Get
                Return Me.calledByField
            End Get
            Set
                Me.calledByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeTaken() As Date
            Get
                Return Me.timeTakenField
            End Get
            Set
                Me.timeTakenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TakenBy() As String
            Get
                Return Me.takenByField
            End Get
            Set
                Me.takenByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimePickedUp() As Date
            Get
                Return Me.timePickedUpField
            End Get
            Set
                Me.timePickedUpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PickedUpBy() As String
            Get
                Return Me.pickedUpByField
            End Get
            Set
                Me.pickedUpByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeParked() As Date
            Get
                Return Me.timeParkedField
            End Get
            Set
                Me.timeParkedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParkedBy() As String
            Get
                Return Me.parkedByField
            End Get
            Set
                Me.parkedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WhosMove() As String
            Get
                Return Me.whosMoveField
            End Get
            Set
                Me.whosMoveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MoveInstructions() As String
            Get
                Return Me.moveInstructionsField
            End Get
            Set
                Me.moveInstructionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActiveMove() As Boolean
            Get
                Return Me.activeMoveField
            End Get
            Set
                Me.activeMoveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerSystemID() As Integer
            Get
                Return Me.trailerSystemIDField
            End Get
            Set
                Me.trailerSystemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cancelled() As Boolean
            Get
                Return Me.cancelledField
            End Get
            Set
                Me.cancelledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CancelledBy() As String
            Get
                Return Me.cancelledByField
            End Get
            Set
                Me.cancelledByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Completed() As Boolean
            Get
                Return Me.completedField
            End Get
            Set
                Me.completedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeCancelled() As Date
            Get
                Return Me.timeCancelledField
            End Get
            Set
                Me.timeCancelledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProblemReported() As Boolean
            Get
                Return Me.problemReportedField
            End Get
            Set
                Me.problemReportedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeProblemReported() As Date
            Get
                Return Me.timeProblemReportedField
            End Get
            Set
                Me.timeProblemReportedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProblemReportedBy() As String
            Get
                Return Me.problemReportedByField
            End Get
            Set
                Me.problemReportedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProblemType() As String
            Get
                Return Me.problemTypeField
            End Get
            Set
                Me.problemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StationCalling() As String
            Get
                Return Me.stationCallingField
            End Get
            Set
                Me.stationCallingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PriorityMove() As Boolean
            Get
                Return Me.priorityMoveField
            End Get
            Set
                Me.priorityMoveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Seal1() As String
            Get
                Return Me.seal1Field
            End Get
            Set
                Me.seal1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Seal2() As String
            Get
                Return Me.seal2Field
            End Get
            Set
                Me.seal2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Seal3() As String
            Get
                Return Me.seal3Field
            End Get
            Set
                Me.seal3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoadNumber() As String
            Get
                Return Me.loadNumberField
            End Get
            Set
                Me.loadNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SealedBy() As String
            Get
                Return Me.sealedByField
            End Get
            Set
                Me.sealedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferUnitMode() As String
            Get
                Return Me.referUnitModeField
            End Get
            Set
                Me.referUnitModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CalloutUserInitials() As String
            Get
                Return Me.calloutUserInitialsField
            End Get
            Set
                Me.calloutUserInitialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasException() As Boolean
            Get
                Return Me.hasExceptionField
            End Get
            Set
                Me.hasExceptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExceptionCode() As String
            Get
                Return Me.exceptionCodeField
            End Get
            Set
                Me.exceptionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExceptionCodeDescription() As String
            Get
                Return Me.exceptionCodeDescriptionField
            End Get
            Set
                Me.exceptionCodeDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaggedEmptyClean() As Boolean
            Get
                Return Me.taggedEmptyCleanField
            End Get
            Set
                Me.taggedEmptyCleanField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SetPointCelsius() As System.Nullable(Of Double)
            Get
                Return Me.setPointCelsiusField
            End Get
            Set
                Me.setPointCelsiusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class KarLotUser
        
        Private userNameField As String
        
        Private fullNameField As String
        
        Private userLevelField As String
        
        Private userViewModeField As String
        
        Private userAuthenticatedField As Boolean
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FullName() As String
            Get
                Return Me.fullNameField
            End Get
            Set
                Me.fullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserLevel() As String
            Get
                Return Me.userLevelField
            End Get
            Set
                Me.userLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserViewMode() As String
            Get
                Return Me.userViewModeField
            End Get
            Set
                Me.userViewModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserAuthenticated() As Boolean
            Get
                Return Me.userAuthenticatedField
            End Get
            Set
                Me.userAuthenticatedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class WsResponse
        
        Private apiHasExceptionField As Boolean
        
        Private messageField As String
        
        '''<remarks/>
        Public Property ApiHasException() As Boolean
            Get
                Return Me.apiHasExceptionField
            End Get
            Set
                Me.apiHasExceptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class TrailerLoadClass
        
        Private loadStatusMessageField As String
        
        Private typeLoadStatusField As LoadStatusType
        
        Private dbCodeField As String
        
        '''<remarks/>
        Public Property LoadStatusMessage() As String
            Get
                Return Me.loadStatusMessageField
            End Get
            Set
                Me.loadStatusMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TypeLoadStatus() As LoadStatusType
            Get
                Return Me.typeLoadStatusField
            End Get
            Set
                Me.typeLoadStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dbCode() As String
            Get
                Return Me.dbCodeField
            End Get
            Set
                Me.dbCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Public Enum LoadStatusType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        CompleteLoad
        
        '''<remarks/>
        PartialLoad
        
        '''<remarks/>
        EmptyClean
        
        '''<remarks/>
        EmptyDirty
    End Enum
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("BarcodeDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")>  _
    Partial Public Class BarcodeDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableBarcodes As BarcodesDataTable
        
        Private tableCarriers As CarriersDataTable
        
        Private tableTrailers As TrailersDataTable
        
        Private tableActiveTrailers As ActiveTrailersDataTable
        
        Private tableCactusSpecific As CactusSpecificDataTable
        
        Private tableCactusOutbound As CactusOutboundDataTable
        
        Private tableTrailersMain As TrailersMainDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("Barcodes")) Is Nothing) Then
                    MyBase.Tables.Add(New BarcodesDataTable(ds.Tables("Barcodes")))
                End If
                If (Not (ds.Tables("Carriers")) Is Nothing) Then
                    MyBase.Tables.Add(New CarriersDataTable(ds.Tables("Carriers")))
                End If
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                If (Not (ds.Tables("ActiveTrailers")) Is Nothing) Then
                    MyBase.Tables.Add(New ActiveTrailersDataTable(ds.Tables("ActiveTrailers")))
                End If
                If (Not (ds.Tables("CactusSpecific")) Is Nothing) Then
                    MyBase.Tables.Add(New CactusSpecificDataTable(ds.Tables("CactusSpecific")))
                End If
                If (Not (ds.Tables("CactusOutbound")) Is Nothing) Then
                    MyBase.Tables.Add(New CactusOutboundDataTable(ds.Tables("CactusOutbound")))
                End If
                If (Not (ds.Tables("TrailersMain")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersMainDataTable(ds.Tables("TrailersMain")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Barcodes() As BarcodesDataTable
            Get
                Return Me.tableBarcodes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Carriers() As CarriersDataTable
            Get
                Return Me.tableCarriers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Trailers() As TrailersDataTable
            Get
                Return Me.tableTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property ActiveTrailers() As ActiveTrailersDataTable
            Get
                Return Me.tableActiveTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property CactusSpecific() As CactusSpecificDataTable
            Get
                Return Me.tableCactusSpecific
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property CactusOutbound() As CactusOutboundDataTable
            Get
                Return Me.tableCactusOutbound
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property TrailersMain() As TrailersMainDataTable
            Get
                Return Me.tableTrailersMain
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As BarcodeDataSet = CType(MyBase.Clone,BarcodeDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("Barcodes")) Is Nothing) Then
                    MyBase.Tables.Add(New BarcodesDataTable(ds.Tables("Barcodes")))
                End If
                If (Not (ds.Tables("Carriers")) Is Nothing) Then
                    MyBase.Tables.Add(New CarriersDataTable(ds.Tables("Carriers")))
                End If
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                If (Not (ds.Tables("ActiveTrailers")) Is Nothing) Then
                    MyBase.Tables.Add(New ActiveTrailersDataTable(ds.Tables("ActiveTrailers")))
                End If
                If (Not (ds.Tables("CactusSpecific")) Is Nothing) Then
                    MyBase.Tables.Add(New CactusSpecificDataTable(ds.Tables("CactusSpecific")))
                End If
                If (Not (ds.Tables("CactusOutbound")) Is Nothing) Then
                    MyBase.Tables.Add(New CactusOutboundDataTable(ds.Tables("CactusOutbound")))
                End If
                If (Not (ds.Tables("TrailersMain")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersMainDataTable(ds.Tables("TrailersMain")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableBarcodes = CType(MyBase.Tables("Barcodes"),BarcodesDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBarcodes) Is Nothing) Then
                    Me.tableBarcodes.InitVars
                End If
            End If
            Me.tableCarriers = CType(MyBase.Tables("Carriers"),CarriersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableCarriers) Is Nothing) Then
                    Me.tableCarriers.InitVars
                End If
            End If
            Me.tableTrailers = CType(MyBase.Tables("Trailers"),TrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTrailers) Is Nothing) Then
                    Me.tableTrailers.InitVars
                End If
            End If
            Me.tableActiveTrailers = CType(MyBase.Tables("ActiveTrailers"),ActiveTrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableActiveTrailers) Is Nothing) Then
                    Me.tableActiveTrailers.InitVars
                End If
            End If
            Me.tableCactusSpecific = CType(MyBase.Tables("CactusSpecific"),CactusSpecificDataTable)
            If (initTable = true) Then
                If (Not (Me.tableCactusSpecific) Is Nothing) Then
                    Me.tableCactusSpecific.InitVars
                End If
            End If
            Me.tableCactusOutbound = CType(MyBase.Tables("CactusOutbound"),CactusOutboundDataTable)
            If (initTable = true) Then
                If (Not (Me.tableCactusOutbound) Is Nothing) Then
                    Me.tableCactusOutbound.InitVars
                End If
            End If
            Me.tableTrailersMain = CType(MyBase.Tables("TrailersMain"),TrailersMainDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTrailersMain) Is Nothing) Then
                    Me.tableTrailersMain.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "BarcodeDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/BarcodeDataSet.xsd"
            Me.EnforceConstraints = false
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableBarcodes = New BarcodesDataTable()
            MyBase.Tables.Add(Me.tableBarcodes)
            Me.tableCarriers = New CarriersDataTable()
            MyBase.Tables.Add(Me.tableCarriers)
            Me.tableTrailers = New TrailersDataTable()
            MyBase.Tables.Add(Me.tableTrailers)
            Me.tableActiveTrailers = New ActiveTrailersDataTable()
            MyBase.Tables.Add(Me.tableActiveTrailers)
            Me.tableCactusSpecific = New CactusSpecificDataTable()
            MyBase.Tables.Add(Me.tableCactusSpecific)
            Me.tableCactusOutbound = New CactusOutboundDataTable()
            MyBase.Tables.Add(Me.tableCactusOutbound)
            Me.tableTrailersMain = New TrailersMainDataTable()
            MyBase.Tables.Add(Me.tableTrailersMain)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeBarcodes() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeCarriers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeActiveTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeCactusSpecific() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeCactusOutbound() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTrailersMain() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As BarcodeDataSet = New BarcodeDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub BarcodesRowChangeEventHandler(ByVal sender As Object, ByVal e As BarcodesRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub CarriersRowChangeEventHandler(ByVal sender As Object, ByVal e As CarriersRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As TrailersRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub ActiveTrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As ActiveTrailersRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub CactusSpecificRowChangeEventHandler(ByVal sender As Object, ByVal e As CactusSpecificRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub CactusOutboundRowChangeEventHandler(ByVal sender As Object, ByVal e As CactusOutboundRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TrailersMainRowChangeEventHandler(ByVal sender As Object, ByVal e As TrailersMainRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BarcodesDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnBarcodeData As Global.System.Data.DataColumn
            
            Private columnscac As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Barcodes"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeDataColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcodeData
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property scacColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnscac
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BarcodesRow
                Get
                    Return CType(Me.Rows(index),BarcodesRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event BarcodesRowChanging As BarcodesRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event BarcodesRowChanged As BarcodesRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event BarcodesRowDeleting As BarcodesRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event BarcodesRowDeleted As BarcodesRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddBarcodesRow(ByVal row As BarcodesRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddBarcodesRow(ByVal BarcodeData As String, ByVal scac As String, ByVal TrailerID As String, ByVal Carrier As String) As BarcodesRow
                Dim rowBarcodesRow As BarcodesRow = CType(Me.NewRow,BarcodesRow)
                Dim columnValuesArray() As Object = New Object() {BarcodeData, scac, TrailerID, Carrier}
                rowBarcodesRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBarcodesRow)
                Return rowBarcodesRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByBarcodeData(ByVal BarcodeData As String) As BarcodesRow
                Return CType(Me.Rows.Find(New Object() {BarcodeData}),BarcodesRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BarcodesDataTable = CType(MyBase.Clone,BarcodesDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BarcodesDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnBarcodeData = MyBase.Columns("BarcodeData")
                Me.columnscac = MyBase.Columns("scac")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCarrier = MyBase.Columns("Carrier")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnBarcodeData = New Global.System.Data.DataColumn("BarcodeData", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcodeData)
                Me.columnscac = New Global.System.Data.DataColumn("scac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnscac)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBarcodeData}, true))
                Me.columnBarcodeData.AllowDBNull = false
                Me.columnBarcodeData.Unique = true
                Me.columnBarcodeData.Caption = "BacodeData"
                Me.columnBarcodeData.MaxLength = 35
                Me.columnscac.MaxLength = 4
                Me.columnTrailerID.MaxLength = 50
                Me.columnCarrier.MaxLength = 100
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewBarcodesRow() As BarcodesRow
                Return CType(Me.NewRow,BarcodesRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BarcodesRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BarcodesRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BarcodesRowChangedEvent) Is Nothing) Then
                    RaiseEvent BarcodesRowChanged(Me, New BarcodesRowChangeEvent(CType(e.Row,BarcodesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BarcodesRowChangingEvent) Is Nothing) Then
                    RaiseEvent BarcodesRowChanging(Me, New BarcodesRowChangeEvent(CType(e.Row,BarcodesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BarcodesRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BarcodesRowDeleted(Me, New BarcodesRowChangeEvent(CType(e.Row,BarcodesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BarcodesRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BarcodesRowDeleting(Me, New BarcodesRowChangeEvent(CType(e.Row,BarcodesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveBarcodesRow(ByVal row As BarcodesRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BarcodeDataSet = New BarcodeDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BarcodesDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class CarriersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnID As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnAddedBy As Global.System.Data.DataColumn
            
            Private columnSysCode As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Carriers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SysCodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSysCode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As CarriersRow
                Get
                    Return CType(Me.Rows(index),CarriersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowChanging As CarriersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowChanged As CarriersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowDeleting As CarriersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowDeleted As CarriersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddCarriersRow(ByVal row As CarriersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddCarriersRow(ByVal SCAC As String, ByVal Carrier As String, ByVal AddedBy As String, ByVal SysCode As String) As CarriersRow
                Dim rowCarriersRow As CarriersRow = CType(Me.NewRow,CarriersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, SCAC, Carrier, AddedBy, SysCode}
                rowCarriersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowCarriersRow)
                Return rowCarriersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByID(ByVal ID As Integer) As CarriersRow
                Return CType(Me.Rows.Find(New Object() {ID}),CarriersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As CarriersDataTable = CType(MyBase.Clone,CarriersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New CarriersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnID = MyBase.Columns("ID")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnAddedBy = MyBase.Columns("AddedBy")
                Me.columnSysCode = MyBase.Columns("SysCode")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnID)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnAddedBy = New Global.System.Data.DataColumn("AddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAddedBy)
                Me.columnSysCode = New Global.System.Data.DataColumn("SysCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSysCode)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
                Me.columnID.AutoIncrement = true
                Me.columnID.AllowDBNull = false
                Me.columnID.ReadOnly = true
                Me.columnID.Unique = true
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 100
                Me.columnAddedBy.MaxLength = 10
                Me.columnSysCode.MaxLength = 5
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewCarriersRow() As CarriersRow
                Return CType(Me.NewRow,CarriersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New CarriersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(CarriersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.CarriersRowChangedEvent) Is Nothing) Then
                    RaiseEvent CarriersRowChanged(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.CarriersRowChangingEvent) Is Nothing) Then
                    RaiseEvent CarriersRowChanging(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.CarriersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent CarriersRowDeleted(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.CarriersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent CarriersRowDeleting(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveCarriersRow(ByVal row As CarriersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BarcodeDataSet = New BarcodeDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "CarriersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnCarrierName As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnBuyers As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Trailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierNameColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrierName
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BuyersColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBuyers
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TrailersRow
                Get
                    Return CType(Me.Rows(index),TrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanging As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanged As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleting As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleted As TrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTrailersRow( _
                        ByVal SystemID As Integer,  _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal Carrier As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal PalletType As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal CarrierName As String,  _
                        ByVal Temperature As String,  _
                        ByVal Buyers As Boolean) As TrailersRow
                Dim rowTrailersRow As TrailersRow = CType(Me.NewRow,TrailersRow)
                Dim columnValuesArray() As Object = New Object() {SystemID, Barcode, SCAC, Carrier, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, MoveStatus, PalletType, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, CarrierName, Temperature, Buyers}
                rowTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTrailersRow)
                Return rowTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TrailersDataTable = CType(MyBase.Clone,TrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnCarrierName = MyBase.Columns("CarrierName")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnBuyers = MyBase.Columns("Buyers")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnCarrierName = New Global.System.Data.DataColumn("CarrierName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrierName)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnBuyers = New Global.System.Data.DataColumn("Buyers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBuyers)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint2", New Global.System.Data.DataColumn() {Me.columnSystemID}, false))
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 25
                Me.columnPalletType.MaxLength = 1
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 3
                Me.columnCarrierName.MaxLength = 100
                Me.columnTemperature.MaxLength = 5
                Me.columnBuyers.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTrailersRow() As TrailersRow
                Return CType(Me.NewRow,TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanged(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanging(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleted(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleting(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BarcodeDataSet = New BarcodeDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class ActiveTrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "ActiveTrailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As ActiveTrailersRow
                Get
                    Return CType(Me.Rows(index),ActiveTrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowChanging As ActiveTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowChanged As ActiveTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowDeleting As ActiveTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowDeleted As ActiveTrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddActiveTrailersRow(ByVal row As ActiveTrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddActiveTrailersRow(ByVal Barcode As String, ByVal SCAC As String, ByVal Carrier As String, ByVal TrailerID As String, ByVal CurrentLocation As String, ByVal NextLocation As String, ByVal ThirdLocation As String, ByVal LoadStatus As String, ByVal Classification As String, ByVal MoveStatus As String, ByVal Temperature As String, ByVal PalletType As String, ByVal CleanState As String, ByVal WhosMove As String, ByVal YardCheck As Boolean) As ActiveTrailersRow
                Dim rowActiveTrailersRow As ActiveTrailersRow = CType(Me.NewRow,ActiveTrailersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, Carrier, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, MoveStatus, Temperature, PalletType, CleanState, WhosMove, YardCheck}
                rowActiveTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowActiveTrailersRow)
                Return rowActiveTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As ActiveTrailersRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),ActiveTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As ActiveTrailersDataTable = CType(MyBase.Clone,ActiveTrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New ActiveTrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 25
                Me.columnTemperature.MaxLength = 5
                Me.columnPalletType.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnWhosMove.MaxLength = 3
                Me.columnYardCheck.AllowDBNull = false
                Me.columnYardCheck.DefaultValue = CType(false,Boolean)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewActiveTrailersRow() As ActiveTrailersRow
                Return CType(Me.NewRow,ActiveTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New ActiveTrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(ActiveTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.ActiveTrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowChanged(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.ActiveTrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowChanging(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.ActiveTrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowDeleted(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.ActiveTrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowDeleting(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveActiveTrailersRow(ByVal row As ActiveTrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BarcodeDataSet = New BarcodeDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "ActiveTrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class CactusSpecificDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSequenceID As Global.System.Data.DataColumn
            
            Private columnActionDate As Global.System.Data.DataColumn
            
            Private columnScac As Global.System.Data.DataColumn
            
            Private columnCarrierName As Global.System.Data.DataColumn
            
            Private columnCabNumber As Global.System.Data.DataColumn
            
            Private columnTrailerNumber As Global.System.Data.DataColumn
            
            Private columnSONumber As Global.System.Data.DataColumn
            
            Private columnReferWillRun As Global.System.Data.DataColumn
            
            Private columnReferFuelLevel As Global.System.Data.DataColumn
            
            Private columnTrailerInteriorCondition As Global.System.Data.DataColumn
            
            Private columnHooks As Global.System.Data.DataColumn
            
            Private columnPallets As Global.System.Data.DataColumn
            
            Private columnEmpty As Global.System.Data.DataColumn
            
            Private columnOtherComponents As Global.System.Data.DataColumn
            
            Private columnTrash As Global.System.Data.DataColumn
            
            Private columnLandGear As Global.System.Data.DataColumn
            
            Private columnDoorHinges As Global.System.Data.DataColumn
            
            Private columnSpareTire As Global.System.Data.DataColumn
            
            Private columnDoorLatches As Global.System.Data.DataColumn
            
            Private columnUnitOperation As Global.System.Data.DataColumn
            
            Private columnUnitCondition As Global.System.Data.DataColumn
            
            Private columnDriverSig As Global.System.Data.DataColumn
            
            Private columnSecuritySig As Global.System.Data.DataColumn
            
            Private columnRemarks As Global.System.Data.DataColumn
            
            Private columnRails As Global.System.Data.DataColumn
            
            Private columnAirChute As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnSealNumber As Global.System.Data.DataColumn
            
            Private columnOfficerName As Global.System.Data.DataColumn
            
            Private columnDriversName As Global.System.Data.DataColumn
            
            Private columnDestination As Global.System.Data.DataColumn
            
            Private columnBuyers As Global.System.Data.DataColumn
            
            Private columnBarCodeData As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "CactusSpecific"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SequenceIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSequenceID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActionDateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActionDate
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ScacColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnScac
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierNameColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrierName
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CabNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCabNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SONumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSONumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReferWillRunColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReferWillRun
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReferFuelLevelColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReferFuelLevel
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerInteriorConditionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerInteriorCondition
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property HooksColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnHooks
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPallets
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property EmptyColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEmpty
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property OtherComponentsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOtherComponents
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrashColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrash
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LandGearColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLandGear
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DoorHingesColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDoorHinges
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SpareTireColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpareTire
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DoorLatchesColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDoorLatches
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property UnitOperationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUnitOperation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property UnitConditionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUnitCondition
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DriverSigColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDriverSig
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SecuritySigColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSecuritySig
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRemarks
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property RailsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRails
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AirChuteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAirChute
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SealNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSealNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property OfficerNameColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOfficerName
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DriversNameColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDriversName
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DestinationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDestination
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BuyersColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBuyers
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarCodeDataColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarCodeData
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As CactusSpecificRow
                Get
                    Return CType(Me.Rows(index),CactusSpecificRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusSpecificRowChanging As CactusSpecificRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusSpecificRowChanged As CactusSpecificRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusSpecificRowDeleting As CactusSpecificRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusSpecificRowDeleted As CactusSpecificRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddCactusSpecificRow(ByVal row As CactusSpecificRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddCactusSpecificRow( _
                        ByVal ActionDate As Date,  _
                        ByVal Scac As String,  _
                        ByVal CarrierName As String,  _
                        ByVal CabNumber As String,  _
                        ByVal TrailerNumber As String,  _
                        ByVal SONumber As String,  _
                        ByVal ReferWillRun As Boolean,  _
                        ByVal ReferFuelLevel As Integer,  _
                        ByVal TrailerInteriorCondition As String,  _
                        ByVal Hooks As Boolean,  _
                        ByVal Pallets As Boolean,  _
                        ByVal Empty As Boolean,  _
                        ByVal OtherComponents As String,  _
                        ByVal Trash As Boolean,  _
                        ByVal LandGear As Boolean,  _
                        ByVal DoorHinges As Boolean,  _
                        ByVal SpareTire As Boolean,  _
                        ByVal DoorLatches As Boolean,  _
                        ByVal UnitOperation As Boolean,  _
                        ByVal UnitCondition As Boolean,  _
                        ByVal DriverSig As String,  _
                        ByVal SecuritySig As String,  _
                        ByVal Remarks As String,  _
                        ByVal Rails As Boolean,  _
                        ByVal AirChute As Boolean,  _
                        ByVal Temperature As String,  _
                        ByVal SealNumber As String,  _
                        ByVal OfficerName As String,  _
                        ByVal DriversName As String,  _
                        ByVal Destination As String,  _
                        ByVal Buyers As Boolean,  _
                        ByVal BarCodeData As String) As CactusSpecificRow
                Dim rowCactusSpecificRow As CactusSpecificRow = CType(Me.NewRow,CactusSpecificRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, ActionDate, Scac, CarrierName, CabNumber, TrailerNumber, SONumber, ReferWillRun, ReferFuelLevel, TrailerInteriorCondition, Hooks, Pallets, Empty, OtherComponents, Trash, LandGear, DoorHinges, SpareTire, DoorLatches, UnitOperation, UnitCondition, DriverSig, SecuritySig, Remarks, Rails, AirChute, Temperature, SealNumber, OfficerName, DriversName, Destination, Buyers, BarCodeData}
                rowCactusSpecificRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowCactusSpecificRow)
                Return rowCactusSpecificRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySequenceID(ByVal SequenceID As Integer) As CactusSpecificRow
                Return CType(Me.Rows.Find(New Object() {SequenceID}),CactusSpecificRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As CactusSpecificDataTable = CType(MyBase.Clone,CactusSpecificDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New CactusSpecificDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSequenceID = MyBase.Columns("SequenceID")
                Me.columnActionDate = MyBase.Columns("ActionDate")
                Me.columnScac = MyBase.Columns("Scac")
                Me.columnCarrierName = MyBase.Columns("CarrierName")
                Me.columnCabNumber = MyBase.Columns("CabNumber")
                Me.columnTrailerNumber = MyBase.Columns("TrailerNumber")
                Me.columnSONumber = MyBase.Columns("SONumber")
                Me.columnReferWillRun = MyBase.Columns("ReferWillRun")
                Me.columnReferFuelLevel = MyBase.Columns("ReferFuelLevel")
                Me.columnTrailerInteriorCondition = MyBase.Columns("TrailerInteriorCondition")
                Me.columnHooks = MyBase.Columns("Hooks")
                Me.columnPallets = MyBase.Columns("Pallets")
                Me.columnEmpty = MyBase.Columns("Empty")
                Me.columnOtherComponents = MyBase.Columns("OtherComponents")
                Me.columnTrash = MyBase.Columns("Trash")
                Me.columnLandGear = MyBase.Columns("LandGear")
                Me.columnDoorHinges = MyBase.Columns("DoorHinges")
                Me.columnSpareTire = MyBase.Columns("SpareTire")
                Me.columnDoorLatches = MyBase.Columns("DoorLatches")
                Me.columnUnitOperation = MyBase.Columns("UnitOperation")
                Me.columnUnitCondition = MyBase.Columns("UnitCondition")
                Me.columnDriverSig = MyBase.Columns("DriverSig")
                Me.columnSecuritySig = MyBase.Columns("SecuritySig")
                Me.columnRemarks = MyBase.Columns("Remarks")
                Me.columnRails = MyBase.Columns("Rails")
                Me.columnAirChute = MyBase.Columns("AirChute")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnSealNumber = MyBase.Columns("SealNumber")
                Me.columnOfficerName = MyBase.Columns("OfficerName")
                Me.columnDriversName = MyBase.Columns("DriversName")
                Me.columnDestination = MyBase.Columns("Destination")
                Me.columnBuyers = MyBase.Columns("Buyers")
                Me.columnBarCodeData = MyBase.Columns("BarCodeData")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSequenceID = New Global.System.Data.DataColumn("SequenceID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSequenceID)
                Me.columnActionDate = New Global.System.Data.DataColumn("ActionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActionDate)
                Me.columnScac = New Global.System.Data.DataColumn("Scac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnScac)
                Me.columnCarrierName = New Global.System.Data.DataColumn("CarrierName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrierName)
                Me.columnCabNumber = New Global.System.Data.DataColumn("CabNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCabNumber)
                Me.columnTrailerNumber = New Global.System.Data.DataColumn("TrailerNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerNumber)
                Me.columnSONumber = New Global.System.Data.DataColumn("SONumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSONumber)
                Me.columnReferWillRun = New Global.System.Data.DataColumn("ReferWillRun", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReferWillRun)
                Me.columnReferFuelLevel = New Global.System.Data.DataColumn("ReferFuelLevel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReferFuelLevel)
                Me.columnTrailerInteriorCondition = New Global.System.Data.DataColumn("TrailerInteriorCondition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerInteriorCondition)
                Me.columnHooks = New Global.System.Data.DataColumn("Hooks", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnHooks)
                Me.columnPallets = New Global.System.Data.DataColumn("Pallets", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPallets)
                Me.columnEmpty = New Global.System.Data.DataColumn("Empty", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEmpty)
                Me.columnOtherComponents = New Global.System.Data.DataColumn("OtherComponents", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOtherComponents)
                Me.columnTrash = New Global.System.Data.DataColumn("Trash", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrash)
                Me.columnLandGear = New Global.System.Data.DataColumn("LandGear", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLandGear)
                Me.columnDoorHinges = New Global.System.Data.DataColumn("DoorHinges", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDoorHinges)
                Me.columnSpareTire = New Global.System.Data.DataColumn("SpareTire", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpareTire)
                Me.columnDoorLatches = New Global.System.Data.DataColumn("DoorLatches", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDoorLatches)
                Me.columnUnitOperation = New Global.System.Data.DataColumn("UnitOperation", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUnitOperation)
                Me.columnUnitCondition = New Global.System.Data.DataColumn("UnitCondition", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUnitCondition)
                Me.columnDriverSig = New Global.System.Data.DataColumn("DriverSig", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDriverSig)
                Me.columnSecuritySig = New Global.System.Data.DataColumn("SecuritySig", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSecuritySig)
                Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRemarks)
                Me.columnRails = New Global.System.Data.DataColumn("Rails", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRails)
                Me.columnAirChute = New Global.System.Data.DataColumn("AirChute", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAirChute)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnSealNumber = New Global.System.Data.DataColumn("SealNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSealNumber)
                Me.columnOfficerName = New Global.System.Data.DataColumn("OfficerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOfficerName)
                Me.columnDriversName = New Global.System.Data.DataColumn("DriversName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDriversName)
                Me.columnDestination = New Global.System.Data.DataColumn("Destination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDestination)
                Me.columnBuyers = New Global.System.Data.DataColumn("Buyers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBuyers)
                Me.columnBarCodeData = New Global.System.Data.DataColumn("BarCodeData", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarCodeData)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSequenceID}, true))
                Me.columnSequenceID.AutoIncrement = true
                Me.columnSequenceID.AllowDBNull = false
                Me.columnSequenceID.ReadOnly = true
                Me.columnSequenceID.Unique = true
                Me.columnActionDate.AllowDBNull = false
                Me.columnScac.AllowDBNull = false
                Me.columnScac.MaxLength = 4
                Me.columnCarrierName.MaxLength = 100
                Me.columnCabNumber.MaxLength = 15
                Me.columnTrailerNumber.AllowDBNull = false
                Me.columnTrailerNumber.MaxLength = 15
                Me.columnSONumber.MaxLength = 15
                Me.columnReferWillRun.AllowDBNull = false
                Me.columnReferFuelLevel.AllowDBNull = false
                Me.columnTrailerInteriorCondition.AllowDBNull = false
                Me.columnTrailerInteriorCondition.MaxLength = 1
                Me.columnHooks.AllowDBNull = false
                Me.columnPallets.AllowDBNull = false
                Me.columnEmpty.AllowDBNull = false
                Me.columnOtherComponents.MaxLength = 25
                Me.columnTrash.AllowDBNull = false
                Me.columnLandGear.AllowDBNull = false
                Me.columnDoorHinges.AllowDBNull = false
                Me.columnSpareTire.AllowDBNull = false
                Me.columnDoorLatches.AllowDBNull = false
                Me.columnUnitOperation.AllowDBNull = false
                Me.columnUnitCondition.AllowDBNull = false
                Me.columnDriverSig.AllowDBNull = false
                Me.columnDriverSig.MaxLength = 2147483647
                Me.columnSecuritySig.AllowDBNull = false
                Me.columnSecuritySig.MaxLength = 2147483647
                Me.columnRemarks.AllowDBNull = false
                Me.columnRemarks.MaxLength = 200
                Me.columnRails.AllowDBNull = false
                Me.columnAirChute.AllowDBNull = false
                Me.columnTemperature.AllowDBNull = false
                Me.columnTemperature.MaxLength = 5
                Me.columnSealNumber.AllowDBNull = false
                Me.columnSealNumber.MaxLength = 20
                Me.columnOfficerName.AllowDBNull = false
                Me.columnOfficerName.MaxLength = 20
                Me.columnDriversName.AllowDBNull = false
                Me.columnDriversName.MaxLength = 20
                Me.columnDestination.AllowDBNull = false
                Me.columnDestination.MaxLength = 20
                Me.columnBuyers.AllowDBNull = false
                Me.columnBarCodeData.AllowDBNull = false
                Me.columnBarCodeData.MaxLength = 35
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewCactusSpecificRow() As CactusSpecificRow
                Return CType(Me.NewRow,CactusSpecificRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New CactusSpecificRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(CactusSpecificRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.CactusSpecificRowChangedEvent) Is Nothing) Then
                    RaiseEvent CactusSpecificRowChanged(Me, New CactusSpecificRowChangeEvent(CType(e.Row,CactusSpecificRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.CactusSpecificRowChangingEvent) Is Nothing) Then
                    RaiseEvent CactusSpecificRowChanging(Me, New CactusSpecificRowChangeEvent(CType(e.Row,CactusSpecificRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.CactusSpecificRowDeletedEvent) Is Nothing) Then
                    RaiseEvent CactusSpecificRowDeleted(Me, New CactusSpecificRowChangeEvent(CType(e.Row,CactusSpecificRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.CactusSpecificRowDeletingEvent) Is Nothing) Then
                    RaiseEvent CactusSpecificRowDeleting(Me, New CactusSpecificRowChangeEvent(CType(e.Row,CactusSpecificRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveCactusSpecificRow(ByVal row As CactusSpecificRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BarcodeDataSet = New BarcodeDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "CactusSpecificDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class CactusOutboundDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSequenceID As Global.System.Data.DataColumn
            
            Private columnScac As Global.System.Data.DataColumn
            
            Private columnCarrierName As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnActionDate As Global.System.Data.DataColumn
            
            Private columnSecuritySignature As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnReferFuelLevel As Global.System.Data.DataColumn
            
            Private columnSealNumber As Global.System.Data.DataColumn
            
            Private columnOfficerName As Global.System.Data.DataColumn
            
            Private columnDestination As Global.System.Data.DataColumn
            
            Private columnDriverName As Global.System.Data.DataColumn
            
            Private columnRemarks As Global.System.Data.DataColumn
            
            Private columnDeliverDate As Global.System.Data.DataColumn
            
            Private columnTruckNumber As Global.System.Data.DataColumn
            
            Private columnSetPoint As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "CactusOutbound"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SequenceIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSequenceID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ScacColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnScac
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierNameColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrierName
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActionDateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActionDate
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SecuritySignatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSecuritySignature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReferFuelLevelColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReferFuelLevel
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SealNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSealNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property OfficerNameColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOfficerName
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DestinationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDestination
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DriverNameColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDriverName
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRemarks
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DeliverDateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDeliverDate
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TruckNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTruckNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SetPointColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSetPoint
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As CactusOutboundRow
                Get
                    Return CType(Me.Rows(index),CactusOutboundRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusOutboundRowChanging As CactusOutboundRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusOutboundRowChanged As CactusOutboundRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusOutboundRowDeleting As CactusOutboundRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CactusOutboundRowDeleted As CactusOutboundRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddCactusOutboundRow(ByVal row As CactusOutboundRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddCactusOutboundRow(ByVal Scac As String, ByVal CarrierName As String, ByVal TrailerID As String, ByVal ActionDate As Date, ByVal SecuritySignature As String, ByVal Temperature As String, ByVal ReferFuelLevel As Integer, ByVal SealNumber As String, ByVal OfficerName As String, ByVal Destination As String, ByVal DriverName As String, ByVal Remarks As String, ByVal DeliverDate As String, ByVal TruckNumber As String, ByVal SetPoint As String) As CactusOutboundRow
                Dim rowCactusOutboundRow As CactusOutboundRow = CType(Me.NewRow,CactusOutboundRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Scac, CarrierName, TrailerID, ActionDate, SecuritySignature, Temperature, ReferFuelLevel, SealNumber, OfficerName, Destination, DriverName, Remarks, DeliverDate, TruckNumber, SetPoint}
                rowCactusOutboundRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowCactusOutboundRow)
                Return rowCactusOutboundRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySequenceID(ByVal SequenceID As Integer) As CactusOutboundRow
                Return CType(Me.Rows.Find(New Object() {SequenceID}),CactusOutboundRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As CactusOutboundDataTable = CType(MyBase.Clone,CactusOutboundDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New CactusOutboundDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSequenceID = MyBase.Columns("SequenceID")
                Me.columnScac = MyBase.Columns("Scac")
                Me.columnCarrierName = MyBase.Columns("CarrierName")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnActionDate = MyBase.Columns("ActionDate")
                Me.columnSecuritySignature = MyBase.Columns("SecuritySignature")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnReferFuelLevel = MyBase.Columns("ReferFuelLevel")
                Me.columnSealNumber = MyBase.Columns("SealNumber")
                Me.columnOfficerName = MyBase.Columns("OfficerName")
                Me.columnDestination = MyBase.Columns("Destination")
                Me.columnDriverName = MyBase.Columns("DriverName")
                Me.columnRemarks = MyBase.Columns("Remarks")
                Me.columnDeliverDate = MyBase.Columns("DeliverDate")
                Me.columnTruckNumber = MyBase.Columns("TruckNumber")
                Me.columnSetPoint = MyBase.Columns("SetPoint")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSequenceID = New Global.System.Data.DataColumn("SequenceID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSequenceID)
                Me.columnScac = New Global.System.Data.DataColumn("Scac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnScac)
                Me.columnCarrierName = New Global.System.Data.DataColumn("CarrierName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrierName)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnActionDate = New Global.System.Data.DataColumn("ActionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActionDate)
                Me.columnSecuritySignature = New Global.System.Data.DataColumn("SecuritySignature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSecuritySignature)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnReferFuelLevel = New Global.System.Data.DataColumn("ReferFuelLevel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReferFuelLevel)
                Me.columnSealNumber = New Global.System.Data.DataColumn("SealNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSealNumber)
                Me.columnOfficerName = New Global.System.Data.DataColumn("OfficerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOfficerName)
                Me.columnDestination = New Global.System.Data.DataColumn("Destination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDestination)
                Me.columnDriverName = New Global.System.Data.DataColumn("DriverName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDriverName)
                Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRemarks)
                Me.columnDeliverDate = New Global.System.Data.DataColumn("DeliverDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDeliverDate)
                Me.columnTruckNumber = New Global.System.Data.DataColumn("TruckNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTruckNumber)
                Me.columnSetPoint = New Global.System.Data.DataColumn("SetPoint", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSetPoint)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSequenceID}, true))
                Me.columnSequenceID.AutoIncrement = true
                Me.columnSequenceID.AllowDBNull = false
                Me.columnSequenceID.ReadOnly = true
                Me.columnSequenceID.Unique = true
                Me.columnScac.AllowDBNull = false
                Me.columnScac.MaxLength = 4
                Me.columnCarrierName.AllowDBNull = false
                Me.columnCarrierName.MaxLength = 100
                Me.columnTrailerID.AllowDBNull = false
                Me.columnTrailerID.MaxLength = 15
                Me.columnActionDate.AllowDBNull = false
                Me.columnSecuritySignature.AllowDBNull = false
                Me.columnSecuritySignature.MaxLength = 2147483647
                Me.columnTemperature.AllowDBNull = false
                Me.columnTemperature.MaxLength = 5
                Me.columnReferFuelLevel.AllowDBNull = false
                Me.columnSealNumber.AllowDBNull = false
                Me.columnSealNumber.MaxLength = 15
                Me.columnOfficerName.AllowDBNull = false
                Me.columnOfficerName.MaxLength = 15
                Me.columnDestination.AllowDBNull = false
                Me.columnDestination.MaxLength = 20
                Me.columnDriverName.AllowDBNull = false
                Me.columnDriverName.MaxLength = 20
                Me.columnRemarks.AllowDBNull = false
                Me.columnRemarks.MaxLength = 200
                Me.columnDeliverDate.AllowDBNull = false
                Me.columnDeliverDate.MaxLength = 15
                Me.columnTruckNumber.AllowDBNull = false
                Me.columnTruckNumber.MaxLength = 15
                Me.columnSetPoint.AllowDBNull = false
                Me.columnSetPoint.MaxLength = 3
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewCactusOutboundRow() As CactusOutboundRow
                Return CType(Me.NewRow,CactusOutboundRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New CactusOutboundRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(CactusOutboundRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.CactusOutboundRowChangedEvent) Is Nothing) Then
                    RaiseEvent CactusOutboundRowChanged(Me, New CactusOutboundRowChangeEvent(CType(e.Row,CactusOutboundRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.CactusOutboundRowChangingEvent) Is Nothing) Then
                    RaiseEvent CactusOutboundRowChanging(Me, New CactusOutboundRowChangeEvent(CType(e.Row,CactusOutboundRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.CactusOutboundRowDeletedEvent) Is Nothing) Then
                    RaiseEvent CactusOutboundRowDeleted(Me, New CactusOutboundRowChangeEvent(CType(e.Row,CactusOutboundRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.CactusOutboundRowDeletingEvent) Is Nothing) Then
                    RaiseEvent CactusOutboundRowDeleting(Me, New CactusOutboundRowChangeEvent(CType(e.Row,CactusOutboundRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveCactusOutboundRow(ByVal row As CactusOutboundRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BarcodeDataSet = New BarcodeDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "CactusOutboundDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TrailersMainDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "TrailersMain"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TrailersMainRow
                Get
                    Return CType(Me.Rows(index),TrailersMainRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersMainRowChanging As TrailersMainRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersMainRowChanged As TrailersMainRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersMainRowDeleting As TrailersMainRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersMainRowDeleted As TrailersMainRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTrailersMainRow(ByVal row As TrailersMainRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTrailersMainRow( _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal Carrier As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal Temperature As String,  _
                        ByVal PalletType As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal YardCheck As Boolean) As TrailersMainRow
                Dim rowTrailersMainRow As TrailersMainRow = CType(Me.NewRow,TrailersMainRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, Carrier, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, MoveStatus, Temperature, PalletType, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, YardCheck}
                rowTrailersMainRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTrailersMainRow)
                Return rowTrailersMainRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As TrailersMainRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),TrailersMainRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TrailersMainDataTable = CType(MyBase.Clone,TrailersMainDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TrailersMainDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 25
                Me.columnTemperature.MaxLength = 5
                Me.columnPalletType.MaxLength = 1
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 3
                Me.columnYardCheck.AllowDBNull = false
                Me.columnYardCheck.DefaultValue = CType(false,Boolean)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTrailersMainRow() As TrailersMainRow
                Return CType(Me.NewRow,TrailersMainRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TrailersMainRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TrailersMainRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TrailersMainRowChangedEvent) Is Nothing) Then
                    RaiseEvent TrailersMainRowChanged(Me, New TrailersMainRowChangeEvent(CType(e.Row,TrailersMainRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TrailersMainRowChangingEvent) Is Nothing) Then
                    RaiseEvent TrailersMainRowChanging(Me, New TrailersMainRowChangeEvent(CType(e.Row,TrailersMainRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TrailersMainRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TrailersMainRowDeleted(Me, New TrailersMainRowChangeEvent(CType(e.Row,TrailersMainRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TrailersMainRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TrailersMainRowDeleting(Me, New TrailersMainRowChangeEvent(CType(e.Row,TrailersMainRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTrailersMainRow(ByVal row As TrailersMainRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BarcodeDataSet = New BarcodeDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TrailersMainDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BarcodesRow
            Inherits Global.System.Data.DataRow
            
            Private tableBarcodes As BarcodesDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBarcodes = CType(Me.Table,BarcodesDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property BarcodeData() As String
                Get
                    Return CType(Me(Me.tableBarcodes.BarcodeDataColumn),String)
                End Get
                Set
                    Me(Me.tableBarcodes.BarcodeDataColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property scac() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBarcodes.scacColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'scac' in table 'Barcodes' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBarcodes.scacColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBarcodes.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'Barcodes' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBarcodes.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBarcodes.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Barcodes' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBarcodes.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsscacNull() As Boolean
                Return Me.IsNull(Me.tableBarcodes.scacColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetscacNull()
                Me(Me.tableBarcodes.scacColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableBarcodes.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableBarcodes.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableBarcodes.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableBarcodes.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class CarriersRow
            Inherits Global.System.Data.DataRow
            
            Private tableCarriers As CarriersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableCarriers = CType(Me.Table,CarriersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ID() As Integer
                Get
                    Return CType(Me(Me.tableCarriers.IDColumn),Integer)
                End Get
                Set
                    Me(Me.tableCarriers.IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCarriers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'Carriers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCarriers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCarriers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Carriers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCarriers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCarriers.AddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'AddedBy' in table 'Carriers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCarriers.AddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SysCode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCarriers.SysCodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SysCode' in table 'Carriers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCarriers.SysCodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableCarriers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableCarriers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableCarriers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableCarriers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsAddedByNull() As Boolean
                Return Me.IsNull(Me.tableCarriers.AddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetAddedByNull()
                Me(Me.tableCarriers.AddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSysCodeNull() As Boolean
                Return Me.IsNull(Me.tableCarriers.SysCodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSysCodeNull()
                Me(Me.tableCarriers.SysCodeColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableTrailers As TrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTrailers = CType(Me.Table,TrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CarrierName() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CarrierNameColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CarrierName' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CarrierNameColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Buyers() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.BuyersColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.BuyersColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableTrailers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableTrailers.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableTrailers.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableTrailers.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableTrailers.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableTrailers.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableTrailers.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableTrailers.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableTrailers.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableTrailers.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableTrailers.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNameNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CarrierNameColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNameNull()
                Me(Me.tableTrailers.CarrierNameColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class ActiveTrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableActiveTrailers As ActiveTrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableActiveTrailers = CType(Me.Table,ActiveTrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableActiveTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableActiveTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableActiveTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableActiveTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableActiveTrailers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableActiveTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableActiveTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableActiveTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableActiveTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableActiveTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableActiveTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableActiveTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableActiveTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableActiveTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableActiveTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableActiveTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class CactusSpecificRow
            Inherits Global.System.Data.DataRow
            
            Private tableCactusSpecific As CactusSpecificDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableCactusSpecific = CType(Me.Table,CactusSpecificDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SequenceID() As Integer
                Get
                    Return CType(Me(Me.tableCactusSpecific.SequenceIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableCactusSpecific.SequenceIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ActionDate() As Date
                Get
                    Return CType(Me(Me.tableCactusSpecific.ActionDateColumn),Date)
                End Get
                Set
                    Me(Me.tableCactusSpecific.ActionDateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Scac() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.ScacColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.ScacColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CarrierName() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCactusSpecific.CarrierNameColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CarrierName' in table 'CactusSpecific' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCactusSpecific.CarrierNameColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CabNumber() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCactusSpecific.CabNumberColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CabNumber' in table 'CactusSpecific' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCactusSpecific.CabNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerNumber() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.TrailerNumberColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.TrailerNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SONumber() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCactusSpecific.SONumberColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SONumber' in table 'CactusSpecific' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCactusSpecific.SONumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReferWillRun() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.ReferWillRunColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.ReferWillRunColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReferFuelLevel() As Integer
                Get
                    Return CType(Me(Me.tableCactusSpecific.ReferFuelLevelColumn),Integer)
                End Get
                Set
                    Me(Me.tableCactusSpecific.ReferFuelLevelColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerInteriorCondition() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.TrailerInteriorConditionColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.TrailerInteriorConditionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Hooks() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.HooksColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.HooksColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Pallets() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.PalletsColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.PalletsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Empty() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.EmptyColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.EmptyColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property OtherComponents() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCactusSpecific.OtherComponentsColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'OtherComponents' in table 'CactusSpecific' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCactusSpecific.OtherComponentsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Trash() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.TrashColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.TrashColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LandGear() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.LandGearColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.LandGearColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DoorHinges() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.DoorHingesColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.DoorHingesColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SpareTire() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.SpareTireColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.SpareTireColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DoorLatches() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.DoorLatchesColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.DoorLatchesColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property UnitOperation() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.UnitOperationColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.UnitOperationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property UnitCondition() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.UnitConditionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.UnitConditionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DriverSig() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.DriverSigColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.DriverSigColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SecuritySig() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.SecuritySigColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.SecuritySigColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Remarks() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.RemarksColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.RemarksColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Rails() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.RailsColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.RailsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AirChute() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.AirChuteColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.AirChuteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.TemperatureColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SealNumber() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.SealNumberColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.SealNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property OfficerName() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.OfficerNameColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.OfficerNameColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DriversName() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.DriversNameColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.DriversNameColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Destination() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.DestinationColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.DestinationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Buyers() As Boolean
                Get
                    Return CType(Me(Me.tableCactusSpecific.BuyersColumn),Boolean)
                End Get
                Set
                    Me(Me.tableCactusSpecific.BuyersColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property BarCodeData() As String
                Get
                    Return CType(Me(Me.tableCactusSpecific.BarCodeDataColumn),String)
                End Get
                Set
                    Me(Me.tableCactusSpecific.BarCodeDataColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNameNull() As Boolean
                Return Me.IsNull(Me.tableCactusSpecific.CarrierNameColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNameNull()
                Me(Me.tableCactusSpecific.CarrierNameColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCabNumberNull() As Boolean
                Return Me.IsNull(Me.tableCactusSpecific.CabNumberColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCabNumberNull()
                Me(Me.tableCactusSpecific.CabNumberColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSONumberNull() As Boolean
                Return Me.IsNull(Me.tableCactusSpecific.SONumberColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSONumberNull()
                Me(Me.tableCactusSpecific.SONumberColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsOtherComponentsNull() As Boolean
                Return Me.IsNull(Me.tableCactusSpecific.OtherComponentsColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetOtherComponentsNull()
                Me(Me.tableCactusSpecific.OtherComponentsColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class CactusOutboundRow
            Inherits Global.System.Data.DataRow
            
            Private tableCactusOutbound As CactusOutboundDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableCactusOutbound = CType(Me.Table,CactusOutboundDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SequenceID() As Integer
                Get
                    Return CType(Me(Me.tableCactusOutbound.SequenceIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableCactusOutbound.SequenceIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Scac() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.ScacColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.ScacColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CarrierName() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.CarrierNameColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.CarrierNameColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.TrailerIDColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ActionDate() As Date
                Get
                    Return CType(Me(Me.tableCactusOutbound.ActionDateColumn),Date)
                End Get
                Set
                    Me(Me.tableCactusOutbound.ActionDateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SecuritySignature() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.SecuritySignatureColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.SecuritySignatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.TemperatureColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReferFuelLevel() As Integer
                Get
                    Return CType(Me(Me.tableCactusOutbound.ReferFuelLevelColumn),Integer)
                End Get
                Set
                    Me(Me.tableCactusOutbound.ReferFuelLevelColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SealNumber() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.SealNumberColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.SealNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property OfficerName() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.OfficerNameColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.OfficerNameColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Destination() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.DestinationColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.DestinationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DriverName() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.DriverNameColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.DriverNameColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Remarks() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.RemarksColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.RemarksColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DeliverDate() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.DeliverDateColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.DeliverDateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TruckNumber() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.TruckNumberColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.TruckNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SetPoint() As String
                Get
                    Return CType(Me(Me.tableCactusOutbound.SetPointColumn),String)
                End Get
                Set
                    Me(Me.tableCactusOutbound.SetPointColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TrailersMainRow
            Inherits Global.System.Data.DataRow
            
            Private tableTrailersMain As TrailersMainDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTrailersMain = CType(Me.Table,TrailersMainDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableTrailersMain.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailersMain.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableTrailersMain.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailersMain.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailersMain.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'TrailersMain' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailersMain.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableTrailersMain.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailersMain.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableTrailersMain.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableTrailersMain.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableTrailersMain.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableTrailersMain.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableTrailersMain.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableTrailersMain.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableTrailersMain.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableTrailersMain.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableTrailersMain.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableTrailersMain.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableTrailersMain.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableTrailersMain.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableTrailersMain.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableTrailersMain.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableTrailersMain.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableTrailersMain.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableTrailersMain.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableTrailersMain.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableTrailersMain.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableTrailersMain.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableTrailersMain.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableTrailersMain.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableTrailersMain.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableTrailersMain.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableTrailersMain.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class BarcodesRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BarcodesRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As BarcodesRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As BarcodesRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class CarriersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As CarriersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As CarriersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As CarriersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class ActiveTrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As ActiveTrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As ActiveTrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As ActiveTrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class CactusSpecificRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As CactusSpecificRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As CactusSpecificRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As CactusSpecificRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class CactusOutboundRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As CactusOutboundRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As CactusOutboundRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As CactusOutboundRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TrailersMainRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TrailersMainRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TrailersMainRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TrailersMainRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("YardCheckReferenceDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")>  _
    Partial Public Class YardCheckReferenceDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableYardCheck As YardCheckDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("YardCheck")) Is Nothing) Then
                    MyBase.Tables.Add(New YardCheckDataTable(ds.Tables("YardCheck")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property YardCheck() As YardCheckDataTable
            Get
                Return Me.tableYardCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As YardCheckReferenceDataSet = CType(MyBase.Clone,YardCheckReferenceDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("YardCheck")) Is Nothing) Then
                    MyBase.Tables.Add(New YardCheckDataTable(ds.Tables("YardCheck")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableYardCheck = CType(MyBase.Tables("YardCheck"),YardCheckDataTable)
            If (initTable = true) Then
                If (Not (Me.tableYardCheck) Is Nothing) Then
                    Me.tableYardCheck.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "YardCheckReferenceDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/YardCheckReferenceDataSet.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableYardCheck = New YardCheckDataTable()
            MyBase.Tables.Add(Me.tableYardCheck)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeYardCheck() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As YardCheckReferenceDataSet = New YardCheckReferenceDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub YardCheckRowChangeEventHandler(ByVal sender As Object, ByVal e As YardCheckRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class YardCheckDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnYardCheckID As Global.System.Data.DataColumn
            
            Private columnDateChecked As Global.System.Data.DataColumn
            
            Private columnCheckedBy As Global.System.Data.DataColumn
            
            Private columnReviewed As Global.System.Data.DataColumn
            
            Private columnReviewedBy As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "YardCheck"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheckID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DateCheckedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDateChecked
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CheckedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCheckedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReviewedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReviewed
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReviewedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReviewedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As YardCheckRow
                Get
                    Return CType(Me.Rows(index),YardCheckRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowChanging As YardCheckRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowChanged As YardCheckRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowDeleting As YardCheckRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowDeleted As YardCheckRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddYardCheckRow(ByVal row As YardCheckRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddYardCheckRow(ByVal YardCheckID As Decimal, ByVal DateChecked As Date, ByVal CheckedBy As String, ByVal Reviewed As Boolean, ByVal ReviewedBy As String) As YardCheckRow
                Dim rowYardCheckRow As YardCheckRow = CType(Me.NewRow,YardCheckRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, YardCheckID, DateChecked, CheckedBy, Reviewed, ReviewedBy}
                rowYardCheckRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowYardCheckRow)
                Return rowYardCheckRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As YardCheckRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),YardCheckRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As YardCheckDataTable = CType(MyBase.Clone,YardCheckDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New YardCheckDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnYardCheckID = MyBase.Columns("YardCheckID")
                Me.columnDateChecked = MyBase.Columns("DateChecked")
                Me.columnCheckedBy = MyBase.Columns("CheckedBy")
                Me.columnReviewed = MyBase.Columns("Reviewed")
                Me.columnReviewedBy = MyBase.Columns("ReviewedBy")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnYardCheckID = New Global.System.Data.DataColumn("YardCheckID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheckID)
                Me.columnDateChecked = New Global.System.Data.DataColumn("DateChecked", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDateChecked)
                Me.columnCheckedBy = New Global.System.Data.DataColumn("CheckedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCheckedBy)
                Me.columnReviewed = New Global.System.Data.DataColumn("Reviewed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReviewed)
                Me.columnReviewedBy = New Global.System.Data.DataColumn("ReviewedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReviewedBy)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnYardCheckID.AllowDBNull = false
                Me.columnDateChecked.AllowDBNull = false
                Me.columnCheckedBy.AllowDBNull = false
                Me.columnCheckedBy.MaxLength = 15
                Me.columnReviewed.AllowDBNull = false
                Me.columnReviewedBy.AllowDBNull = false
                Me.columnReviewedBy.MaxLength = 15
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewYardCheckRow() As YardCheckRow
                Return CType(Me.NewRow,YardCheckRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New YardCheckRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(YardCheckRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.YardCheckRowChangedEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowChanged(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.YardCheckRowChangingEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowChanging(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.YardCheckRowDeletedEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowDeleted(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.YardCheckRowDeletingEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowDeleting(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveYardCheckRow(ByVal row As YardCheckRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As YardCheckReferenceDataSet = New YardCheckReferenceDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "YardCheckDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class YardCheckRow
            Inherits Global.System.Data.DataRow
            
            Private tableYardCheck As YardCheckDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableYardCheck = CType(Me.Table,YardCheckDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableYardCheck.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableYardCheck.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheckID() As Decimal
                Get
                    Return CType(Me(Me.tableYardCheck.YardCheckIDColumn),Decimal)
                End Get
                Set
                    Me(Me.tableYardCheck.YardCheckIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DateChecked() As Date
                Get
                    Return CType(Me(Me.tableYardCheck.DateCheckedColumn),Date)
                End Get
                Set
                    Me(Me.tableYardCheck.DateCheckedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CheckedBy() As String
                Get
                    Return CType(Me(Me.tableYardCheck.CheckedByColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheck.CheckedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Reviewed() As Boolean
                Get
                    Return CType(Me(Me.tableYardCheck.ReviewedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableYardCheck.ReviewedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReviewedBy() As String
                Get
                    Return CType(Me(Me.tableYardCheck.ReviewedByColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheck.ReviewedByColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class YardCheckRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As YardCheckRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As YardCheckRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As YardCheckRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("YardCheckReview"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")>  _
    Partial Public Class YardCheckReview
        Inherits Global.System.Data.DataSet
        
        Private tableYardCheck As YardCheckDataTable
        
        Private tableYardCheckDetails As YardCheckDetailsDataTable
        
        Private tableTrailers As TrailersDataTable
        
        Private relationYardCheck_YardCheckDetails As Global.System.Data.DataRelation
        
        Private relationYardCheckDetails_Trailers As Global.System.Data.DataRelation
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("YardCheck")) Is Nothing) Then
                    MyBase.Tables.Add(New YardCheckDataTable(ds.Tables("YardCheck")))
                End If
                If (Not (ds.Tables("YardCheckDetails")) Is Nothing) Then
                    MyBase.Tables.Add(New YardCheckDetailsDataTable(ds.Tables("YardCheckDetails")))
                End If
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property YardCheck() As YardCheckDataTable
            Get
                Return Me.tableYardCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property YardCheckDetails() As YardCheckDetailsDataTable
            Get
                Return Me.tableYardCheckDetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Trailers() As TrailersDataTable
            Get
                Return Me.tableTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As YardCheckReview = CType(MyBase.Clone,YardCheckReview)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("YardCheck")) Is Nothing) Then
                    MyBase.Tables.Add(New YardCheckDataTable(ds.Tables("YardCheck")))
                End If
                If (Not (ds.Tables("YardCheckDetails")) Is Nothing) Then
                    MyBase.Tables.Add(New YardCheckDetailsDataTable(ds.Tables("YardCheckDetails")))
                End If
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableYardCheck = CType(MyBase.Tables("YardCheck"),YardCheckDataTable)
            If (initTable = true) Then
                If (Not (Me.tableYardCheck) Is Nothing) Then
                    Me.tableYardCheck.InitVars
                End If
            End If
            Me.tableYardCheckDetails = CType(MyBase.Tables("YardCheckDetails"),YardCheckDetailsDataTable)
            If (initTable = true) Then
                If (Not (Me.tableYardCheckDetails) Is Nothing) Then
                    Me.tableYardCheckDetails.InitVars
                End If
            End If
            Me.tableTrailers = CType(MyBase.Tables("Trailers"),TrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTrailers) Is Nothing) Then
                    Me.tableTrailers.InitVars
                End If
            End If
            Me.relationYardCheck_YardCheckDetails = Me.Relations("YardCheck_YardCheckDetails")
            Me.relationYardCheckDetails_Trailers = Me.Relations("YardCheckDetails_Trailers")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "YardCheckReview"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/YardCheckReview.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableYardCheck = New YardCheckDataTable()
            MyBase.Tables.Add(Me.tableYardCheck)
            Me.tableYardCheckDetails = New YardCheckDetailsDataTable()
            MyBase.Tables.Add(Me.tableYardCheckDetails)
            Me.tableTrailers = New TrailersDataTable()
            MyBase.Tables.Add(Me.tableTrailers)
            Me.relationYardCheck_YardCheckDetails = New Global.System.Data.DataRelation("YardCheck_YardCheckDetails", New Global.System.Data.DataColumn() {Me.tableYardCheck.YardCheckIDColumn}, New Global.System.Data.DataColumn() {Me.tableYardCheckDetails.YardCheckIDColumn}, false)
            Me.Relations.Add(Me.relationYardCheck_YardCheckDetails)
            Me.relationYardCheckDetails_Trailers = New Global.System.Data.DataRelation("YardCheckDetails_Trailers", New Global.System.Data.DataColumn() {Me.tableYardCheckDetails.TrailerSystemIDColumn}, New Global.System.Data.DataColumn() {Me.tableTrailers.SystemIDColumn}, false)
            Me.Relations.Add(Me.relationYardCheckDetails_Trailers)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeYardCheck() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeYardCheckDetails() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As YardCheckReview = New YardCheckReview()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub YardCheckRowChangeEventHandler(ByVal sender As Object, ByVal e As YardCheckRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub YardCheckDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As YardCheckDetailsRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As TrailersRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class YardCheckDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnYardCheckID As Global.System.Data.DataColumn
            
            Private columnDateChecked As Global.System.Data.DataColumn
            
            Private columnCheckedBy As Global.System.Data.DataColumn
            
            Private columnReviewed As Global.System.Data.DataColumn
            
            Private columnReviewedBy As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "YardCheck"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheckID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DateCheckedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDateChecked
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CheckedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCheckedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReviewedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReviewed
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReviewedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReviewedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As YardCheckRow
                Get
                    Return CType(Me.Rows(index),YardCheckRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowChanging As YardCheckRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowChanged As YardCheckRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowDeleting As YardCheckRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckRowDeleted As YardCheckRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddYardCheckRow(ByVal row As YardCheckRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddYardCheckRow(ByVal YardCheckID As Decimal, ByVal DateChecked As Date, ByVal CheckedBy As String, ByVal Reviewed As Boolean, ByVal ReviewedBy As String) As YardCheckRow
                Dim rowYardCheckRow As YardCheckRow = CType(Me.NewRow,YardCheckRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, YardCheckID, DateChecked, CheckedBy, Reviewed, ReviewedBy}
                rowYardCheckRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowYardCheckRow)
                Return rowYardCheckRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As YardCheckRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),YardCheckRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As YardCheckDataTable = CType(MyBase.Clone,YardCheckDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New YardCheckDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnYardCheckID = MyBase.Columns("YardCheckID")
                Me.columnDateChecked = MyBase.Columns("DateChecked")
                Me.columnCheckedBy = MyBase.Columns("CheckedBy")
                Me.columnReviewed = MyBase.Columns("Reviewed")
                Me.columnReviewedBy = MyBase.Columns("ReviewedBy")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnYardCheckID = New Global.System.Data.DataColumn("YardCheckID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheckID)
                Me.columnDateChecked = New Global.System.Data.DataColumn("DateChecked", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDateChecked)
                Me.columnCheckedBy = New Global.System.Data.DataColumn("CheckedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCheckedBy)
                Me.columnReviewed = New Global.System.Data.DataColumn("Reviewed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReviewed)
                Me.columnReviewedBy = New Global.System.Data.DataColumn("ReviewedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReviewedBy)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnYardCheckID.AllowDBNull = false
                Me.columnDateChecked.AllowDBNull = false
                Me.columnCheckedBy.AllowDBNull = false
                Me.columnCheckedBy.MaxLength = 15
                Me.columnReviewed.AllowDBNull = false
                Me.columnReviewedBy.AllowDBNull = false
                Me.columnReviewedBy.MaxLength = 15
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewYardCheckRow() As YardCheckRow
                Return CType(Me.NewRow,YardCheckRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New YardCheckRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(YardCheckRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.YardCheckRowChangedEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowChanged(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.YardCheckRowChangingEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowChanging(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.YardCheckRowDeletedEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowDeleted(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.YardCheckRowDeletingEvent) Is Nothing) Then
                    RaiseEvent YardCheckRowDeleting(Me, New YardCheckRowChangeEvent(CType(e.Row,YardCheckRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveYardCheckRow(ByVal row As YardCheckRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As YardCheckReview = New YardCheckReview()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "YardCheckDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class YardCheckDetailsDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnYardCheckStatus As Global.System.Data.DataColumn
            
            Private columnTrailerSystemID As Global.System.Data.DataColumn
            
            Private columnYardCheckID As Global.System.Data.DataColumn
            
            Private columnChecked As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "YardCheckDetails"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheckStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerSystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheckID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CheckedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnChecked
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As YardCheckDetailsRow
                Get
                    Return CType(Me.Rows(index),YardCheckDetailsRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckDetailsRowChanging As YardCheckDetailsRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckDetailsRowChanged As YardCheckDetailsRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckDetailsRowDeleting As YardCheckDetailsRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event YardCheckDetailsRowDeleted As YardCheckDetailsRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddYardCheckDetailsRow(ByVal row As YardCheckDetailsRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddYardCheckDetailsRow(ByVal Barcode As String, ByVal SCAC As String, ByVal TrailerID As String, ByVal CurrentLocation As String, ByVal LoadStatus As String, ByVal Temperature As String, ByVal YardCheckStatus As String, ByVal TrailerSystemID As Integer, ByVal parentYardCheckRowByYardCheck_YardCheckDetails As YardCheckRow, ByVal Checked As Boolean) As YardCheckDetailsRow
                Dim rowYardCheckDetailsRow As YardCheckDetailsRow = CType(Me.NewRow,YardCheckDetailsRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, TrailerID, CurrentLocation, LoadStatus, Temperature, YardCheckStatus, TrailerSystemID, Nothing, Checked}
                If (Not (parentYardCheckRowByYardCheck_YardCheckDetails) Is Nothing) Then
                    columnValuesArray(9) = parentYardCheckRowByYardCheck_YardCheckDetails(1)
                End If
                rowYardCheckDetailsRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowYardCheckDetailsRow)
                Return rowYardCheckDetailsRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As YardCheckDetailsRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),YardCheckDetailsRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As YardCheckDetailsDataTable = CType(MyBase.Clone,YardCheckDetailsDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New YardCheckDetailsDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnYardCheckStatus = MyBase.Columns("YardCheckStatus")
                Me.columnTrailerSystemID = MyBase.Columns("TrailerSystemID")
                Me.columnYardCheckID = MyBase.Columns("YardCheckID")
                Me.columnChecked = MyBase.Columns("Checked")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnYardCheckStatus = New Global.System.Data.DataColumn("YardCheckStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheckStatus)
                Me.columnTrailerSystemID = New Global.System.Data.DataColumn("TrailerSystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerSystemID)
                Me.columnYardCheckID = New Global.System.Data.DataColumn("YardCheckID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheckID)
                Me.columnChecked = New Global.System.Data.DataColumn("Checked", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnChecked)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.AllowDBNull = false
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.AllowDBNull = false
                Me.columnSCAC.MaxLength = 4
                Me.columnTrailerID.AllowDBNull = false
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.AllowDBNull = false
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnLoadStatus.AllowDBNull = false
                Me.columnLoadStatus.MaxLength = 1
                Me.columnTemperature.AllowDBNull = false
                Me.columnTemperature.MaxLength = 5
                Me.columnYardCheckStatus.AllowDBNull = false
                Me.columnYardCheckStatus.MaxLength = 1
                Me.columnTrailerSystemID.AllowDBNull = false
                Me.columnYardCheckID.AllowDBNull = false
                Me.columnChecked.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewYardCheckDetailsRow() As YardCheckDetailsRow
                Return CType(Me.NewRow,YardCheckDetailsRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New YardCheckDetailsRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(YardCheckDetailsRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.YardCheckDetailsRowChangedEvent) Is Nothing) Then
                    RaiseEvent YardCheckDetailsRowChanged(Me, New YardCheckDetailsRowChangeEvent(CType(e.Row,YardCheckDetailsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.YardCheckDetailsRowChangingEvent) Is Nothing) Then
                    RaiseEvent YardCheckDetailsRowChanging(Me, New YardCheckDetailsRowChangeEvent(CType(e.Row,YardCheckDetailsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.YardCheckDetailsRowDeletedEvent) Is Nothing) Then
                    RaiseEvent YardCheckDetailsRowDeleted(Me, New YardCheckDetailsRowChangeEvent(CType(e.Row,YardCheckDetailsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.YardCheckDetailsRowDeletingEvent) Is Nothing) Then
                    RaiseEvent YardCheckDetailsRowDeleting(Me, New YardCheckDetailsRowChangeEvent(CType(e.Row,YardCheckDetailsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveYardCheckDetailsRow(ByVal row As YardCheckDetailsRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As YardCheckReview = New YardCheckReview()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "YardCheckDetailsDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Trailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TrailersRow
                Get
                    Return CType(Me.Rows(index),TrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanging As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanged As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleting As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleted As TrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTrailersRow( _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal Carrier As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal Temperature As String,  _
                        ByVal PalletType As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal YardCheck As Boolean) As TrailersRow
                Dim rowTrailersRow As TrailersRow = CType(Me.NewRow,TrailersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, Carrier, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, MoveStatus, Temperature, PalletType, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, YardCheck}
                rowTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTrailersRow)
                Return rowTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As TrailersRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TrailersDataTable = CType(MyBase.Clone,TrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 1
                Me.columnTemperature.MaxLength = 3
                Me.columnPalletType.MaxLength = 1
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 3
                Me.columnYardCheck.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTrailersRow() As TrailersRow
                Return CType(Me.NewRow,TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanged(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanging(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleted(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleting(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As YardCheckReview = New YardCheckReview()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class YardCheckRow
            Inherits Global.System.Data.DataRow
            
            Private tableYardCheck As YardCheckDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableYardCheck = CType(Me.Table,YardCheckDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableYardCheck.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableYardCheck.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheckID() As Decimal
                Get
                    Return CType(Me(Me.tableYardCheck.YardCheckIDColumn),Decimal)
                End Get
                Set
                    Me(Me.tableYardCheck.YardCheckIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DateChecked() As Date
                Get
                    Return CType(Me(Me.tableYardCheck.DateCheckedColumn),Date)
                End Get
                Set
                    Me(Me.tableYardCheck.DateCheckedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CheckedBy() As String
                Get
                    Return CType(Me(Me.tableYardCheck.CheckedByColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheck.CheckedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Reviewed() As Boolean
                Get
                    Return CType(Me(Me.tableYardCheck.ReviewedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableYardCheck.ReviewedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReviewedBy() As String
                Get
                    Return CType(Me(Me.tableYardCheck.ReviewedByColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheck.ReviewedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function GetYardCheckDetailsRows() As YardCheckDetailsRow()
                If (Me.Table.ChildRelations("YardCheck_YardCheckDetails") Is Nothing) Then
                    Return New YardCheckDetailsRow(-1) {}
                Else
                    Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("YardCheck_YardCheckDetails")),YardCheckDetailsRow())
                End If
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class YardCheckDetailsRow
            Inherits Global.System.Data.DataRow
            
            Private tableYardCheckDetails As YardCheckDetailsDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableYardCheckDetails = CType(Me.Table,YardCheckDetailsDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableYardCheckDetails.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Return CType(Me(Me.tableYardCheckDetails.BarcodeColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Return CType(Me(Me.tableYardCheckDetails.SCACColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Return CType(Me(Me.tableYardCheckDetails.TrailerIDColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Return CType(Me(Me.tableYardCheckDetails.CurrentLocationColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Return CType(Me(Me.tableYardCheckDetails.LoadStatusColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Return CType(Me(Me.tableYardCheckDetails.TemperatureColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheckStatus() As String
                Get
                    Return CType(Me(Me.tableYardCheckDetails.YardCheckStatusColumn),String)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.YardCheckStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerSystemID() As Integer
                Get
                    Return CType(Me(Me.tableYardCheckDetails.TrailerSystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.TrailerSystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheckID() As Decimal
                Get
                    Return CType(Me(Me.tableYardCheckDetails.YardCheckIDColumn),Decimal)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.YardCheckIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Checked() As Boolean
                Get
                    Return CType(Me(Me.tableYardCheckDetails.CheckedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableYardCheckDetails.CheckedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheckRow() As YardCheckRow
                Get
                    Return CType(Me.GetParentRow(Me.Table.ParentRelations("YardCheck_YardCheckDetails")),YardCheckRow)
                End Get
                Set
                    Me.SetParentRow(value, Me.Table.ParentRelations("YardCheck_YardCheckDetails"))
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function GetTrailersRows() As TrailersRow()
                If (Me.Table.ChildRelations("YardCheckDetails_Trailers") Is Nothing) Then
                    Return New TrailersRow(-1) {}
                Else
                    Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("YardCheckDetails_Trailers")),TrailersRow())
                End If
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableTrailers As TrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTrailers = CType(Me.Table,TrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheckDetailsRow() As YardCheckDetailsRow
                Get
                    Return CType(Me.GetParentRow(Me.Table.ParentRelations("YardCheckDetails_Trailers")),YardCheckDetailsRow)
                End Get
                Set
                    Me.SetParentRow(value, Me.Table.ParentRelations("YardCheckDetails_Trailers"))
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableTrailers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableTrailers.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableTrailers.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableTrailers.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableTrailers.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableTrailers.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableTrailers.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableTrailers.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableTrailers.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableTrailers.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableTrailers.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class YardCheckRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As YardCheckRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As YardCheckRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As YardCheckRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class YardCheckDetailsRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As YardCheckDetailsRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As YardCheckDetailsRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As YardCheckDetailsRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("ActiveTrailerDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")>  _
    Partial Public Class ActiveTrailerDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableTrailers As TrailersDataTable
        
        Private tableActiveTrailers As ActiveTrailersDataTable
        
        Private tableDoorTrailers As DoorTrailersDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                If (Not (ds.Tables("ActiveTrailers")) Is Nothing) Then
                    MyBase.Tables.Add(New ActiveTrailersDataTable(ds.Tables("ActiveTrailers")))
                End If
                If (Not (ds.Tables("DoorTrailers")) Is Nothing) Then
                    MyBase.Tables.Add(New DoorTrailersDataTable(ds.Tables("DoorTrailers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Trailers() As TrailersDataTable
            Get
                Return Me.tableTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property ActiveTrailers() As ActiveTrailersDataTable
            Get
                Return Me.tableActiveTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property DoorTrailers() As DoorTrailersDataTable
            Get
                Return Me.tableDoorTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As ActiveTrailerDataSet = CType(MyBase.Clone,ActiveTrailerDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                If (Not (ds.Tables("ActiveTrailers")) Is Nothing) Then
                    MyBase.Tables.Add(New ActiveTrailersDataTable(ds.Tables("ActiveTrailers")))
                End If
                If (Not (ds.Tables("DoorTrailers")) Is Nothing) Then
                    MyBase.Tables.Add(New DoorTrailersDataTable(ds.Tables("DoorTrailers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableTrailers = CType(MyBase.Tables("Trailers"),TrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTrailers) Is Nothing) Then
                    Me.tableTrailers.InitVars
                End If
            End If
            Me.tableActiveTrailers = CType(MyBase.Tables("ActiveTrailers"),ActiveTrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableActiveTrailers) Is Nothing) Then
                    Me.tableActiveTrailers.InitVars
                End If
            End If
            Me.tableDoorTrailers = CType(MyBase.Tables("DoorTrailers"),DoorTrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableDoorTrailers) Is Nothing) Then
                    Me.tableDoorTrailers.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "ActiveTrailerDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/ActiveTrailerDataSet.xsd"
            Me.EnforceConstraints = false
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableTrailers = New TrailersDataTable()
            MyBase.Tables.Add(Me.tableTrailers)
            Me.tableActiveTrailers = New ActiveTrailersDataTable()
            MyBase.Tables.Add(Me.tableActiveTrailers)
            Me.tableDoorTrailers = New DoorTrailersDataTable()
            MyBase.Tables.Add(Me.tableDoorTrailers)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeActiveTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeDoorTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As ActiveTrailerDataSet = New ActiveTrailerDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As TrailersRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub ActiveTrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As ActiveTrailersRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub DoorTrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As DoorTrailersRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            Private columnTrailerType As Global.System.Data.DataColumn
            
            Private columnSpecialInstructions As Global.System.Data.DataColumn
            
            Private columnPalletsOnBoard As Global.System.Data.DataColumn
            
            Private columnPalletsRequested As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Trailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SpecialInstructionsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpecialInstructions
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsOnBoardColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsOnBoard
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TrailersRow
                Get
                    Return CType(Me.Rows(index),TrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanging As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanged As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleting As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleted As TrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTrailersRow( _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal Carrier As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal Temperature As String,  _
                        ByVal PalletType As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal YardCheck As Boolean,  _
                        ByVal TrailerType As String,  _
                        ByVal SpecialInstructions As String,  _
                        ByVal PalletsOnBoard As String,  _
                        ByVal PalletsRequested As String) As TrailersRow
                Dim rowTrailersRow As TrailersRow = CType(Me.NewRow,TrailersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, Carrier, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, MoveStatus, Temperature, PalletType, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, YardCheck, TrailerType, SpecialInstructions, PalletsOnBoard, PalletsRequested}
                rowTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTrailersRow)
                Return rowTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As TrailersRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TrailersDataTable = CType(MyBase.Clone,TrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
                Me.columnTrailerType = MyBase.Columns("TrailerType")
                Me.columnSpecialInstructions = MyBase.Columns("SpecialInstructions")
                Me.columnPalletsOnBoard = MyBase.Columns("PalletsOnBoard")
                Me.columnPalletsRequested = MyBase.Columns("PalletsRequested")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.columnTrailerType = New Global.System.Data.DataColumn("TrailerType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerType)
                Me.columnSpecialInstructions = New Global.System.Data.DataColumn("SpecialInstructions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpecialInstructions)
                Me.columnPalletsOnBoard = New Global.System.Data.DataColumn("PalletsOnBoard", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsOnBoard)
                Me.columnPalletsRequested = New Global.System.Data.DataColumn("PalletsRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsRequested)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 1
                Me.columnTemperature.MaxLength = 5
                Me.columnPalletType.MaxLength = 1
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnTrailerOut.DefaultValue = CType(false,Boolean)
                Me.columnWhosMove.MaxLength = 15
                Me.columnYardCheck.AllowDBNull = false
                Me.columnYardCheck.DefaultValue = CType(false,Boolean)
                Me.columnTrailerType.AllowDBNull = false
                Me.columnTrailerType.DefaultValue = CType("R",String)
                Me.columnTrailerType.MaxLength = 2
                Me.columnSpecialInstructions.AllowDBNull = false
                Me.columnSpecialInstructions.DefaultValue = CType("NONE",String)
                Me.columnSpecialInstructions.MaxLength = 300
                Me.columnPalletsOnBoard.AllowDBNull = false
                Me.columnPalletsOnBoard.DefaultValue = CType("UNKNOWN",String)
                Me.columnPalletsOnBoard.MaxLength = 25
                Me.columnPalletsRequested.AllowDBNull = false
                Me.columnPalletsRequested.DefaultValue = CType("NONE",String)
                Me.columnPalletsRequested.MaxLength = 25
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTrailersRow() As TrailersRow
                Return CType(Me.NewRow,TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanged(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanging(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleted(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleting(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As ActiveTrailerDataSet = New ActiveTrailerDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class ActiveTrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            Private columnTrailerType As Global.System.Data.DataColumn
            
            Private columnSpecialInstructions As Global.System.Data.DataColumn
            
            Private columnPalletsOnBoard As Global.System.Data.DataColumn
            
            Private columnPalletsRequested As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnOutOfService As Global.System.Data.DataColumn
            
            Private columnNotes As Global.System.Data.DataColumn
            
            Private columnMoveID As Global.System.Data.DataColumn
            
            Private columnBuyers As Global.System.Data.DataColumn
            
            Private columnSeal1 As Global.System.Data.DataColumn
            
            Private columnSeal2 As Global.System.Data.DataColumn
            
            Private columnSeal3 As Global.System.Data.DataColumn
            
            Private columnLoadNumber As Global.System.Data.DataColumn
            
            Private columnSealException As Global.System.Data.DataColumn
            
            Private columnReferUnitMode As Global.System.Data.DataColumn
            
            Private columnHasException As Global.System.Data.DataColumn
            
            Private columnExceptionCode As Global.System.Data.DataColumn
            
            Private columnExceptionCodeDescription As Global.System.Data.DataColumn
            
            Private columnFuelRoundCheck As Global.System.Data.DataColumn
            
            Private columnPallets As Global.System.Data.DataColumn
            
            Private columnSetPointCelsius As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "ActiveTrailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SpecialInstructionsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpecialInstructions
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsOnBoardColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsOnBoard
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property OutOfServiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOutOfService
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNotes
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BuyersColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBuyers
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal1Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal1
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal2Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal2
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal3Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal3
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SealExceptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSealException
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReferUnitModeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReferUnitMode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property HasExceptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnHasException
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeDescriptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCodeDescription
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property FuelRoundCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFuelRoundCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPallets
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SetPointCelsiusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSetPointCelsius
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As ActiveTrailersRow
                Get
                    Return CType(Me.Rows(index),ActiveTrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowChanging As ActiveTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowChanged As ActiveTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowDeleting As ActiveTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event ActiveTrailersRowDeleted As ActiveTrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddActiveTrailersRow(ByVal row As ActiveTrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddActiveTrailersRow( _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal Temperature As String,  _
                        ByVal PalletType As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal YardCheck As Boolean,  _
                        ByVal TrailerType As String,  _
                        ByVal SpecialInstructions As String,  _
                        ByVal PalletsOnBoard As String,  _
                        ByVal PalletsRequested As String,  _
                        ByVal Carrier As String,  _
                        ByVal OutOfService As Boolean,  _
                        ByVal Notes As String,  _
                        ByVal MoveID As Integer,  _
                        ByVal Buyers As Boolean,  _
                        ByVal Seal1 As String,  _
                        ByVal Seal2 As String,  _
                        ByVal Seal3 As String,  _
                        ByVal LoadNumber As String,  _
                        ByVal SealException As Boolean,  _
                        ByVal ReferUnitMode As String,  _
                        ByVal HasException As Boolean,  _
                        ByVal ExceptionCode As String,  _
                        ByVal ExceptionCodeDescription As String,  _
                        ByVal FuelRoundCheck As Boolean,  _
                        ByVal Pallets As String,  _
                        ByVal SetPointCelsius As Double) As ActiveTrailersRow
                Dim rowActiveTrailersRow As ActiveTrailersRow = CType(Me.NewRow,ActiveTrailersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, MoveStatus, Temperature, PalletType, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, YardCheck, TrailerType, SpecialInstructions, PalletsOnBoard, PalletsRequested, Carrier, OutOfService, Notes, MoveID, Buyers, Seal1, Seal2, Seal3, LoadNumber, SealException, ReferUnitMode, HasException, ExceptionCode, ExceptionCodeDescription, FuelRoundCheck, Pallets, SetPointCelsius}
                rowActiveTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowActiveTrailersRow)
                Return rowActiveTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As ActiveTrailersRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),ActiveTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As ActiveTrailersDataTable = CType(MyBase.Clone,ActiveTrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New ActiveTrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
                Me.columnTrailerType = MyBase.Columns("TrailerType")
                Me.columnSpecialInstructions = MyBase.Columns("SpecialInstructions")
                Me.columnPalletsOnBoard = MyBase.Columns("PalletsOnBoard")
                Me.columnPalletsRequested = MyBase.Columns("PalletsRequested")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnOutOfService = MyBase.Columns("OutOfService")
                Me.columnNotes = MyBase.Columns("Notes")
                Me.columnMoveID = MyBase.Columns("MoveID")
                Me.columnBuyers = MyBase.Columns("Buyers")
                Me.columnSeal1 = MyBase.Columns("Seal1")
                Me.columnSeal2 = MyBase.Columns("Seal2")
                Me.columnSeal3 = MyBase.Columns("Seal3")
                Me.columnLoadNumber = MyBase.Columns("LoadNumber")
                Me.columnSealException = MyBase.Columns("SealException")
                Me.columnReferUnitMode = MyBase.Columns("ReferUnitMode")
                Me.columnHasException = MyBase.Columns("HasException")
                Me.columnExceptionCode = MyBase.Columns("ExceptionCode")
                Me.columnExceptionCodeDescription = MyBase.Columns("ExceptionCodeDescription")
                Me.columnFuelRoundCheck = MyBase.Columns("FuelRoundCheck")
                Me.columnPallets = MyBase.Columns("Pallets")
                Me.columnSetPointCelsius = MyBase.Columns("SetPointCelsius")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.columnTrailerType = New Global.System.Data.DataColumn("TrailerType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerType)
                Me.columnSpecialInstructions = New Global.System.Data.DataColumn("SpecialInstructions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpecialInstructions)
                Me.columnPalletsOnBoard = New Global.System.Data.DataColumn("PalletsOnBoard", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsOnBoard)
                Me.columnPalletsRequested = New Global.System.Data.DataColumn("PalletsRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsRequested)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnOutOfService = New Global.System.Data.DataColumn("OutOfService", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOutOfService)
                Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNotes)
                Me.columnMoveID = New Global.System.Data.DataColumn("MoveID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveID)
                Me.columnBuyers = New Global.System.Data.DataColumn("Buyers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBuyers)
                Me.columnSeal1 = New Global.System.Data.DataColumn("Seal1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal1)
                Me.columnSeal2 = New Global.System.Data.DataColumn("Seal2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal2)
                Me.columnSeal3 = New Global.System.Data.DataColumn("Seal3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal3)
                Me.columnLoadNumber = New Global.System.Data.DataColumn("LoadNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadNumber)
                Me.columnSealException = New Global.System.Data.DataColumn("SealException", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSealException)
                Me.columnReferUnitMode = New Global.System.Data.DataColumn("ReferUnitMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReferUnitMode)
                Me.columnHasException = New Global.System.Data.DataColumn("HasException", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnHasException)
                Me.columnExceptionCode = New Global.System.Data.DataColumn("ExceptionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCode)
                Me.columnExceptionCodeDescription = New Global.System.Data.DataColumn("ExceptionCodeDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCodeDescription)
                Me.columnFuelRoundCheck = New Global.System.Data.DataColumn("FuelRoundCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFuelRoundCheck)
                Me.columnPallets = New Global.System.Data.DataColumn("Pallets", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPallets)
                Me.columnSetPointCelsius = New Global.System.Data.DataColumn("SetPointCelsius", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSetPointCelsius)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 25
                Me.columnTemperature.MaxLength = 5
                Me.columnPalletType.MaxLength = 1
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 15
                Me.columnYardCheck.AllowDBNull = false
                Me.columnTrailerType.AllowDBNull = false
                Me.columnTrailerType.MaxLength = 2
                Me.columnSpecialInstructions.AllowDBNull = false
                Me.columnSpecialInstructions.MaxLength = 300
                Me.columnPalletsOnBoard.AllowDBNull = false
                Me.columnPalletsOnBoard.MaxLength = 25
                Me.columnPalletsRequested.AllowDBNull = false
                Me.columnPalletsRequested.MaxLength = 25
                Me.columnCarrier.AllowDBNull = false
                Me.columnCarrier.MaxLength = 100
                Me.columnOutOfService.AllowDBNull = false
                Me.columnOutOfService.DefaultValue = CType(false,Boolean)
                Me.columnNotes.DefaultValue = CType("""""",String)
                Me.columnNotes.MaxLength = 2147483647
                Me.columnMoveID.AllowDBNull = false
                Me.columnBuyers.AllowDBNull = false
                Me.columnSeal1.AllowDBNull = false
                Me.columnSeal1.MaxLength = 50
                Me.columnSeal2.AllowDBNull = false
                Me.columnSeal2.MaxLength = 50
                Me.columnSeal3.AllowDBNull = false
                Me.columnSeal3.MaxLength = 50
                Me.columnLoadNumber.AllowDBNull = false
                Me.columnLoadNumber.MaxLength = 50
                Me.columnSealException.AllowDBNull = false
                Me.columnReferUnitMode.AllowDBNull = false
                Me.columnReferUnitMode.MaxLength = 50
                Me.columnHasException.AllowDBNull = false
                Me.columnExceptionCode.MaxLength = 150
                Me.columnExceptionCodeDescription.MaxLength = 500
                Me.columnFuelRoundCheck.AllowDBNull = false
                Me.columnPallets.MaxLength = 2147483647
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewActiveTrailersRow() As ActiveTrailersRow
                Return CType(Me.NewRow,ActiveTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New ActiveTrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(ActiveTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.ActiveTrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowChanged(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.ActiveTrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowChanging(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.ActiveTrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowDeleted(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.ActiveTrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent ActiveTrailersRowDeleting(Me, New ActiveTrailersRowChangeEvent(CType(e.Row,ActiveTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveActiveTrailersRow(ByVal row As ActiveTrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As ActiveTrailerDataSet = New ActiveTrailerDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "ActiveTrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class DoorTrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            Private columnSpecialInstructions As Global.System.Data.DataColumn
            
            Private columnTrailerType As Global.System.Data.DataColumn
            
            Private columnPalletsOnBoard As Global.System.Data.DataColumn
            
            Private columnPalletsRequested As Global.System.Data.DataColumn
            
            Private columnMoveID As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnSeal1 As Global.System.Data.DataColumn
            
            Private columnSeal2 As Global.System.Data.DataColumn
            
            Private columnSeal3 As Global.System.Data.DataColumn
            
            Private columnLoadNumber As Global.System.Data.DataColumn
            
            Private columnSealException As Global.System.Data.DataColumn
            
            Private columnReferUnitMode As Global.System.Data.DataColumn
            
            Private columnOutOfService As Global.System.Data.DataColumn
            
            Private columnNotes As Global.System.Data.DataColumn
            
            Private columnHasException As Global.System.Data.DataColumn
            
            Private columnExceptionCode As Global.System.Data.DataColumn
            
            Private columnExceptionCodeDescription As Global.System.Data.DataColumn
            
            Private columnSetPointCelsius As Global.System.Data.DataColumn
            
            Private columnPallets As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "DoorTrailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SpecialInstructionsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpecialInstructions
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsOnBoardColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsOnBoard
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal1Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal1
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal2Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal2
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal3Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal3
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SealExceptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSealException
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReferUnitModeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReferUnitMode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property OutOfServiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOutOfService
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNotes
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property HasExceptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnHasException
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeDescriptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCodeDescription
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SetPointCelsiusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSetPointCelsius
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPallets
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As DoorTrailersRow
                Get
                    Return CType(Me.Rows(index),DoorTrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event DoorTrailersRowChanging As DoorTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event DoorTrailersRowChanged As DoorTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event DoorTrailersRowDeleting As DoorTrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event DoorTrailersRowDeleted As DoorTrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddDoorTrailersRow(ByVal row As DoorTrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddDoorTrailersRow( _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal PalletType As String,  _
                        ByVal Temperature As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal YardCheck As Boolean,  _
                        ByVal SpecialInstructions As String,  _
                        ByVal TrailerType As String,  _
                        ByVal PalletsOnBoard As String,  _
                        ByVal PalletsRequested As String,  _
                        ByVal MoveID As Integer,  _
                        ByVal Carrier As String,  _
                        ByVal Seal1 As String,  _
                        ByVal Seal2 As String,  _
                        ByVal Seal3 As String,  _
                        ByVal LoadNumber As String,  _
                        ByVal SealException As Boolean,  _
                        ByVal ReferUnitMode As String,  _
                        ByVal OutOfService As Boolean,  _
                        ByVal Notes As String,  _
                        ByVal HasException As Boolean,  _
                        ByVal ExceptionCode As String,  _
                        ByVal ExceptionCodeDescription As String,  _
                        ByVal SetPointCelsius As Double,  _
                        ByVal Pallets As String) As DoorTrailersRow
                Dim rowDoorTrailersRow As DoorTrailersRow = CType(Me.NewRow,DoorTrailersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, PalletType, Temperature, MoveStatus, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, YardCheck, SpecialInstructions, TrailerType, PalletsOnBoard, PalletsRequested, MoveID, Carrier, Seal1, Seal2, Seal3, LoadNumber, SealException, ReferUnitMode, OutOfService, Notes, HasException, ExceptionCode, ExceptionCodeDescription, SetPointCelsius, Pallets}
                rowDoorTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowDoorTrailersRow)
                Return rowDoorTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As DoorTrailersRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),DoorTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As DoorTrailersDataTable = CType(MyBase.Clone,DoorTrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New DoorTrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
                Me.columnSpecialInstructions = MyBase.Columns("SpecialInstructions")
                Me.columnTrailerType = MyBase.Columns("TrailerType")
                Me.columnPalletsOnBoard = MyBase.Columns("PalletsOnBoard")
                Me.columnPalletsRequested = MyBase.Columns("PalletsRequested")
                Me.columnMoveID = MyBase.Columns("MoveID")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnSeal1 = MyBase.Columns("Seal1")
                Me.columnSeal2 = MyBase.Columns("Seal2")
                Me.columnSeal3 = MyBase.Columns("Seal3")
                Me.columnLoadNumber = MyBase.Columns("LoadNumber")
                Me.columnSealException = MyBase.Columns("SealException")
                Me.columnReferUnitMode = MyBase.Columns("ReferUnitMode")
                Me.columnOutOfService = MyBase.Columns("OutOfService")
                Me.columnNotes = MyBase.Columns("Notes")
                Me.columnHasException = MyBase.Columns("HasException")
                Me.columnExceptionCode = MyBase.Columns("ExceptionCode")
                Me.columnExceptionCodeDescription = MyBase.Columns("ExceptionCodeDescription")
                Me.columnSetPointCelsius = MyBase.Columns("SetPointCelsius")
                Me.columnPallets = MyBase.Columns("Pallets")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.columnSpecialInstructions = New Global.System.Data.DataColumn("SpecialInstructions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpecialInstructions)
                Me.columnTrailerType = New Global.System.Data.DataColumn("TrailerType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerType)
                Me.columnPalletsOnBoard = New Global.System.Data.DataColumn("PalletsOnBoard", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsOnBoard)
                Me.columnPalletsRequested = New Global.System.Data.DataColumn("PalletsRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsRequested)
                Me.columnMoveID = New Global.System.Data.DataColumn("MoveID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveID)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnSeal1 = New Global.System.Data.DataColumn("Seal1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal1)
                Me.columnSeal2 = New Global.System.Data.DataColumn("Seal2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal2)
                Me.columnSeal3 = New Global.System.Data.DataColumn("Seal3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal3)
                Me.columnLoadNumber = New Global.System.Data.DataColumn("LoadNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadNumber)
                Me.columnSealException = New Global.System.Data.DataColumn("SealException", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSealException)
                Me.columnReferUnitMode = New Global.System.Data.DataColumn("ReferUnitMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReferUnitMode)
                Me.columnOutOfService = New Global.System.Data.DataColumn("OutOfService", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOutOfService)
                Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNotes)
                Me.columnHasException = New Global.System.Data.DataColumn("HasException", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnHasException)
                Me.columnExceptionCode = New Global.System.Data.DataColumn("ExceptionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCode)
                Me.columnExceptionCodeDescription = New Global.System.Data.DataColumn("ExceptionCodeDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCodeDescription)
                Me.columnSetPointCelsius = New Global.System.Data.DataColumn("SetPointCelsius", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSetPointCelsius)
                Me.columnPallets = New Global.System.Data.DataColumn("Pallets", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPallets)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnPalletType.MaxLength = 1
                Me.columnTemperature.MaxLength = 5
                Me.columnMoveStatus.MaxLength = 25
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 15
                Me.columnYardCheck.AllowDBNull = false
                Me.columnSpecialInstructions.AllowDBNull = false
                Me.columnSpecialInstructions.MaxLength = 300
                Me.columnTrailerType.AllowDBNull = false
                Me.columnTrailerType.MaxLength = 2
                Me.columnPalletsOnBoard.AllowDBNull = false
                Me.columnPalletsOnBoard.MaxLength = 25
                Me.columnPalletsRequested.AllowDBNull = false
                Me.columnPalletsRequested.MaxLength = 25
                Me.columnMoveID.AllowDBNull = false
                Me.columnCarrier.AllowDBNull = false
                Me.columnCarrier.MaxLength = 100
                Me.columnSeal1.AllowDBNull = false
                Me.columnSeal1.MaxLength = 50
                Me.columnSeal2.AllowDBNull = false
                Me.columnSeal2.MaxLength = 50
                Me.columnSeal3.AllowDBNull = false
                Me.columnSeal3.MaxLength = 50
                Me.columnLoadNumber.AllowDBNull = false
                Me.columnLoadNumber.MaxLength = 50
                Me.columnSealException.AllowDBNull = false
                Me.columnSealException.DefaultValue = CType(false,Boolean)
                Me.columnReferUnitMode.AllowDBNull = false
                Me.columnReferUnitMode.MaxLength = 50
                Me.columnOutOfService.AllowDBNull = false
                Me.columnOutOfService.DefaultValue = CType(false,Boolean)
                Me.columnNotes.MaxLength = 2147483647
                Me.columnHasException.AllowDBNull = false
                Me.columnHasException.DefaultValue = CType(false,Boolean)
                Me.columnExceptionCode.MaxLength = 150
                Me.columnExceptionCodeDescription.MaxLength = 500
                Me.columnPallets.MaxLength = 2147483647
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewDoorTrailersRow() As DoorTrailersRow
                Return CType(Me.NewRow,DoorTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New DoorTrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(DoorTrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.DoorTrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent DoorTrailersRowChanged(Me, New DoorTrailersRowChangeEvent(CType(e.Row,DoorTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.DoorTrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent DoorTrailersRowChanging(Me, New DoorTrailersRowChangeEvent(CType(e.Row,DoorTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.DoorTrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent DoorTrailersRowDeleted(Me, New DoorTrailersRowChangeEvent(CType(e.Row,DoorTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.DoorTrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent DoorTrailersRowDeleting(Me, New DoorTrailersRowChangeEvent(CType(e.Row,DoorTrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveDoorTrailersRow(ByVal row As DoorTrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As ActiveTrailerDataSet = New ActiveTrailerDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "DoorTrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableTrailers As TrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTrailers = CType(Me.Table,TrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerType() As String
                Get
                    Return CType(Me(Me.tableTrailers.TrailerTypeColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SpecialInstructions() As String
                Get
                    Return CType(Me(Me.tableTrailers.SpecialInstructionsColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.SpecialInstructionsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsOnBoard() As String
                Get
                    Return CType(Me(Me.tableTrailers.PalletsOnBoardColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.PalletsOnBoardColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsRequested() As String
                Get
                    Return CType(Me(Me.tableTrailers.PalletsRequestedColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.PalletsRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableTrailers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableTrailers.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableTrailers.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableTrailers.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableTrailers.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableTrailers.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableTrailers.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableTrailers.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableTrailers.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableTrailers.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableTrailers.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class ActiveTrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableActiveTrailers As ActiveTrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableActiveTrailers = CType(Me.Table,ActiveTrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableActiveTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableActiveTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerType() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.TrailerTypeColumn),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.TrailerTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SpecialInstructions() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.SpecialInstructionsColumn),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.SpecialInstructionsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsOnBoard() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.PalletsOnBoardColumn),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.PalletsOnBoardColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsRequested() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.PalletsRequestedColumn),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.PalletsRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.CarrierColumn),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property OutOfService() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.OutOfServiceColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.OutOfServiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Notes() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.NotesColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.NotesColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveID() As Integer
                Get
                    Return CType(Me(Me.tableActiveTrailers.MoveIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableActiveTrailers.MoveIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Buyers() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.BuyersColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.BuyersColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal1() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.Seal1Column),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.Seal1Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal2() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.Seal2Column),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.Seal2Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal3() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.Seal3Column),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.Seal3Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadNumber() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.LoadNumberColumn),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.LoadNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SealException() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.SealExceptionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.SealExceptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReferUnitMode() As String
                Get
                    Return CType(Me(Me.tableActiveTrailers.ReferUnitModeColumn),String)
                End Get
                Set
                    Me(Me.tableActiveTrailers.ReferUnitModeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property HasException() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.HasExceptionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.HasExceptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.ExceptionCodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCode' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.ExceptionCodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCodeDescription() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.ExceptionCodeDescriptionColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCodeDescription' in table 'ActiveTrailers' is DBNu"& _ 
                                "ll.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.ExceptionCodeDescriptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property FuelRoundCheck() As Boolean
                Get
                    Return CType(Me(Me.tableActiveTrailers.FuelRoundCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableActiveTrailers.FuelRoundCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Pallets() As String
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.PalletsColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Pallets' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.PalletsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SetPointCelsius() As Double
                Get
                    Try 
                        Return CType(Me(Me.tableActiveTrailers.SetPointCelsiusColumn),Double)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SetPointCelsius' in table 'ActiveTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableActiveTrailers.SetPointCelsiusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableActiveTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableActiveTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableActiveTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableActiveTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableActiveTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableActiveTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableActiveTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableActiveTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableActiveTrailers.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableActiveTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableActiveTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableActiveTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableActiveTrailers.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableActiveTrailers.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableActiveTrailers.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableActiveTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableActiveTrailers.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableActiveTrailers.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableActiveTrailers.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableActiveTrailers.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableActiveTrailers.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableActiveTrailers.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableActiveTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNotesNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.NotesColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNotesNull()
                Me(Me.tableActiveTrailers.NotesColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.ExceptionCodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeNull()
                Me(Me.tableActiveTrailers.ExceptionCodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeDescriptionNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.ExceptionCodeDescriptionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeDescriptionNull()
                Me(Me.tableActiveTrailers.ExceptionCodeDescriptionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletsNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.PalletsColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletsNull()
                Me(Me.tableActiveTrailers.PalletsColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSetPointCelsiusNull() As Boolean
                Return Me.IsNull(Me.tableActiveTrailers.SetPointCelsiusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSetPointCelsiusNull()
                Me(Me.tableActiveTrailers.SetPointCelsiusColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class DoorTrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableDoorTrailers As DoorTrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableDoorTrailers = CType(Me.Table,DoorTrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableDoorTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableDoorTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableDoorTrailers.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableDoorTrailers.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableDoorTrailers.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableDoorTrailers.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SpecialInstructions() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.SpecialInstructionsColumn),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.SpecialInstructionsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerType() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.TrailerTypeColumn),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.TrailerTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsOnBoard() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.PalletsOnBoardColumn),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.PalletsOnBoardColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsRequested() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.PalletsRequestedColumn),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.PalletsRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveID() As Integer
                Get
                    Return CType(Me(Me.tableDoorTrailers.MoveIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableDoorTrailers.MoveIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.CarrierColumn),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal1() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.Seal1Column),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.Seal1Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal2() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.Seal2Column),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.Seal2Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal3() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.Seal3Column),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.Seal3Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadNumber() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.LoadNumberColumn),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.LoadNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SealException() As Boolean
                Get
                    Return CType(Me(Me.tableDoorTrailers.SealExceptionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableDoorTrailers.SealExceptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReferUnitMode() As String
                Get
                    Return CType(Me(Me.tableDoorTrailers.ReferUnitModeColumn),String)
                End Get
                Set
                    Me(Me.tableDoorTrailers.ReferUnitModeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property OutOfService() As Boolean
                Get
                    Return CType(Me(Me.tableDoorTrailers.OutOfServiceColumn),Boolean)
                End Get
                Set
                    Me(Me.tableDoorTrailers.OutOfServiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Notes() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.NotesColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.NotesColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property HasException() As Boolean
                Get
                    Return CType(Me(Me.tableDoorTrailers.HasExceptionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableDoorTrailers.HasExceptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.ExceptionCodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCode' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.ExceptionCodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCodeDescription() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.ExceptionCodeDescriptionColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCodeDescription' in table 'DoorTrailers' is DBNull"& _ 
                                ".", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.ExceptionCodeDescriptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SetPointCelsius() As Double
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.SetPointCelsiusColumn),Double)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SetPointCelsius' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.SetPointCelsiusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Pallets() As String
                Get
                    Try 
                        Return CType(Me(Me.tableDoorTrailers.PalletsColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Pallets' in table 'DoorTrailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableDoorTrailers.PalletsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableDoorTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableDoorTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableDoorTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableDoorTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableDoorTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableDoorTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableDoorTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableDoorTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableDoorTrailers.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableDoorTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableDoorTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableDoorTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableDoorTrailers.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableDoorTrailers.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableDoorTrailers.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableDoorTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableDoorTrailers.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableDoorTrailers.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableDoorTrailers.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableDoorTrailers.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableDoorTrailers.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableDoorTrailers.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableDoorTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNotesNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.NotesColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNotesNull()
                Me(Me.tableDoorTrailers.NotesColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.ExceptionCodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeNull()
                Me(Me.tableDoorTrailers.ExceptionCodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeDescriptionNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.ExceptionCodeDescriptionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeDescriptionNull()
                Me(Me.tableDoorTrailers.ExceptionCodeDescriptionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSetPointCelsiusNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.SetPointCelsiusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSetPointCelsiusNull()
                Me(Me.tableDoorTrailers.SetPointCelsiusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletsNull() As Boolean
                Return Me.IsNull(Me.tableDoorTrailers.PalletsColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletsNull()
                Me(Me.tableDoorTrailers.PalletsColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class ActiveTrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As ActiveTrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As ActiveTrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As ActiveTrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class DoorTrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As DoorTrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As DoorTrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As DoorTrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("TasksDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")>  _
    Partial Public Class TasksDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableTasks As TasksDataTable
        
        Private tableTaskDetail As TaskDetailDataTable
        
        Private relationTasks_TaskDetail As Global.System.Data.DataRelation
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("Tasks")) Is Nothing) Then
                    MyBase.Tables.Add(New TasksDataTable(ds.Tables("Tasks")))
                End If
                If (Not (ds.Tables("TaskDetail")) Is Nothing) Then
                    MyBase.Tables.Add(New TaskDetailDataTable(ds.Tables("TaskDetail")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Tasks() As TasksDataTable
            Get
                Return Me.tableTasks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property TaskDetail() As TaskDetailDataTable
            Get
                Return Me.tableTaskDetail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As TasksDataSet = CType(MyBase.Clone,TasksDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("Tasks")) Is Nothing) Then
                    MyBase.Tables.Add(New TasksDataTable(ds.Tables("Tasks")))
                End If
                If (Not (ds.Tables("TaskDetail")) Is Nothing) Then
                    MyBase.Tables.Add(New TaskDetailDataTable(ds.Tables("TaskDetail")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableTasks = CType(MyBase.Tables("Tasks"),TasksDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTasks) Is Nothing) Then
                    Me.tableTasks.InitVars
                End If
            End If
            Me.tableTaskDetail = CType(MyBase.Tables("TaskDetail"),TaskDetailDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTaskDetail) Is Nothing) Then
                    Me.tableTaskDetail.InitVars
                End If
            End If
            Me.relationTasks_TaskDetail = Me.Relations("Tasks_TaskDetail")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "TasksDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/TasksDataSet.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableTasks = New TasksDataTable()
            MyBase.Tables.Add(Me.tableTasks)
            Me.tableTaskDetail = New TaskDetailDataTable()
            MyBase.Tables.Add(Me.tableTaskDetail)
            Me.relationTasks_TaskDetail = New Global.System.Data.DataRelation("Tasks_TaskDetail", New Global.System.Data.DataColumn() {Me.tableTasks.TaskIDColumn}, New Global.System.Data.DataColumn() {Me.tableTaskDetail.TaskIDColumn}, false)
            Me.Relations.Add(Me.relationTasks_TaskDetail)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTasks() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTaskDetail() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As TasksDataSet = New TasksDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TasksRowChangeEventHandler(ByVal sender As Object, ByVal e As TasksRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TaskDetailRowChangeEventHandler(ByVal sender As Object, ByVal e As TaskDetailRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TasksDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnTaskID As Global.System.Data.DataColumn
            
            Private columnType As Global.System.Data.DataColumn
            
            Private columnTaskDetails As Global.System.Data.DataColumn
            
            Private columnPriorityLevel As Global.System.Data.DataColumn
            
            Private columnAssignedUser As Global.System.Data.DataColumn
            
            Private columnAssigned As Global.System.Data.DataColumn
            
            Private columnTrailerRelated As Global.System.Data.DataColumn
            
            Private columnAddedBy As Global.System.Data.DataColumn
            
            Private columnAddedTime As Global.System.Data.DataColumn
            
            Private columnCompletedTime As Global.System.Data.DataColumn
            
            Private columnCompleted As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnScheduledDateTime As Global.System.Data.DataColumn
            
            Private columnTrailerSystemID As Global.System.Data.DataColumn
            
            Private columnTaskCancelled As Global.System.Data.DataColumn
            
            Private columnCancelledBy As Global.System.Data.DataColumn
            
            Private columnWhenCancelled As Global.System.Data.DataColumn
            
            Private columnNotifyEmail As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Tasks"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TaskIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTaskID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TaskDetailsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTaskDetails
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PriorityLevelColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPriorityLevel
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AssignedUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAssignedUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AssignedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAssigned
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerRelatedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerRelated
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CompletedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCompletedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CompletedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCompleted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ScheduledDateTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnScheduledDateTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerSystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TaskCancelledColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTaskCancelled
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CancelledByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCancelledBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhenCancelledColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhenCancelled
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NotifyEmailColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNotifyEmail
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TasksRow
                Get
                    Return CType(Me.Rows(index),TasksRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TasksRowChanging As TasksRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TasksRowChanged As TasksRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TasksRowDeleting As TasksRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TasksRowDeleted As TasksRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTasksRow(ByVal row As TasksRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTasksRow( _
                        ByVal Type As String,  _
                        ByVal TaskDetails As String,  _
                        ByVal PriorityLevel As Integer,  _
                        ByVal AssignedUser As String,  _
                        ByVal Assigned As Boolean,  _
                        ByVal TrailerRelated As Boolean,  _
                        ByVal AddedBy As String,  _
                        ByVal AddedTime As Date,  _
                        ByVal CompletedTime As Date,  _
                        ByVal Completed As Boolean,  _
                        ByVal Carrier As String,  _
                        ByVal PalletType As String,  _
                        ByVal ScheduledDateTime As Date,  _
                        ByVal TrailerSystemID As Integer,  _
                        ByVal TaskCancelled As Boolean,  _
                        ByVal CancelledBy As String,  _
                        ByVal WhenCancelled As Date,  _
                        ByVal NotifyEmail As String,  _
                        ByVal TrailerID As String) As TasksRow
                Dim rowTasksRow As TasksRow = CType(Me.NewRow,TasksRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Type, TaskDetails, PriorityLevel, AssignedUser, Assigned, TrailerRelated, AddedBy, AddedTime, CompletedTime, Completed, Carrier, PalletType, ScheduledDateTime, TrailerSystemID, TaskCancelled, CancelledBy, WhenCancelled, NotifyEmail, TrailerID}
                rowTasksRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTasksRow)
                Return rowTasksRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByTaskID(ByVal TaskID As Integer) As TasksRow
                Return CType(Me.Rows.Find(New Object() {TaskID}),TasksRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TasksDataTable = CType(MyBase.Clone,TasksDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TasksDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnTaskID = MyBase.Columns("TaskID")
                Me.columnType = MyBase.Columns("Type")
                Me.columnTaskDetails = MyBase.Columns("TaskDetails")
                Me.columnPriorityLevel = MyBase.Columns("PriorityLevel")
                Me.columnAssignedUser = MyBase.Columns("AssignedUser")
                Me.columnAssigned = MyBase.Columns("Assigned")
                Me.columnTrailerRelated = MyBase.Columns("TrailerRelated")
                Me.columnAddedBy = MyBase.Columns("AddedBy")
                Me.columnAddedTime = MyBase.Columns("AddedTime")
                Me.columnCompletedTime = MyBase.Columns("CompletedTime")
                Me.columnCompleted = MyBase.Columns("Completed")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnScheduledDateTime = MyBase.Columns("ScheduledDateTime")
                Me.columnTrailerSystemID = MyBase.Columns("TrailerSystemID")
                Me.columnTaskCancelled = MyBase.Columns("TaskCancelled")
                Me.columnCancelledBy = MyBase.Columns("CancelledBy")
                Me.columnWhenCancelled = MyBase.Columns("WhenCancelled")
                Me.columnNotifyEmail = MyBase.Columns("NotifyEmail")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnTaskID = New Global.System.Data.DataColumn("TaskID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTaskID)
                Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnType)
                Me.columnTaskDetails = New Global.System.Data.DataColumn("TaskDetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTaskDetails)
                Me.columnPriorityLevel = New Global.System.Data.DataColumn("PriorityLevel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPriorityLevel)
                Me.columnAssignedUser = New Global.System.Data.DataColumn("AssignedUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAssignedUser)
                Me.columnAssigned = New Global.System.Data.DataColumn("Assigned", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAssigned)
                Me.columnTrailerRelated = New Global.System.Data.DataColumn("TrailerRelated", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerRelated)
                Me.columnAddedBy = New Global.System.Data.DataColumn("AddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAddedBy)
                Me.columnAddedTime = New Global.System.Data.DataColumn("AddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAddedTime)
                Me.columnCompletedTime = New Global.System.Data.DataColumn("CompletedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCompletedTime)
                Me.columnCompleted = New Global.System.Data.DataColumn("Completed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCompleted)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnScheduledDateTime = New Global.System.Data.DataColumn("ScheduledDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnScheduledDateTime)
                Me.columnTrailerSystemID = New Global.System.Data.DataColumn("TrailerSystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerSystemID)
                Me.columnTaskCancelled = New Global.System.Data.DataColumn("TaskCancelled", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTaskCancelled)
                Me.columnCancelledBy = New Global.System.Data.DataColumn("CancelledBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCancelledBy)
                Me.columnWhenCancelled = New Global.System.Data.DataColumn("WhenCancelled", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhenCancelled)
                Me.columnNotifyEmail = New Global.System.Data.DataColumn("NotifyEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNotifyEmail)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTaskID}, true))
                Me.columnTaskID.AutoIncrement = true
                Me.columnTaskID.AllowDBNull = false
                Me.columnTaskID.ReadOnly = true
                Me.columnTaskID.Unique = true
                Me.columnType.AllowDBNull = false
                Me.columnType.MaxLength = 50
                Me.columnTaskDetails.AllowDBNull = false
                Me.columnTaskDetails.MaxLength = 300
                Me.columnPriorityLevel.AllowDBNull = false
                Me.columnAssignedUser.AllowDBNull = false
                Me.columnAssignedUser.MaxLength = 15
                Me.columnAssigned.AllowDBNull = false
                Me.columnTrailerRelated.AllowDBNull = false
                Me.columnAddedBy.AllowDBNull = false
                Me.columnAddedBy.MaxLength = 15
                Me.columnAddedTime.AllowDBNull = false
                Me.columnCompletedTime.AllowDBNull = false
                Me.columnCompleted.AllowDBNull = false
                Me.columnCarrier.AllowDBNull = false
                Me.columnCarrier.MaxLength = 100
                Me.columnPalletType.AllowDBNull = false
                Me.columnPalletType.DefaultValue = CType("""""",String)
                Me.columnPalletType.MaxLength = 15
                Me.columnScheduledDateTime.AllowDBNull = false
                Me.columnTrailerSystemID.AllowDBNull = false
                Me.columnTaskCancelled.AllowDBNull = false
                Me.columnCancelledBy.AllowDBNull = false
                Me.columnCancelledBy.MaxLength = 15
                Me.columnWhenCancelled.AllowDBNull = false
                Me.columnNotifyEmail.AllowDBNull = false
                Me.columnNotifyEmail.DefaultValue = CType("""""",String)
                Me.columnNotifyEmail.MaxLength = 100
                Me.columnTrailerID.AllowDBNull = false
                Me.columnTrailerID.MaxLength = 20
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTasksRow() As TasksRow
                Return CType(Me.NewRow,TasksRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TasksRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TasksRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TasksRowChangedEvent) Is Nothing) Then
                    RaiseEvent TasksRowChanged(Me, New TasksRowChangeEvent(CType(e.Row,TasksRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TasksRowChangingEvent) Is Nothing) Then
                    RaiseEvent TasksRowChanging(Me, New TasksRowChangeEvent(CType(e.Row,TasksRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TasksRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TasksRowDeleted(Me, New TasksRowChangeEvent(CType(e.Row,TasksRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TasksRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TasksRowDeleting(Me, New TasksRowChangeEvent(CType(e.Row,TasksRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTasksRow(ByVal row As TasksRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As TasksDataSet = New TasksDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TasksDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TaskDetailDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnTaskDetailID As Global.System.Data.DataColumn
            
            Private columnTaskID As Global.System.Data.DataColumn
            
            Private columnAddedTime As Global.System.Data.DataColumn
            
            Private columnAddedBy As Global.System.Data.DataColumn
            
            Private columnNotes As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "TaskDetail"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TaskDetailIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTaskDetailID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TaskIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTaskID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNotes
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TaskDetailRow
                Get
                    Return CType(Me.Rows(index),TaskDetailRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskDetailRowChanging As TaskDetailRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskDetailRowChanged As TaskDetailRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskDetailRowDeleting As TaskDetailRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskDetailRowDeleted As TaskDetailRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTaskDetailRow(ByVal row As TaskDetailRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTaskDetailRow(ByVal parentTasksRowByTasks_TaskDetail As TasksRow, ByVal AddedTime As Date, ByVal AddedBy As String, ByVal Notes As String) As TaskDetailRow
                Dim rowTaskDetailRow As TaskDetailRow = CType(Me.NewRow,TaskDetailRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, AddedTime, AddedBy, Notes}
                If (Not (parentTasksRowByTasks_TaskDetail) Is Nothing) Then
                    columnValuesArray(1) = parentTasksRowByTasks_TaskDetail(0)
                End If
                rowTaskDetailRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTaskDetailRow)
                Return rowTaskDetailRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByTaskDetailID(ByVal TaskDetailID As Integer) As TaskDetailRow
                Return CType(Me.Rows.Find(New Object() {TaskDetailID}),TaskDetailRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TaskDetailDataTable = CType(MyBase.Clone,TaskDetailDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TaskDetailDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnTaskDetailID = MyBase.Columns("TaskDetailID")
                Me.columnTaskID = MyBase.Columns("TaskID")
                Me.columnAddedTime = MyBase.Columns("AddedTime")
                Me.columnAddedBy = MyBase.Columns("AddedBy")
                Me.columnNotes = MyBase.Columns("Notes")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnTaskDetailID = New Global.System.Data.DataColumn("TaskDetailID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTaskDetailID)
                Me.columnTaskID = New Global.System.Data.DataColumn("TaskID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTaskID)
                Me.columnAddedTime = New Global.System.Data.DataColumn("AddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAddedTime)
                Me.columnAddedBy = New Global.System.Data.DataColumn("AddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAddedBy)
                Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNotes)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTaskDetailID}, true))
                Me.columnTaskDetailID.AutoIncrement = true
                Me.columnTaskDetailID.AllowDBNull = false
                Me.columnTaskDetailID.ReadOnly = true
                Me.columnTaskDetailID.Unique = true
                Me.columnTaskID.AllowDBNull = false
                Me.columnAddedTime.AllowDBNull = false
                Me.columnAddedBy.AllowDBNull = false
                Me.columnAddedBy.MaxLength = 15
                Me.columnNotes.AllowDBNull = false
                Me.columnNotes.MaxLength = 300
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTaskDetailRow() As TaskDetailRow
                Return CType(Me.NewRow,TaskDetailRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TaskDetailRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TaskDetailRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TaskDetailRowChangedEvent) Is Nothing) Then
                    RaiseEvent TaskDetailRowChanged(Me, New TaskDetailRowChangeEvent(CType(e.Row,TaskDetailRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TaskDetailRowChangingEvent) Is Nothing) Then
                    RaiseEvent TaskDetailRowChanging(Me, New TaskDetailRowChangeEvent(CType(e.Row,TaskDetailRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TaskDetailRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TaskDetailRowDeleted(Me, New TaskDetailRowChangeEvent(CType(e.Row,TaskDetailRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TaskDetailRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TaskDetailRowDeleting(Me, New TaskDetailRowChangeEvent(CType(e.Row,TaskDetailRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTaskDetailRow(ByVal row As TaskDetailRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As TasksDataSet = New TasksDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TaskDetailDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TasksRow
            Inherits Global.System.Data.DataRow
            
            Private tableTasks As TasksDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTasks = CType(Me.Table,TasksDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TaskID() As Integer
                Get
                    Return CType(Me(Me.tableTasks.TaskIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTasks.TaskIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Type() As String
                Get
                    Return CType(Me(Me.tableTasks.TypeColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.TypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TaskDetails() As String
                Get
                    Return CType(Me(Me.tableTasks.TaskDetailsColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.TaskDetailsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PriorityLevel() As Integer
                Get
                    Return CType(Me(Me.tableTasks.PriorityLevelColumn),Integer)
                End Get
                Set
                    Me(Me.tableTasks.PriorityLevelColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AssignedUser() As String
                Get
                    Return CType(Me(Me.tableTasks.AssignedUserColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.AssignedUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Assigned() As Boolean
                Get
                    Return CType(Me(Me.tableTasks.AssignedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTasks.AssignedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerRelated() As Boolean
                Get
                    Return CType(Me(Me.tableTasks.TrailerRelatedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTasks.TrailerRelatedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AddedBy() As String
                Get
                    Return CType(Me(Me.tableTasks.AddedByColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.AddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AddedTime() As Date
                Get
                    Return CType(Me(Me.tableTasks.AddedTimeColumn),Date)
                End Get
                Set
                    Me(Me.tableTasks.AddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CompletedTime() As Date
                Get
                    Return CType(Me(Me.tableTasks.CompletedTimeColumn),Date)
                End Get
                Set
                    Me(Me.tableTasks.CompletedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Completed() As Boolean
                Get
                    Return CType(Me(Me.tableTasks.CompletedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTasks.CompletedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Return CType(Me(Me.tableTasks.CarrierColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Return CType(Me(Me.tableTasks.PalletTypeColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ScheduledDateTime() As Date
                Get
                    Return CType(Me(Me.tableTasks.ScheduledDateTimeColumn),Date)
                End Get
                Set
                    Me(Me.tableTasks.ScheduledDateTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerSystemID() As Integer
                Get
                    Return CType(Me(Me.tableTasks.TrailerSystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTasks.TrailerSystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TaskCancelled() As Boolean
                Get
                    Return CType(Me(Me.tableTasks.TaskCancelledColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTasks.TaskCancelledColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CancelledBy() As String
                Get
                    Return CType(Me(Me.tableTasks.CancelledByColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.CancelledByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhenCancelled() As Date
                Get
                    Return CType(Me(Me.tableTasks.WhenCancelledColumn),Date)
                End Get
                Set
                    Me(Me.tableTasks.WhenCancelledColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NotifyEmail() As String
                Get
                    Return CType(Me(Me.tableTasks.NotifyEmailColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.NotifyEmailColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Return CType(Me(Me.tableTasks.TrailerIDColumn),String)
                End Get
                Set
                    Me(Me.tableTasks.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function GetTaskDetailRows() As TaskDetailRow()
                If (Me.Table.ChildRelations("Tasks_TaskDetail") Is Nothing) Then
                    Return New TaskDetailRow(-1) {}
                Else
                    Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Tasks_TaskDetail")),TaskDetailRow())
                End If
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TaskDetailRow
            Inherits Global.System.Data.DataRow
            
            Private tableTaskDetail As TaskDetailDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTaskDetail = CType(Me.Table,TaskDetailDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TaskDetailID() As Integer
                Get
                    Return CType(Me(Me.tableTaskDetail.TaskDetailIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTaskDetail.TaskDetailIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TaskID() As Integer
                Get
                    Return CType(Me(Me.tableTaskDetail.TaskIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTaskDetail.TaskIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AddedTime() As Date
                Get
                    Return CType(Me(Me.tableTaskDetail.AddedTimeColumn),Date)
                End Get
                Set
                    Me(Me.tableTaskDetail.AddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AddedBy() As String
                Get
                    Return CType(Me(Me.tableTaskDetail.AddedByColumn),String)
                End Get
                Set
                    Me(Me.tableTaskDetail.AddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Notes() As String
                Get
                    Return CType(Me(Me.tableTaskDetail.NotesColumn),String)
                End Get
                Set
                    Me(Me.tableTaskDetail.NotesColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TasksRow() As TasksRow
                Get
                    Return CType(Me.GetParentRow(Me.Table.ParentRelations("Tasks_TaskDetail")),TasksRow)
                End Get
                Set
                    Me.SetParentRow(value, Me.Table.ParentRelations("Tasks_TaskDetail"))
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TasksRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TasksRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TasksRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TasksRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TaskDetailRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TaskDetailRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TaskDetailRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TaskDetailRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("TaskTextDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
    Partial Public Class TaskTextDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableTaskText As TaskTextDataTable
        
        Private tableTaskTextArgs As TaskTextArgsDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("TaskText")) Is Nothing) Then
                    MyBase.Tables.Add(New TaskTextDataTable(ds.Tables("TaskText")))
                End If
                If (Not (ds.Tables("TaskTextArgs")) Is Nothing) Then
                    MyBase.Tables.Add(New TaskTextArgsDataTable(ds.Tables("TaskTextArgs")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property TaskText() As TaskTextDataTable
            Get
                Return Me.tableTaskText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property TaskTextArgs() As TaskTextArgsDataTable
            Get
                Return Me.tableTaskTextArgs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As TaskTextDataSet = CType(MyBase.Clone,TaskTextDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("TaskText")) Is Nothing) Then
                    MyBase.Tables.Add(New TaskTextDataTable(ds.Tables("TaskText")))
                End If
                If (Not (ds.Tables("TaskTextArgs")) Is Nothing) Then
                    MyBase.Tables.Add(New TaskTextArgsDataTable(ds.Tables("TaskTextArgs")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableTaskText = CType(MyBase.Tables("TaskText"),TaskTextDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTaskText) Is Nothing) Then
                    Me.tableTaskText.InitVars
                End If
            End If
            Me.tableTaskTextArgs = CType(MyBase.Tables("TaskTextArgs"),TaskTextArgsDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTaskTextArgs) Is Nothing) Then
                    Me.tableTaskTextArgs.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "TaskTextDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/TaskTextDataSet.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableTaskText = New TaskTextDataTable()
            MyBase.Tables.Add(Me.tableTaskText)
            Me.tableTaskTextArgs = New TaskTextArgsDataTable()
            MyBase.Tables.Add(Me.tableTaskTextArgs)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTaskText() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTaskTextArgs() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As TaskTextDataSet = New TaskTextDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TaskTextRowChangeEventHandler(ByVal sender As Object, ByVal e As TaskTextRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TaskTextArgsRowChangeEventHandler(ByVal sender As Object, ByVal e As TaskTextArgsRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TaskTextDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnTitle As Global.System.Data.DataColumn
            
            Private columnFormatString As Global.System.Data.DataColumn
            
            Private columnAlertMessage As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "TaskText"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTitle
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property FormatStringColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFormatString
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AlertMessageColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAlertMessage
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TaskTextRow
                Get
                    Return CType(Me.Rows(index),TaskTextRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextRowChanging As TaskTextRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextRowChanged As TaskTextRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextRowDeleting As TaskTextRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextRowDeleted As TaskTextRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTaskTextRow(ByVal row As TaskTextRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTaskTextRow(ByVal Title As String, ByVal FormatString As String, ByVal AlertMessage As String) As TaskTextRow
                Dim rowTaskTextRow As TaskTextRow = CType(Me.NewRow,TaskTextRow)
                Dim columnValuesArray() As Object = New Object() {Title, FormatString, AlertMessage}
                rowTaskTextRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTaskTextRow)
                Return rowTaskTextRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByTitle(ByVal Title As String) As TaskTextRow
                Return CType(Me.Rows.Find(New Object() {Title}),TaskTextRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TaskTextDataTable = CType(MyBase.Clone,TaskTextDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TaskTextDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnTitle = MyBase.Columns("Title")
                Me.columnFormatString = MyBase.Columns("FormatString")
                Me.columnAlertMessage = MyBase.Columns("AlertMessage")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTitle)
                Me.columnFormatString = New Global.System.Data.DataColumn("FormatString", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFormatString)
                Me.columnAlertMessage = New Global.System.Data.DataColumn("AlertMessage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAlertMessage)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTitle}, true))
                Me.columnTitle.AllowDBNull = false
                Me.columnTitle.Unique = true
                Me.columnTitle.MaxLength = 100
                Me.columnFormatString.AllowDBNull = false
                Me.columnFormatString.MaxLength = 150
                Me.columnAlertMessage.DefaultValue = CType("''",String)
                Me.columnAlertMessage.MaxLength = 150
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTaskTextRow() As TaskTextRow
                Return CType(Me.NewRow,TaskTextRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TaskTextRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TaskTextRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TaskTextRowChangedEvent) Is Nothing) Then
                    RaiseEvent TaskTextRowChanged(Me, New TaskTextRowChangeEvent(CType(e.Row,TaskTextRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TaskTextRowChangingEvent) Is Nothing) Then
                    RaiseEvent TaskTextRowChanging(Me, New TaskTextRowChangeEvent(CType(e.Row,TaskTextRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TaskTextRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TaskTextRowDeleted(Me, New TaskTextRowChangeEvent(CType(e.Row,TaskTextRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TaskTextRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TaskTextRowDeleting(Me, New TaskTextRowChangeEvent(CType(e.Row,TaskTextRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTaskTextRow(ByVal row As TaskTextRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As TaskTextDataSet = New TaskTextDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TaskTextDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TaskTextArgsDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnArgID As Global.System.Data.DataColumn
            
            Private columnArgType As Global.System.Data.DataColumn
            
            Private columnArgValue As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "TaskTextArgs"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ArgIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnArgID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ArgTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnArgType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ArgValueColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnArgValue
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TaskTextArgsRow
                Get
                    Return CType(Me.Rows(index),TaskTextArgsRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextArgsRowChanging As TaskTextArgsRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextArgsRowChanged As TaskTextArgsRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextArgsRowDeleting As TaskTextArgsRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TaskTextArgsRowDeleted As TaskTextArgsRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTaskTextArgsRow(ByVal row As TaskTextArgsRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTaskTextArgsRow(ByVal ArgType As Integer, ByVal ArgValue As String) As TaskTextArgsRow
                Dim rowTaskTextArgsRow As TaskTextArgsRow = CType(Me.NewRow,TaskTextArgsRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, ArgType, ArgValue}
                rowTaskTextArgsRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTaskTextArgsRow)
                Return rowTaskTextArgsRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByArgID(ByVal ArgID As Integer) As TaskTextArgsRow
                Return CType(Me.Rows.Find(New Object() {ArgID}),TaskTextArgsRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TaskTextArgsDataTable = CType(MyBase.Clone,TaskTextArgsDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TaskTextArgsDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnArgID = MyBase.Columns("ArgID")
                Me.columnArgType = MyBase.Columns("ArgType")
                Me.columnArgValue = MyBase.Columns("ArgValue")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnArgID = New Global.System.Data.DataColumn("ArgID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnArgID)
                Me.columnArgType = New Global.System.Data.DataColumn("ArgType", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnArgType)
                Me.columnArgValue = New Global.System.Data.DataColumn("ArgValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnArgValue)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnArgID}, true))
                Me.columnArgID.AutoIncrement = true
                Me.columnArgID.AllowDBNull = false
                Me.columnArgID.ReadOnly = true
                Me.columnArgID.Unique = true
                Me.columnArgType.AllowDBNull = false
                Me.columnArgValue.AllowDBNull = false
                Me.columnArgValue.MaxLength = 50
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTaskTextArgsRow() As TaskTextArgsRow
                Return CType(Me.NewRow,TaskTextArgsRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TaskTextArgsRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TaskTextArgsRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TaskTextArgsRowChangedEvent) Is Nothing) Then
                    RaiseEvent TaskTextArgsRowChanged(Me, New TaskTextArgsRowChangeEvent(CType(e.Row,TaskTextArgsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TaskTextArgsRowChangingEvent) Is Nothing) Then
                    RaiseEvent TaskTextArgsRowChanging(Me, New TaskTextArgsRowChangeEvent(CType(e.Row,TaskTextArgsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TaskTextArgsRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TaskTextArgsRowDeleted(Me, New TaskTextArgsRowChangeEvent(CType(e.Row,TaskTextArgsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TaskTextArgsRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TaskTextArgsRowDeleting(Me, New TaskTextArgsRowChangeEvent(CType(e.Row,TaskTextArgsRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTaskTextArgsRow(ByVal row As TaskTextArgsRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As TaskTextDataSet = New TaskTextDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TaskTextArgsDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TaskTextRow
            Inherits Global.System.Data.DataRow
            
            Private tableTaskText As TaskTextDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTaskText = CType(Me.Table,TaskTextDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Title() As String
                Get
                    Return CType(Me(Me.tableTaskText.TitleColumn),String)
                End Get
                Set
                    Me(Me.tableTaskText.TitleColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property FormatString() As String
                Get
                    Return CType(Me(Me.tableTaskText.FormatStringColumn),String)
                End Get
                Set
                    Me(Me.tableTaskText.FormatStringColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AlertMessage() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTaskText.AlertMessageColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'AlertMessage' in table 'TaskText' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTaskText.AlertMessageColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsAlertMessageNull() As Boolean
                Return Me.IsNull(Me.tableTaskText.AlertMessageColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetAlertMessageNull()
                Me(Me.tableTaskText.AlertMessageColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TaskTextArgsRow
            Inherits Global.System.Data.DataRow
            
            Private tableTaskTextArgs As TaskTextArgsDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTaskTextArgs = CType(Me.Table,TaskTextArgsDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ArgID() As Integer
                Get
                    Return CType(Me(Me.tableTaskTextArgs.ArgIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTaskTextArgs.ArgIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ArgType() As Integer
                Get
                    Return CType(Me(Me.tableTaskTextArgs.ArgTypeColumn),Integer)
                End Get
                Set
                    Me(Me.tableTaskTextArgs.ArgTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ArgValue() As String
                Get
                    Return CType(Me(Me.tableTaskTextArgs.ArgValueColumn),String)
                End Get
                Set
                    Me(Me.tableTaskTextArgs.ArgValueColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TaskTextRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TaskTextRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TaskTextRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TaskTextRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TaskTextArgsRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TaskTextArgsRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TaskTextArgsRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TaskTextArgsRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("UpdateTrailerDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")>  _
    Partial Public Class UpdateTrailerDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableTrailers As TrailersDataTable
        
        Private tableCarriers As CarriersDataTable
        
        Private relationTrailers_Carriers As Global.System.Data.DataRelation
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                If (Not (ds.Tables("Carriers")) Is Nothing) Then
                    MyBase.Tables.Add(New CarriersDataTable(ds.Tables("Carriers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Trailers() As TrailersDataTable
            Get
                Return Me.tableTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Carriers() As CarriersDataTable
            Get
                Return Me.tableCarriers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As UpdateTrailerDataSet = CType(MyBase.Clone,UpdateTrailerDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                If (Not (ds.Tables("Carriers")) Is Nothing) Then
                    MyBase.Tables.Add(New CarriersDataTable(ds.Tables("Carriers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableTrailers = CType(MyBase.Tables("Trailers"),TrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTrailers) Is Nothing) Then
                    Me.tableTrailers.InitVars
                End If
            End If
            Me.tableCarriers = CType(MyBase.Tables("Carriers"),CarriersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableCarriers) Is Nothing) Then
                    Me.tableCarriers.InitVars
                End If
            End If
            Me.relationTrailers_Carriers = Me.Relations("Trailers_Carriers")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "UpdateTrailerDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/UpdateTrailerDataSet.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableTrailers = New TrailersDataTable()
            MyBase.Tables.Add(Me.tableTrailers)
            Me.tableCarriers = New CarriersDataTable()
            MyBase.Tables.Add(Me.tableCarriers)
            Me.relationTrailers_Carriers = New Global.System.Data.DataRelation("Trailers_Carriers", New Global.System.Data.DataColumn() {Me.tableTrailers.SCACColumn}, New Global.System.Data.DataColumn() {Me.tableCarriers.SCACColumn}, false)
            Me.Relations.Add(Me.relationTrailers_Carriers)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeCarriers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As UpdateTrailerDataSet = New UpdateTrailerDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As TrailersRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub CarriersRowChangeEventHandler(ByVal sender As Object, ByVal e As CarriersRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            Private columnTrailerType As Global.System.Data.DataColumn
            
            Private columnSpecialInstructions As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Trailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SpecialInstructionsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpecialInstructions
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TrailersRow
                Get
                    Return CType(Me.Rows(index),TrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanging As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanged As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleting As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleted As TrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTrailersRow( _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal Carrier As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal Temperature As String,  _
                        ByVal PalletType As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal YardCheck As Boolean,  _
                        ByVal TrailerType As String,  _
                        ByVal SpecialInstructions As String) As TrailersRow
                Dim rowTrailersRow As TrailersRow = CType(Me.NewRow,TrailersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, Carrier, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, MoveStatus, Temperature, PalletType, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, YardCheck, TrailerType, SpecialInstructions}
                rowTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTrailersRow)
                Return rowTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As TrailersRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TrailersDataTable = CType(MyBase.Clone,TrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
                Me.columnTrailerType = MyBase.Columns("TrailerType")
                Me.columnSpecialInstructions = MyBase.Columns("SpecialInstructions")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.columnTrailerType = New Global.System.Data.DataColumn("TrailerType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerType)
                Me.columnSpecialInstructions = New Global.System.Data.DataColumn("SpecialInstructions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpecialInstructions)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 1
                Me.columnTemperature.MaxLength = 5
                Me.columnPalletType.MaxLength = 1
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 15
                Me.columnYardCheck.AllowDBNull = false
                Me.columnTrailerType.AllowDBNull = false
                Me.columnTrailerType.MaxLength = 2
                Me.columnSpecialInstructions.AllowDBNull = false
                Me.columnSpecialInstructions.MaxLength = 300
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTrailersRow() As TrailersRow
                Return CType(Me.NewRow,TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanged(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanging(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleted(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleting(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As UpdateTrailerDataSet = New UpdateTrailerDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class CarriersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnID As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnAddedBy As Global.System.Data.DataColumn
            
            Private columnSysCode As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Carriers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property AddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SysCodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSysCode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As CarriersRow
                Get
                    Return CType(Me.Rows(index),CarriersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowChanging As CarriersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowChanged As CarriersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowDeleting As CarriersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event CarriersRowDeleted As CarriersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddCarriersRow(ByVal row As CarriersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddCarriersRow(ByVal parentTrailersRowByTrailers_Carriers As TrailersRow, ByVal Carrier As String, ByVal AddedBy As String, ByVal SysCode As String) As CarriersRow
                Dim rowCarriersRow As CarriersRow = CType(Me.NewRow,CarriersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Carrier, AddedBy, SysCode}
                If (Not (parentTrailersRowByTrailers_Carriers) Is Nothing) Then
                    columnValuesArray(1) = parentTrailersRowByTrailers_Carriers(2)
                End If
                rowCarriersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowCarriersRow)
                Return rowCarriersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByID(ByVal ID As Integer) As CarriersRow
                Return CType(Me.Rows.Find(New Object() {ID}),CarriersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As CarriersDataTable = CType(MyBase.Clone,CarriersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New CarriersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnID = MyBase.Columns("ID")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnAddedBy = MyBase.Columns("AddedBy")
                Me.columnSysCode = MyBase.Columns("SysCode")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnID)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnAddedBy = New Global.System.Data.DataColumn("AddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAddedBy)
                Me.columnSysCode = New Global.System.Data.DataColumn("SysCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSysCode)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
                Me.columnID.AutoIncrement = true
                Me.columnID.AllowDBNull = false
                Me.columnID.ReadOnly = true
                Me.columnID.Unique = true
                Me.columnSCAC.AllowDBNull = false
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 100
                Me.columnAddedBy.MaxLength = 10
                Me.columnSysCode.MaxLength = 5
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewCarriersRow() As CarriersRow
                Return CType(Me.NewRow,CarriersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New CarriersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(CarriersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.CarriersRowChangedEvent) Is Nothing) Then
                    RaiseEvent CarriersRowChanged(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.CarriersRowChangingEvent) Is Nothing) Then
                    RaiseEvent CarriersRowChanging(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.CarriersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent CarriersRowDeleted(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.CarriersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent CarriersRowDeleting(Me, New CarriersRowChangeEvent(CType(e.Row,CarriersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveCarriersRow(ByVal row As CarriersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As UpdateTrailerDataSet = New UpdateTrailerDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "CarriersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableTrailers As TrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTrailers = CType(Me.Table,TrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerType() As String
                Get
                    Return CType(Me(Me.tableTrailers.TrailerTypeColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SpecialInstructions() As String
                Get
                    Return CType(Me(Me.tableTrailers.SpecialInstructionsColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.SpecialInstructionsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableTrailers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableTrailers.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableTrailers.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableTrailers.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableTrailers.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableTrailers.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableTrailers.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableTrailers.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableTrailers.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableTrailers.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableTrailers.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function GetCarriersRows() As CarriersRow()
                If (Me.Table.ChildRelations("Trailers_Carriers") Is Nothing) Then
                    Return New CarriersRow(-1) {}
                Else
                    Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Trailers_Carriers")),CarriersRow())
                End If
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class CarriersRow
            Inherits Global.System.Data.DataRow
            
            Private tableCarriers As CarriersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableCarriers = CType(Me.Table,CarriersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ID() As Integer
                Get
                    Return CType(Me(Me.tableCarriers.IDColumn),Integer)
                End Get
                Set
                    Me(Me.tableCarriers.IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Return CType(Me(Me.tableCarriers.SCACColumn),String)
                End Get
                Set
                    Me(Me.tableCarriers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCarriers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Carriers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCarriers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property AddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCarriers.AddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'AddedBy' in table 'Carriers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCarriers.AddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SysCode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCarriers.SysCodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SysCode' in table 'Carriers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCarriers.SysCodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailersRow() As TrailersRow
                Get
                    Return CType(Me.GetParentRow(Me.Table.ParentRelations("Trailers_Carriers")),TrailersRow)
                End Get
                Set
                    Me.SetParentRow(value, Me.Table.ParentRelations("Trailers_Carriers"))
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableCarriers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableCarriers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsAddedByNull() As Boolean
                Return Me.IsNull(Me.tableCarriers.AddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetAddedByNull()
                Me(Me.tableCarriers.AddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSysCodeNull() As Boolean
                Return Me.IsNull(Me.tableCarriers.SysCodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSysCodeNull()
                Me(Me.tableCarriers.SysCodeColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class CarriersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As CarriersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As CarriersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As CarriersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("MovesDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")>  _
    Partial Public Class MovesDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableTrailerMoves As TrailerMovesDataTable
        
        Private tableTrailers As TrailersDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("TrailerMoves")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailerMovesDataTable(ds.Tables("TrailerMoves")))
                End If
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property TrailerMoves() As TrailerMovesDataTable
            Get
                Return Me.tableTrailerMoves
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Trailers() As TrailersDataTable
            Get
                Return Me.tableTrailers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As MovesDataSet = CType(MyBase.Clone,MovesDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("TrailerMoves")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailerMovesDataTable(ds.Tables("TrailerMoves")))
                End If
                If (Not (ds.Tables("Trailers")) Is Nothing) Then
                    MyBase.Tables.Add(New TrailersDataTable(ds.Tables("Trailers")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableTrailerMoves = CType(MyBase.Tables("TrailerMoves"),TrailerMovesDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTrailerMoves) Is Nothing) Then
                    Me.tableTrailerMoves.InitVars
                End If
            End If
            Me.tableTrailers = CType(MyBase.Tables("Trailers"),TrailersDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTrailers) Is Nothing) Then
                    Me.tableTrailers.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "MovesDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/MovesDataSet.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableTrailerMoves = New TrailerMovesDataTable()
            MyBase.Tables.Add(Me.tableTrailerMoves)
            Me.tableTrailers = New TrailersDataTable()
            MyBase.Tables.Add(Me.tableTrailers)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTrailerMoves() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function ShouldSerializeTrailers() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As MovesDataSet = New MovesDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TrailerMovesRowChangeEventHandler(ByVal sender As Object, ByVal e As TrailerMovesRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Delegate Sub TrailersRowChangeEventHandler(ByVal sender As Object, ByVal e As TrailersRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TrailerMovesDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnMoveID As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnStartLocation As Global.System.Data.DataColumn
            
            Private columnDestinationLocation As Global.System.Data.DataColumn
            
            Private columnStopOffLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletsOnBoard As Global.System.Data.DataColumn
            
            Private columnPalletsRequested As Global.System.Data.DataColumn
            
            Private columnPreCooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTimeCalled As Global.System.Data.DataColumn
            
            Private columnCalledBy As Global.System.Data.DataColumn
            
            Private columnTimeTaken As Global.System.Data.DataColumn
            
            Private columnTakenBy As Global.System.Data.DataColumn
            
            Private columnTimePickedUp As Global.System.Data.DataColumn
            
            Private columnPickedUpBy As Global.System.Data.DataColumn
            
            Private columnTimeParked As Global.System.Data.DataColumn
            
            Private columnParkedBy As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnMoveInstructions As Global.System.Data.DataColumn
            
            Private columnActiveMove As Global.System.Data.DataColumn
            
            Private columnTrailerSystemID As Global.System.Data.DataColumn
            
            Private columnCancelled As Global.System.Data.DataColumn
            
            Private columnCancelledBy As Global.System.Data.DataColumn
            
            Private columnCompleted As Global.System.Data.DataColumn
            
            Private columnTimeCancelled As Global.System.Data.DataColumn
            
            Private columnProblemReported As Global.System.Data.DataColumn
            
            Private columnTimeProblemReported As Global.System.Data.DataColumn
            
            Private columnProblemReportedBy As Global.System.Data.DataColumn
            
            Private columnProblemType As Global.System.Data.DataColumn
            
            Private columnStationCalling As Global.System.Data.DataColumn
            
            Private columnPriorityMove As Global.System.Data.DataColumn
            
            Private columnSeal1 As Global.System.Data.DataColumn
            
            Private columnSeal2 As Global.System.Data.DataColumn
            
            Private columnSeal3 As Global.System.Data.DataColumn
            
            Private columnLoadNumber As Global.System.Data.DataColumn
            
            Private columnSealedBy As Global.System.Data.DataColumn
            
            Private columnCalloutUserInitials As Global.System.Data.DataColumn
            
            Private columnReferUnitMode As Global.System.Data.DataColumn
            
            Private columnHasException As Global.System.Data.DataColumn
            
            Private columnExceptionCode As Global.System.Data.DataColumn
            
            Private columnExceptionCodeDescription As Global.System.Data.DataColumn
            
            Private columnTaggedEmptyClean As Global.System.Data.DataColumn
            
            Private columnSetPointCelsius As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "TrailerMoves"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property StartLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStartLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property DestinationLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDestinationLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property StopOffLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStopOffLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsOnBoardColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsOnBoard
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PreCoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPreCooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TimeCalledColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTimeCalled
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CalledByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCalledBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TimeTakenColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTimeTaken
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TakenByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTakenBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TimePickedUpColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTimePickedUp
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PickedUpByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPickedUpBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TimeParkedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTimeParked
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ParkedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnParkedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveInstructionsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveInstructions
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActiveMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerSystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CancelledColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCancelled
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CancelledByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCancelledBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CompletedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCompleted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TimeCancelledColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTimeCancelled
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ProblemReportedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnProblemReported
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TimeProblemReportedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTimeProblemReported
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ProblemReportedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnProblemReportedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ProblemTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnProblemType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property StationCallingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStationCalling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PriorityMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPriorityMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal1Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal1
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal2Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal2
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal3Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal3
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SealedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSealedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CalloutUserInitialsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCalloutUserInitials
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReferUnitModeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReferUnitMode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property HasExceptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnHasException
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeDescriptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCodeDescription
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TaggedEmptyCleanColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTaggedEmptyClean
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SetPointCelsiusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSetPointCelsius
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TrailerMovesRow
                Get
                    Return CType(Me.Rows(index),TrailerMovesRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailerMovesRowChanging As TrailerMovesRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailerMovesRowChanged As TrailerMovesRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailerMovesRowDeleting As TrailerMovesRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailerMovesRowDeleted As TrailerMovesRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTrailerMovesRow(ByVal row As TrailerMovesRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTrailerMovesRow( _
                        ByVal Carrier As String,  _
                        ByVal TrailerID As String,  _
                        ByVal StartLocation As String,  _
                        ByVal DestinationLocation As String,  _
                        ByVal StopOffLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal Temperature As Integer,  _
                        ByVal PalletsOnBoard As String,  _
                        ByVal PalletsRequested As String,  _
                        ByVal PreCooling As Boolean,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TimeCalled As Date,  _
                        ByVal CalledBy As String,  _
                        ByVal TimeTaken As Date,  _
                        ByVal TakenBy As String,  _
                        ByVal TimePickedUp As Date,  _
                        ByVal PickedUpBy As String,  _
                        ByVal TimeParked As Date,  _
                        ByVal ParkedBy As String,  _
                        ByVal WhosMove As String,  _
                        ByVal MoveInstructions As String,  _
                        ByVal ActiveMove As Boolean,  _
                        ByVal TrailerSystemID As Integer,  _
                        ByVal Cancelled As Boolean,  _
                        ByVal CancelledBy As String,  _
                        ByVal Completed As Boolean,  _
                        ByVal TimeCancelled As Date,  _
                        ByVal ProblemReported As Boolean,  _
                        ByVal TimeProblemReported As Date,  _
                        ByVal ProblemReportedBy As String,  _
                        ByVal ProblemType As String,  _
                        ByVal StationCalling As String,  _
                        ByVal PriorityMove As Boolean,  _
                        ByVal Seal1 As String,  _
                        ByVal Seal2 As String,  _
                        ByVal Seal3 As String,  _
                        ByVal LoadNumber As String,  _
                        ByVal SealedBy As String,  _
                        ByVal CalloutUserInitials As String,  _
                        ByVal ReferUnitMode As String,  _
                        ByVal HasException As Boolean,  _
                        ByVal ExceptionCode As String,  _
                        ByVal ExceptionCodeDescription As String,  _
                        ByVal TaggedEmptyClean As Boolean,  _
                        ByVal SetPointCelsius As Double) As TrailerMovesRow
                Dim rowTrailerMovesRow As TrailerMovesRow = CType(Me.NewRow,TrailerMovesRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Carrier, TrailerID, StartLocation, DestinationLocation, StopOffLocation, LoadStatus, MoveStatus, Temperature, PalletsOnBoard, PalletsRequested, PreCooling, PrecoolStarted, LastAction, LastUser, TimeCalled, CalledBy, TimeTaken, TakenBy, TimePickedUp, PickedUpBy, TimeParked, ParkedBy, WhosMove, MoveInstructions, ActiveMove, TrailerSystemID, Cancelled, CancelledBy, Completed, TimeCancelled, ProblemReported, TimeProblemReported, ProblemReportedBy, ProblemType, StationCalling, PriorityMove, Seal1, Seal2, Seal3, LoadNumber, SealedBy, CalloutUserInitials, ReferUnitMode, HasException, ExceptionCode, ExceptionCodeDescription, TaggedEmptyClean, SetPointCelsius}
                rowTrailerMovesRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTrailerMovesRow)
                Return rowTrailerMovesRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindByMoveID(ByVal MoveID As Integer) As TrailerMovesRow
                Return CType(Me.Rows.Find(New Object() {MoveID}),TrailerMovesRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TrailerMovesDataTable = CType(MyBase.Clone,TrailerMovesDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TrailerMovesDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnMoveID = MyBase.Columns("MoveID")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnStartLocation = MyBase.Columns("StartLocation")
                Me.columnDestinationLocation = MyBase.Columns("DestinationLocation")
                Me.columnStopOffLocation = MyBase.Columns("StopOffLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletsOnBoard = MyBase.Columns("PalletsOnBoard")
                Me.columnPalletsRequested = MyBase.Columns("PalletsRequested")
                Me.columnPreCooling = MyBase.Columns("PreCooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTimeCalled = MyBase.Columns("TimeCalled")
                Me.columnCalledBy = MyBase.Columns("CalledBy")
                Me.columnTimeTaken = MyBase.Columns("TimeTaken")
                Me.columnTakenBy = MyBase.Columns("TakenBy")
                Me.columnTimePickedUp = MyBase.Columns("TimePickedUp")
                Me.columnPickedUpBy = MyBase.Columns("PickedUpBy")
                Me.columnTimeParked = MyBase.Columns("TimeParked")
                Me.columnParkedBy = MyBase.Columns("ParkedBy")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnMoveInstructions = MyBase.Columns("MoveInstructions")
                Me.columnActiveMove = MyBase.Columns("ActiveMove")
                Me.columnTrailerSystemID = MyBase.Columns("TrailerSystemID")
                Me.columnCancelled = MyBase.Columns("Cancelled")
                Me.columnCancelledBy = MyBase.Columns("CancelledBy")
                Me.columnCompleted = MyBase.Columns("Completed")
                Me.columnTimeCancelled = MyBase.Columns("TimeCancelled")
                Me.columnProblemReported = MyBase.Columns("ProblemReported")
                Me.columnTimeProblemReported = MyBase.Columns("TimeProblemReported")
                Me.columnProblemReportedBy = MyBase.Columns("ProblemReportedBy")
                Me.columnProblemType = MyBase.Columns("ProblemType")
                Me.columnStationCalling = MyBase.Columns("StationCalling")
                Me.columnPriorityMove = MyBase.Columns("PriorityMove")
                Me.columnSeal1 = MyBase.Columns("Seal1")
                Me.columnSeal2 = MyBase.Columns("Seal2")
                Me.columnSeal3 = MyBase.Columns("Seal3")
                Me.columnLoadNumber = MyBase.Columns("LoadNumber")
                Me.columnSealedBy = MyBase.Columns("SealedBy")
                Me.columnCalloutUserInitials = MyBase.Columns("CalloutUserInitials")
                Me.columnReferUnitMode = MyBase.Columns("ReferUnitMode")
                Me.columnHasException = MyBase.Columns("HasException")
                Me.columnExceptionCode = MyBase.Columns("ExceptionCode")
                Me.columnExceptionCodeDescription = MyBase.Columns("ExceptionCodeDescription")
                Me.columnTaggedEmptyClean = MyBase.Columns("TaggedEmptyClean")
                Me.columnSetPointCelsius = MyBase.Columns("SetPointCelsius")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnMoveID = New Global.System.Data.DataColumn("MoveID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveID)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnStartLocation = New Global.System.Data.DataColumn("StartLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStartLocation)
                Me.columnDestinationLocation = New Global.System.Data.DataColumn("DestinationLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDestinationLocation)
                Me.columnStopOffLocation = New Global.System.Data.DataColumn("StopOffLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStopOffLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletsOnBoard = New Global.System.Data.DataColumn("PalletsOnBoard", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsOnBoard)
                Me.columnPalletsRequested = New Global.System.Data.DataColumn("PalletsRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsRequested)
                Me.columnPreCooling = New Global.System.Data.DataColumn("PreCooling", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPreCooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTimeCalled = New Global.System.Data.DataColumn("TimeCalled", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTimeCalled)
                Me.columnCalledBy = New Global.System.Data.DataColumn("CalledBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCalledBy)
                Me.columnTimeTaken = New Global.System.Data.DataColumn("TimeTaken", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTimeTaken)
                Me.columnTakenBy = New Global.System.Data.DataColumn("TakenBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTakenBy)
                Me.columnTimePickedUp = New Global.System.Data.DataColumn("TimePickedUp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTimePickedUp)
                Me.columnPickedUpBy = New Global.System.Data.DataColumn("PickedUpBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPickedUpBy)
                Me.columnTimeParked = New Global.System.Data.DataColumn("TimeParked", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTimeParked)
                Me.columnParkedBy = New Global.System.Data.DataColumn("ParkedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnParkedBy)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnMoveInstructions = New Global.System.Data.DataColumn("MoveInstructions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveInstructions)
                Me.columnActiveMove = New Global.System.Data.DataColumn("ActiveMove", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActiveMove)
                Me.columnTrailerSystemID = New Global.System.Data.DataColumn("TrailerSystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerSystemID)
                Me.columnCancelled = New Global.System.Data.DataColumn("Cancelled", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCancelled)
                Me.columnCancelledBy = New Global.System.Data.DataColumn("CancelledBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCancelledBy)
                Me.columnCompleted = New Global.System.Data.DataColumn("Completed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCompleted)
                Me.columnTimeCancelled = New Global.System.Data.DataColumn("TimeCancelled", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTimeCancelled)
                Me.columnProblemReported = New Global.System.Data.DataColumn("ProblemReported", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnProblemReported)
                Me.columnTimeProblemReported = New Global.System.Data.DataColumn("TimeProblemReported", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTimeProblemReported)
                Me.columnProblemReportedBy = New Global.System.Data.DataColumn("ProblemReportedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnProblemReportedBy)
                Me.columnProblemType = New Global.System.Data.DataColumn("ProblemType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnProblemType)
                Me.columnStationCalling = New Global.System.Data.DataColumn("StationCalling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStationCalling)
                Me.columnPriorityMove = New Global.System.Data.DataColumn("PriorityMove", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPriorityMove)
                Me.columnSeal1 = New Global.System.Data.DataColumn("Seal1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal1)
                Me.columnSeal2 = New Global.System.Data.DataColumn("Seal2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal2)
                Me.columnSeal3 = New Global.System.Data.DataColumn("Seal3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal3)
                Me.columnLoadNumber = New Global.System.Data.DataColumn("LoadNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadNumber)
                Me.columnSealedBy = New Global.System.Data.DataColumn("SealedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSealedBy)
                Me.columnCalloutUserInitials = New Global.System.Data.DataColumn("CalloutUserInitials", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCalloutUserInitials)
                Me.columnReferUnitMode = New Global.System.Data.DataColumn("ReferUnitMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReferUnitMode)
                Me.columnHasException = New Global.System.Data.DataColumn("HasException", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnHasException)
                Me.columnExceptionCode = New Global.System.Data.DataColumn("ExceptionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCode)
                Me.columnExceptionCodeDescription = New Global.System.Data.DataColumn("ExceptionCodeDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCodeDescription)
                Me.columnTaggedEmptyClean = New Global.System.Data.DataColumn("TaggedEmptyClean", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTaggedEmptyClean)
                Me.columnSetPointCelsius = New Global.System.Data.DataColumn("SetPointCelsius", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSetPointCelsius)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMoveID}, true))
                Me.columnMoveID.AutoIncrement = true
                Me.columnMoveID.AllowDBNull = false
                Me.columnMoveID.ReadOnly = true
                Me.columnMoveID.Unique = true
                Me.columnCarrier.AllowDBNull = false
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.AllowDBNull = false
                Me.columnTrailerID.MaxLength = 15
                Me.columnStartLocation.AllowDBNull = false
                Me.columnStartLocation.MaxLength = 4
                Me.columnDestinationLocation.AllowDBNull = false
                Me.columnDestinationLocation.MaxLength = 4
                Me.columnStopOffLocation.AllowDBNull = false
                Me.columnStopOffLocation.MaxLength = 4
                Me.columnLoadStatus.AllowDBNull = false
                Me.columnLoadStatus.MaxLength = 15
                Me.columnMoveStatus.AllowDBNull = false
                Me.columnMoveStatus.MaxLength = 10
                Me.columnTemperature.AllowDBNull = false
                Me.columnPalletsOnBoard.AllowDBNull = false
                Me.columnPalletsOnBoard.MaxLength = 20
                Me.columnPalletsRequested.AllowDBNull = false
                Me.columnPalletsRequested.MaxLength = 20
                Me.columnPreCooling.AllowDBNull = false
                Me.columnLastAction.AllowDBNull = false
                Me.columnLastUser.AllowDBNull = false
                Me.columnLastUser.MaxLength = 15
                Me.columnTimeCalled.AllowDBNull = false
                Me.columnCalledBy.AllowDBNull = false
                Me.columnCalledBy.MaxLength = 15
                Me.columnTakenBy.AllowDBNull = false
                Me.columnTakenBy.MaxLength = 15
                Me.columnPickedUpBy.AllowDBNull = false
                Me.columnPickedUpBy.MaxLength = 15
                Me.columnParkedBy.AllowDBNull = false
                Me.columnParkedBy.MaxLength = 15
                Me.columnWhosMove.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 15
                Me.columnMoveInstructions.AllowDBNull = false
                Me.columnMoveInstructions.MaxLength = 300
                Me.columnActiveMove.AllowDBNull = false
                Me.columnTrailerSystemID.AllowDBNull = false
                Me.columnCancelled.AllowDBNull = false
                Me.columnCancelledBy.AllowDBNull = false
                Me.columnCancelledBy.MaxLength = 15
                Me.columnCompleted.AllowDBNull = false
                Me.columnProblemReported.AllowDBNull = false
                Me.columnProblemReportedBy.AllowDBNull = false
                Me.columnProblemReportedBy.MaxLength = 15
                Me.columnProblemType.AllowDBNull = false
                Me.columnProblemType.MaxLength = 25
                Me.columnStationCalling.AllowDBNull = false
                Me.columnStationCalling.MaxLength = 15
                Me.columnPriorityMove.AllowDBNull = false
                Me.columnSeal1.AllowDBNull = false
                Me.columnSeal1.MaxLength = 50
                Me.columnSeal2.AllowDBNull = false
                Me.columnSeal2.MaxLength = 50
                Me.columnSeal3.AllowDBNull = false
                Me.columnSeal3.MaxLength = 50
                Me.columnLoadNumber.AllowDBNull = false
                Me.columnLoadNumber.MaxLength = 50
                Me.columnSealedBy.AllowDBNull = false
                Me.columnSealedBy.MaxLength = 15
                Me.columnCalloutUserInitials.AllowDBNull = false
                Me.columnCalloutUserInitials.MaxLength = 2
                Me.columnReferUnitMode.AllowDBNull = false
                Me.columnReferUnitMode.MaxLength = 50
                Me.columnHasException.AllowDBNull = false
                Me.columnHasException.DefaultValue = CType(false,Boolean)
                Me.columnExceptionCode.DefaultValue = CType("""""",String)
                Me.columnExceptionCode.MaxLength = 150
                Me.columnExceptionCodeDescription.DefaultValue = CType("""""",String)
                Me.columnExceptionCodeDescription.MaxLength = 500
                Me.columnTaggedEmptyClean.AllowDBNull = false
                Me.columnTaggedEmptyClean.DefaultValue = CType(false,Boolean)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTrailerMovesRow() As TrailerMovesRow
                Return CType(Me.NewRow,TrailerMovesRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TrailerMovesRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TrailerMovesRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TrailerMovesRowChangedEvent) Is Nothing) Then
                    RaiseEvent TrailerMovesRowChanged(Me, New TrailerMovesRowChangeEvent(CType(e.Row,TrailerMovesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TrailerMovesRowChangingEvent) Is Nothing) Then
                    RaiseEvent TrailerMovesRowChanging(Me, New TrailerMovesRowChangeEvent(CType(e.Row,TrailerMovesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TrailerMovesRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TrailerMovesRowDeleted(Me, New TrailerMovesRowChangeEvent(CType(e.Row,TrailerMovesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TrailerMovesRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TrailerMovesRowDeleting(Me, New TrailerMovesRowChangeEvent(CType(e.Row,TrailerMovesRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTrailerMovesRow(ByVal row As TrailerMovesRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As MovesDataSet = New MovesDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TrailerMovesDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TrailersDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSystemID As Global.System.Data.DataColumn
            
            Private columnBarcode As Global.System.Data.DataColumn
            
            Private columnSCAC As Global.System.Data.DataColumn
            
            Private columnCarrier As Global.System.Data.DataColumn
            
            Private columnTrailerID As Global.System.Data.DataColumn
            
            Private columnCurrentLocation As Global.System.Data.DataColumn
            
            Private columnNextLocation As Global.System.Data.DataColumn
            
            Private columnThirdLocation As Global.System.Data.DataColumn
            
            Private columnLoadStatus As Global.System.Data.DataColumn
            
            Private columnClassification As Global.System.Data.DataColumn
            
            Private columnActive As Global.System.Data.DataColumn
            
            Private columnMoveStatus As Global.System.Data.DataColumn
            
            Private columnTemperature As Global.System.Data.DataColumn
            
            Private columnPalletType As Global.System.Data.DataColumn
            
            Private columnPrecoolRequested As Global.System.Data.DataColumn
            
            Private columnPrecooling As Global.System.Data.DataColumn
            
            Private columnPrecoolStarted As Global.System.Data.DataColumn
            
            Private columnCleanState As Global.System.Data.DataColumn
            
            Private columnLastAction As Global.System.Data.DataColumn
            
            Private columnLastUser As Global.System.Data.DataColumn
            
            Private columnTrailerAddedTime As Global.System.Data.DataColumn
            
            Private columnTrailerAddedBy As Global.System.Data.DataColumn
            
            Private columnTrailerOutTime As Global.System.Data.DataColumn
            
            Private columnTrailerOutBy As Global.System.Data.DataColumn
            
            Private columnTrailerOut As Global.System.Data.DataColumn
            
            Private columnWhosMove As Global.System.Data.DataColumn
            
            Private columnYardCheck As Global.System.Data.DataColumn
            
            Private columnTrailerType As Global.System.Data.DataColumn
            
            Private columnSpecialInstructions As Global.System.Data.DataColumn
            
            Private columnPalletsOnBoard As Global.System.Data.DataColumn
            
            Private columnPalletsRequested As Global.System.Data.DataColumn
            
            Private columnMoveID As Global.System.Data.DataColumn
            
            Private columnBuyers As Global.System.Data.DataColumn
            
            Private columnSeal1 As Global.System.Data.DataColumn
            
            Private columnSeal2 As Global.System.Data.DataColumn
            
            Private columnSeal3 As Global.System.Data.DataColumn
            
            Private columnLoadNumber As Global.System.Data.DataColumn
            
            Private columnSealException As Global.System.Data.DataColumn
            
            Private columnReferUnitMode As Global.System.Data.DataColumn
            
            Private columnOutOfService As Global.System.Data.DataColumn
            
            Private columnNotes As Global.System.Data.DataColumn
            
            Private columnHasException As Global.System.Data.DataColumn
            
            Private columnExceptionCode As Global.System.Data.DataColumn
            
            Private columnExceptionCodeDescription As Global.System.Data.DataColumn
            
            Private columnFuelRoundCheck As Global.System.Data.DataColumn
            
            Private columnPallets As Global.System.Data.DataColumn
            
            Private columnSetPointCelsius As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Trailers"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SystemIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSystemID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BarcodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBarcode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SCACColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCAC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CarrierColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCarrier
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CurrentLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCurrentLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NextLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNextLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ThirdLocationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnThirdLocation
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnClassification
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnActive
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveStatusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveStatus
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTemperature
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolingColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecooling
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PrecoolStartedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPrecoolStarted
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property CleanStateColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCleanState
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastActionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastAction
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LastUserColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLastUser
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerAddedByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerAddedBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutTimeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutTime
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutByColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOutBy
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerOutColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerOut
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property WhosMoveColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnWhosMove
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property YardCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnYardCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property TrailerTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTrailerType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SpecialInstructionsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpecialInstructions
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsOnBoardColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsOnBoard
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsRequestedColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPalletsRequested
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property MoveIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMoveID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property BuyersColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnBuyers
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal1Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal1
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal2Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal2
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Seal3Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSeal3
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property LoadNumberColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoadNumber
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SealExceptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSealException
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ReferUnitModeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnReferUnitMode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property OutOfServiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOutOfService
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNotes
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property HasExceptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnHasException
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCode
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property ExceptionCodeDescriptionColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnExceptionCodeDescription
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property FuelRoundCheckColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFuelRoundCheck
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property PalletsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPallets
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property SetPointCelsiusColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSetPointCelsius
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TrailersRow
                Get
                    Return CType(Me.Rows(index),TrailersRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanging As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowChanged As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleting As TrailersRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Event TrailersRowDeleted As TrailersRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Sub AddTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overloads Function AddTrailersRow( _
                        ByVal Barcode As String,  _
                        ByVal SCAC As String,  _
                        ByVal Carrier As String,  _
                        ByVal TrailerID As String,  _
                        ByVal CurrentLocation As String,  _
                        ByVal NextLocation As String,  _
                        ByVal ThirdLocation As String,  _
                        ByVal LoadStatus As String,  _
                        ByVal Classification As String,  _
                        ByVal Active As String,  _
                        ByVal MoveStatus As String,  _
                        ByVal Temperature As String,  _
                        ByVal PalletType As String,  _
                        ByVal PrecoolRequested As String,  _
                        ByVal Precooling As String,  _
                        ByVal PrecoolStarted As Date,  _
                        ByVal CleanState As String,  _
                        ByVal LastAction As Date,  _
                        ByVal LastUser As String,  _
                        ByVal TrailerAddedTime As Date,  _
                        ByVal TrailerAddedBy As String,  _
                        ByVal TrailerOutTime As Date,  _
                        ByVal TrailerOutBy As String,  _
                        ByVal TrailerOut As Boolean,  _
                        ByVal WhosMove As String,  _
                        ByVal YardCheck As Boolean,  _
                        ByVal TrailerType As String,  _
                        ByVal SpecialInstructions As String,  _
                        ByVal PalletsOnBoard As String,  _
                        ByVal PalletsRequested As String,  _
                        ByVal MoveID As Integer,  _
                        ByVal Buyers As Boolean,  _
                        ByVal Seal1 As String,  _
                        ByVal Seal2 As String,  _
                        ByVal Seal3 As String,  _
                        ByVal LoadNumber As String,  _
                        ByVal SealException As Boolean,  _
                        ByVal ReferUnitMode As String,  _
                        ByVal OutOfService As Boolean,  _
                        ByVal Notes As String,  _
                        ByVal HasException As Boolean,  _
                        ByVal ExceptionCode As String,  _
                        ByVal ExceptionCodeDescription As String,  _
                        ByVal FuelRoundCheck As Boolean,  _
                        ByVal Pallets As String,  _
                        ByVal SetPointCelsius As Double) As TrailersRow
                Dim rowTrailersRow As TrailersRow = CType(Me.NewRow,TrailersRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, Barcode, SCAC, Carrier, TrailerID, CurrentLocation, NextLocation, ThirdLocation, LoadStatus, Classification, Active, MoveStatus, Temperature, PalletType, PrecoolRequested, Precooling, PrecoolStarted, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerOutTime, TrailerOutBy, TrailerOut, WhosMove, YardCheck, TrailerType, SpecialInstructions, PalletsOnBoard, PalletsRequested, MoveID, Buyers, Seal1, Seal2, Seal3, LoadNumber, SealException, ReferUnitMode, OutOfService, Notes, HasException, ExceptionCode, ExceptionCodeDescription, FuelRoundCheck, Pallets, SetPointCelsius}
                rowTrailersRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTrailersRow)
                Return rowTrailersRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function FindBySystemID(ByVal SystemID As Integer) As TrailersRow
                Return CType(Me.Rows.Find(New Object() {SystemID}),TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TrailersDataTable = CType(MyBase.Clone,TrailersDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TrailersDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSystemID = MyBase.Columns("SystemID")
                Me.columnBarcode = MyBase.Columns("Barcode")
                Me.columnSCAC = MyBase.Columns("SCAC")
                Me.columnCarrier = MyBase.Columns("Carrier")
                Me.columnTrailerID = MyBase.Columns("TrailerID")
                Me.columnCurrentLocation = MyBase.Columns("CurrentLocation")
                Me.columnNextLocation = MyBase.Columns("NextLocation")
                Me.columnThirdLocation = MyBase.Columns("ThirdLocation")
                Me.columnLoadStatus = MyBase.Columns("LoadStatus")
                Me.columnClassification = MyBase.Columns("Classification")
                Me.columnActive = MyBase.Columns("Active")
                Me.columnMoveStatus = MyBase.Columns("MoveStatus")
                Me.columnTemperature = MyBase.Columns("Temperature")
                Me.columnPalletType = MyBase.Columns("PalletType")
                Me.columnPrecoolRequested = MyBase.Columns("PrecoolRequested")
                Me.columnPrecooling = MyBase.Columns("Precooling")
                Me.columnPrecoolStarted = MyBase.Columns("PrecoolStarted")
                Me.columnCleanState = MyBase.Columns("CleanState")
                Me.columnLastAction = MyBase.Columns("LastAction")
                Me.columnLastUser = MyBase.Columns("LastUser")
                Me.columnTrailerAddedTime = MyBase.Columns("TrailerAddedTime")
                Me.columnTrailerAddedBy = MyBase.Columns("TrailerAddedBy")
                Me.columnTrailerOutTime = MyBase.Columns("TrailerOutTime")
                Me.columnTrailerOutBy = MyBase.Columns("TrailerOutBy")
                Me.columnTrailerOut = MyBase.Columns("TrailerOut")
                Me.columnWhosMove = MyBase.Columns("WhosMove")
                Me.columnYardCheck = MyBase.Columns("YardCheck")
                Me.columnTrailerType = MyBase.Columns("TrailerType")
                Me.columnSpecialInstructions = MyBase.Columns("SpecialInstructions")
                Me.columnPalletsOnBoard = MyBase.Columns("PalletsOnBoard")
                Me.columnPalletsRequested = MyBase.Columns("PalletsRequested")
                Me.columnMoveID = MyBase.Columns("MoveID")
                Me.columnBuyers = MyBase.Columns("Buyers")
                Me.columnSeal1 = MyBase.Columns("Seal1")
                Me.columnSeal2 = MyBase.Columns("Seal2")
                Me.columnSeal3 = MyBase.Columns("Seal3")
                Me.columnLoadNumber = MyBase.Columns("LoadNumber")
                Me.columnSealException = MyBase.Columns("SealException")
                Me.columnReferUnitMode = MyBase.Columns("ReferUnitMode")
                Me.columnOutOfService = MyBase.Columns("OutOfService")
                Me.columnNotes = MyBase.Columns("Notes")
                Me.columnHasException = MyBase.Columns("HasException")
                Me.columnExceptionCode = MyBase.Columns("ExceptionCode")
                Me.columnExceptionCodeDescription = MyBase.Columns("ExceptionCodeDescription")
                Me.columnFuelRoundCheck = MyBase.Columns("FuelRoundCheck")
                Me.columnPallets = MyBase.Columns("Pallets")
                Me.columnSetPointCelsius = MyBase.Columns("SetPointCelsius")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSystemID = New Global.System.Data.DataColumn("SystemID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSystemID)
                Me.columnBarcode = New Global.System.Data.DataColumn("Barcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBarcode)
                Me.columnSCAC = New Global.System.Data.DataColumn("SCAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCAC)
                Me.columnCarrier = New Global.System.Data.DataColumn("Carrier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCarrier)
                Me.columnTrailerID = New Global.System.Data.DataColumn("TrailerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerID)
                Me.columnCurrentLocation = New Global.System.Data.DataColumn("CurrentLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCurrentLocation)
                Me.columnNextLocation = New Global.System.Data.DataColumn("NextLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNextLocation)
                Me.columnThirdLocation = New Global.System.Data.DataColumn("ThirdLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnThirdLocation)
                Me.columnLoadStatus = New Global.System.Data.DataColumn("LoadStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadStatus)
                Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnClassification)
                Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnActive)
                Me.columnMoveStatus = New Global.System.Data.DataColumn("MoveStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveStatus)
                Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTemperature)
                Me.columnPalletType = New Global.System.Data.DataColumn("PalletType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletType)
                Me.columnPrecoolRequested = New Global.System.Data.DataColumn("PrecoolRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolRequested)
                Me.columnPrecooling = New Global.System.Data.DataColumn("Precooling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecooling)
                Me.columnPrecoolStarted = New Global.System.Data.DataColumn("PrecoolStarted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPrecoolStarted)
                Me.columnCleanState = New Global.System.Data.DataColumn("CleanState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCleanState)
                Me.columnLastAction = New Global.System.Data.DataColumn("LastAction", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastAction)
                Me.columnLastUser = New Global.System.Data.DataColumn("LastUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLastUser)
                Me.columnTrailerAddedTime = New Global.System.Data.DataColumn("TrailerAddedTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedTime)
                Me.columnTrailerAddedBy = New Global.System.Data.DataColumn("TrailerAddedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerAddedBy)
                Me.columnTrailerOutTime = New Global.System.Data.DataColumn("TrailerOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutTime)
                Me.columnTrailerOutBy = New Global.System.Data.DataColumn("TrailerOutBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOutBy)
                Me.columnTrailerOut = New Global.System.Data.DataColumn("TrailerOut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerOut)
                Me.columnWhosMove = New Global.System.Data.DataColumn("WhosMove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnWhosMove)
                Me.columnYardCheck = New Global.System.Data.DataColumn("YardCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnYardCheck)
                Me.columnTrailerType = New Global.System.Data.DataColumn("TrailerType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTrailerType)
                Me.columnSpecialInstructions = New Global.System.Data.DataColumn("SpecialInstructions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpecialInstructions)
                Me.columnPalletsOnBoard = New Global.System.Data.DataColumn("PalletsOnBoard", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsOnBoard)
                Me.columnPalletsRequested = New Global.System.Data.DataColumn("PalletsRequested", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPalletsRequested)
                Me.columnMoveID = New Global.System.Data.DataColumn("MoveID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMoveID)
                Me.columnBuyers = New Global.System.Data.DataColumn("Buyers", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnBuyers)
                Me.columnSeal1 = New Global.System.Data.DataColumn("Seal1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal1)
                Me.columnSeal2 = New Global.System.Data.DataColumn("Seal2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal2)
                Me.columnSeal3 = New Global.System.Data.DataColumn("Seal3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSeal3)
                Me.columnLoadNumber = New Global.System.Data.DataColumn("LoadNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoadNumber)
                Me.columnSealException = New Global.System.Data.DataColumn("SealException", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSealException)
                Me.columnReferUnitMode = New Global.System.Data.DataColumn("ReferUnitMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnReferUnitMode)
                Me.columnOutOfService = New Global.System.Data.DataColumn("OutOfService", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOutOfService)
                Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNotes)
                Me.columnHasException = New Global.System.Data.DataColumn("HasException", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnHasException)
                Me.columnExceptionCode = New Global.System.Data.DataColumn("ExceptionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCode)
                Me.columnExceptionCodeDescription = New Global.System.Data.DataColumn("ExceptionCodeDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnExceptionCodeDescription)
                Me.columnFuelRoundCheck = New Global.System.Data.DataColumn("FuelRoundCheck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFuelRoundCheck)
                Me.columnPallets = New Global.System.Data.DataColumn("Pallets", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPallets)
                Me.columnSetPointCelsius = New Global.System.Data.DataColumn("SetPointCelsius", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSetPointCelsius)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSystemID}, true))
                Me.columnSystemID.AutoIncrement = true
                Me.columnSystemID.AllowDBNull = false
                Me.columnSystemID.ReadOnly = true
                Me.columnSystemID.Unique = true
                Me.columnBarcode.MaxLength = 35
                Me.columnSCAC.MaxLength = 4
                Me.columnCarrier.MaxLength = 99
                Me.columnTrailerID.MaxLength = 15
                Me.columnCurrentLocation.MaxLength = 4
                Me.columnNextLocation.MaxLength = 4
                Me.columnThirdLocation.MaxLength = 4
                Me.columnLoadStatus.MaxLength = 1
                Me.columnClassification.MaxLength = 1
                Me.columnActive.MaxLength = 1
                Me.columnMoveStatus.MaxLength = 25
                Me.columnTemperature.MaxLength = 5
                Me.columnPalletType.MaxLength = 1
                Me.columnPrecoolRequested.MaxLength = 1
                Me.columnPrecooling.MaxLength = 1
                Me.columnCleanState.MaxLength = 1
                Me.columnLastUser.MaxLength = 20
                Me.columnTrailerAddedBy.MaxLength = 15
                Me.columnTrailerOutBy.MaxLength = 15
                Me.columnTrailerOut.AllowDBNull = false
                Me.columnWhosMove.MaxLength = 15
                Me.columnYardCheck.AllowDBNull = false
                Me.columnTrailerType.AllowDBNull = false
                Me.columnTrailerType.MaxLength = 2
                Me.columnSpecialInstructions.AllowDBNull = false
                Me.columnSpecialInstructions.MaxLength = 300
                Me.columnPalletsOnBoard.AllowDBNull = false
                Me.columnPalletsOnBoard.MaxLength = 25
                Me.columnPalletsRequested.AllowDBNull = false
                Me.columnPalletsRequested.MaxLength = 25
                Me.columnMoveID.AllowDBNull = false
                Me.columnBuyers.AllowDBNull = false
                Me.columnSeal1.AllowDBNull = false
                Me.columnSeal1.MaxLength = 50
                Me.columnSeal2.AllowDBNull = false
                Me.columnSeal2.MaxLength = 50
                Me.columnSeal3.AllowDBNull = false
                Me.columnSeal3.MaxLength = 50
                Me.columnLoadNumber.AllowDBNull = false
                Me.columnLoadNumber.MaxLength = 50
                Me.columnSealException.AllowDBNull = false
                Me.columnReferUnitMode.AllowDBNull = false
                Me.columnReferUnitMode.MaxLength = 50
                Me.columnOutOfService.AllowDBNull = false
                Me.columnNotes.MaxLength = 2147483647
                Me.columnHasException.AllowDBNull = false
                Me.columnExceptionCode.MaxLength = 150
                Me.columnExceptionCodeDescription.MaxLength = 500
                Me.columnFuelRoundCheck.AllowDBNull = false
                Me.columnPallets.MaxLength = 2147483647
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function NewTrailersRow() As TrailersRow
                Return CType(Me.NewRow,TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TrailersRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TrailersRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TrailersRowChangedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanged(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TrailersRowChangingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowChanging(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TrailersRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleted(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TrailersRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TrailersRowDeleting(Me, New TrailersRowChangeEvent(CType(e.Row,TrailersRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub RemoveTrailersRow(ByVal row As TrailersRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As MovesDataSet = New MovesDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TrailersDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TrailerMovesRow
            Inherits Global.System.Data.DataRow
            
            Private tableTrailerMoves As TrailerMovesDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTrailerMoves = CType(Me.Table,TrailerMovesDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveID() As Integer
                Get
                    Return CType(Me(Me.tableTrailerMoves.MoveIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailerMoves.MoveIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.CarrierColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.TrailerIDColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property StartLocation() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.StartLocationColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.StartLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property DestinationLocation() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.DestinationLocationColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.DestinationLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property StopOffLocation() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.StopOffLocationColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.StopOffLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.LoadStatusColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.MoveStatusColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As Integer
                Get
                    Return CType(Me(Me.tableTrailerMoves.TemperatureColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailerMoves.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsOnBoard() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.PalletsOnBoardColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.PalletsOnBoardColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsRequested() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.PalletsRequestedColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.PalletsRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PreCooling() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.PreCoolingColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.PreCoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Return CType(Me(Me.tableTrailerMoves.LastActionColumn),Date)
                End Get
                Set
                    Me(Me.tableTrailerMoves.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.LastUserColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TimeCalled() As Date
                Get
                    Return CType(Me(Me.tableTrailerMoves.TimeCalledColumn),Date)
                End Get
                Set
                    Me(Me.tableTrailerMoves.TimeCalledColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CalledBy() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.CalledByColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.CalledByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TimeTaken() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.TimeTakenColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TimeTaken' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.TimeTakenColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TakenBy() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.TakenByColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.TakenByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TimePickedUp() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.TimePickedUpColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TimePickedUp' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.TimePickedUpColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PickedUpBy() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.PickedUpByColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.PickedUpByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TimeParked() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.TimeParkedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TimeParked' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.TimeParkedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ParkedBy() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.ParkedByColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.ParkedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.WhosMoveColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveInstructions() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.MoveInstructionsColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.MoveInstructionsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ActiveMove() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.ActiveMoveColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.ActiveMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerSystemID() As Integer
                Get
                    Return CType(Me(Me.tableTrailerMoves.TrailerSystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailerMoves.TrailerSystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Cancelled() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.CancelledColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.CancelledColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CancelledBy() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.CancelledByColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.CancelledByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Completed() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.CompletedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.CompletedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TimeCancelled() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.TimeCancelledColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TimeCancelled' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.TimeCancelledColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ProblemReported() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.ProblemReportedColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.ProblemReportedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TimeProblemReported() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.TimeProblemReportedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TimeProblemReported' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.TimeProblemReportedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ProblemReportedBy() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.ProblemReportedByColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.ProblemReportedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ProblemType() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.ProblemTypeColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.ProblemTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property StationCalling() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.StationCallingColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.StationCallingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PriorityMove() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.PriorityMoveColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.PriorityMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal1() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.Seal1Column),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.Seal1Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal2() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.Seal2Column),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.Seal2Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal3() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.Seal3Column),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.Seal3Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadNumber() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.LoadNumberColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.LoadNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SealedBy() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.SealedByColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.SealedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CalloutUserInitials() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.CalloutUserInitialsColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.CalloutUserInitialsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReferUnitMode() As String
                Get
                    Return CType(Me(Me.tableTrailerMoves.ReferUnitModeColumn),String)
                End Get
                Set
                    Me(Me.tableTrailerMoves.ReferUnitModeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property HasException() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.HasExceptionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.HasExceptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.ExceptionCodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCode' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.ExceptionCodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCodeDescription() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.ExceptionCodeDescriptionColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCodeDescription' in table 'TrailerMoves' is DBNull"& _ 
                                ".", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.ExceptionCodeDescriptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TaggedEmptyClean() As Boolean
                Get
                    Return CType(Me(Me.tableTrailerMoves.TaggedEmptyCleanColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailerMoves.TaggedEmptyCleanColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SetPointCelsius() As Double
                Get
                    Try 
                        Return CType(Me(Me.tableTrailerMoves.SetPointCelsiusColumn),Double)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SetPointCelsius' in table 'TrailerMoves' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailerMoves.SetPointCelsiusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableTrailerMoves.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTimeTakenNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.TimeTakenColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTimeTakenNull()
                Me(Me.tableTrailerMoves.TimeTakenColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTimePickedUpNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.TimePickedUpColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTimePickedUpNull()
                Me(Me.tableTrailerMoves.TimePickedUpColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTimeParkedNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.TimeParkedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTimeParkedNull()
                Me(Me.tableTrailerMoves.TimeParkedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTimeCancelledNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.TimeCancelledColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTimeCancelledNull()
                Me(Me.tableTrailerMoves.TimeCancelledColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTimeProblemReportedNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.TimeProblemReportedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTimeProblemReportedNull()
                Me(Me.tableTrailerMoves.TimeProblemReportedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.ExceptionCodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeNull()
                Me(Me.tableTrailerMoves.ExceptionCodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeDescriptionNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.ExceptionCodeDescriptionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeDescriptionNull()
                Me(Me.tableTrailerMoves.ExceptionCodeDescriptionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSetPointCelsiusNull() As Boolean
                Return Me.IsNull(Me.tableTrailerMoves.SetPointCelsiusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSetPointCelsiusNull()
                Me(Me.tableTrailerMoves.SetPointCelsiusColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TrailersRow
            Inherits Global.System.Data.DataRow
            
            Private tableTrailers As TrailersDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTrailers = CType(Me.Table,TrailersDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SystemID() As Integer
                Get
                    Return CType(Me(Me.tableTrailers.SystemIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailers.SystemIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Barcode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.BarcodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.BarcodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SCAC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.SCACColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCAC' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.SCACColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Carrier() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CarrierColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Carrier' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CarrierColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerID' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CurrentLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CurrentLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CurrentLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property NextLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.NextLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NextLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.NextLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ThirdLocation() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ThirdLocationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ThirdLocation' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ThirdLocationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LoadStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoadStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LoadStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Classification() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ClassificationColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ClassificationColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Active() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ActiveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Active' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ActiveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveStatus() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.MoveStatusColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MoveStatus' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.MoveStatusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Temperature() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TemperatureColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TemperatureColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletType() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PalletTypeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PalletType' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PalletTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolRequested() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolRequestedColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolRequested' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Precooling() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolingColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Precooling' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolingColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PrecoolStarted() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PrecoolStartedColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PrecoolStarted' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PrecoolStartedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property CleanState() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.CleanStateColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CleanState' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.CleanStateColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastAction() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastActionColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastAction' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastActionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LastUser() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.LastUserColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LastUser' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.LastUserColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerAddedBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerAddedByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerAddedBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerAddedByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutTime() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutTimeColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutTime' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutTimeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOutBy() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.TrailerOutByColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TrailerOutBy' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutByColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerOut() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.TrailerOutColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerOutColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property WhosMove() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.WhosMoveColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'WhosMove' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.WhosMoveColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property YardCheck() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.YardCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.YardCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property TrailerType() As String
                Get
                    Return CType(Me(Me.tableTrailers.TrailerTypeColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.TrailerTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SpecialInstructions() As String
                Get
                    Return CType(Me(Me.tableTrailers.SpecialInstructionsColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.SpecialInstructionsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsOnBoard() As String
                Get
                    Return CType(Me(Me.tableTrailers.PalletsOnBoardColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.PalletsOnBoardColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property PalletsRequested() As String
                Get
                    Return CType(Me(Me.tableTrailers.PalletsRequestedColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.PalletsRequestedColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property MoveID() As Integer
                Get
                    Return CType(Me(Me.tableTrailers.MoveIDColumn),Integer)
                End Get
                Set
                    Me(Me.tableTrailers.MoveIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Buyers() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.BuyersColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.BuyersColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal1() As String
                Get
                    Return CType(Me(Me.tableTrailers.Seal1Column),String)
                End Get
                Set
                    Me(Me.tableTrailers.Seal1Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal2() As String
                Get
                    Return CType(Me(Me.tableTrailers.Seal2Column),String)
                End Get
                Set
                    Me(Me.tableTrailers.Seal2Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Seal3() As String
                Get
                    Return CType(Me(Me.tableTrailers.Seal3Column),String)
                End Get
                Set
                    Me(Me.tableTrailers.Seal3Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property LoadNumber() As String
                Get
                    Return CType(Me(Me.tableTrailers.LoadNumberColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.LoadNumberColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SealException() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.SealExceptionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.SealExceptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ReferUnitMode() As String
                Get
                    Return CType(Me(Me.tableTrailers.ReferUnitModeColumn),String)
                End Get
                Set
                    Me(Me.tableTrailers.ReferUnitModeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property OutOfService() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.OutOfServiceColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.OutOfServiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Notes() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.NotesColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.NotesColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property HasException() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.HasExceptionColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.HasExceptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCode() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ExceptionCodeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCode' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ExceptionCodeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property ExceptionCodeDescription() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.ExceptionCodeDescriptionColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ExceptionCodeDescription' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.ExceptionCodeDescriptionColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property FuelRoundCheck() As Boolean
                Get
                    Return CType(Me(Me.tableTrailers.FuelRoundCheckColumn),Boolean)
                End Get
                Set
                    Me(Me.tableTrailers.FuelRoundCheckColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property Pallets() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.PalletsColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Pallets' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.PalletsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Property SetPointCelsius() As Double
                Get
                    Try 
                        Return CType(Me(Me.tableTrailers.SetPointCelsiusColumn),Double)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SetPointCelsius' in table 'Trailers' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTrailers.SetPointCelsiusColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsBarcodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.BarcodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetBarcodeNull()
                Me(Me.tableTrailers.BarcodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSCACNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.SCACColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSCACNull()
                Me(Me.tableTrailers.SCACColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCarrierNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CarrierColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCarrierNull()
                Me(Me.tableTrailers.CarrierColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerIDNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerIDNull()
                Me(Me.tableTrailers.TrailerIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCurrentLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CurrentLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCurrentLocationNull()
                Me(Me.tableTrailers.CurrentLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNextLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.NextLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNextLocationNull()
                Me(Me.tableTrailers.NextLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsThirdLocationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ThirdLocationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetThirdLocationNull()
                Me(Me.tableTrailers.ThirdLocationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLoadStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LoadStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLoadStatusNull()
                Me(Me.tableTrailers.LoadStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsClassificationNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ClassificationColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetClassificationNull()
                Me(Me.tableTrailers.ClassificationColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsActiveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ActiveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetActiveNull()
                Me(Me.tableTrailers.ActiveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsMoveStatusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.MoveStatusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetMoveStatusNull()
                Me(Me.tableTrailers.MoveStatusColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTemperatureNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TemperatureColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTemperatureNull()
                Me(Me.tableTrailers.TemperatureColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletTypeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PalletTypeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletTypeNull()
                Me(Me.tableTrailers.PalletTypeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolRequestedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolRequestedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolRequestedNull()
                Me(Me.tableTrailers.PrecoolRequestedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolingNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolingColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolingNull()
                Me(Me.tableTrailers.PrecoolingColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPrecoolStartedNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PrecoolStartedColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPrecoolStartedNull()
                Me(Me.tableTrailers.PrecoolStartedColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsCleanStateNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.CleanStateColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetCleanStateNull()
                Me(Me.tableTrailers.CleanStateColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastActionNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastActionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastActionNull()
                Me(Me.tableTrailers.LastActionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsLastUserNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.LastUserColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetLastUserNull()
                Me(Me.tableTrailers.LastUserColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedTimeNull()
                Me(Me.tableTrailers.TrailerAddedTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerAddedByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerAddedByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerAddedByNull()
                Me(Me.tableTrailers.TrailerAddedByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutTimeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutTimeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutTimeNull()
                Me(Me.tableTrailers.TrailerOutTimeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsTrailerOutByNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.TrailerOutByColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetTrailerOutByNull()
                Me(Me.tableTrailers.TrailerOutByColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsWhosMoveNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.WhosMoveColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetWhosMoveNull()
                Me(Me.tableTrailers.WhosMoveColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsNotesNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.NotesColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetNotesNull()
                Me(Me.tableTrailers.NotesColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ExceptionCodeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeNull()
                Me(Me.tableTrailers.ExceptionCodeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsExceptionCodeDescriptionNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.ExceptionCodeDescriptionColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetExceptionCodeDescriptionNull()
                Me(Me.tableTrailers.ExceptionCodeDescriptionColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsPalletsNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.PalletsColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetPalletsNull()
                Me(Me.tableTrailers.PalletsColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function IsSetPointCelsiusNull() As Boolean
                Return Me.IsNull(Me.tableTrailers.SetPointCelsiusColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub SetSetPointCelsiusNull()
                Me(Me.tableTrailers.SetPointCelsiusColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TrailerMovesRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TrailerMovesRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TrailerMovesRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TrailerMovesRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Class TrailersRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TrailersRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Sub New(ByVal row As TrailersRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Row() As TrailersRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CallOutWashdockToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As CallOutWashdockToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallOutWashdockToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AddTrailerToWashDockCompletedEventHandler(ByVal sender As Object, ByVal e As AddTrailerToWashDockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddTrailerToWashDockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CallOutWashDockNoMoveCompletedEventHandler(ByVal sender As Object, ByVal e As CallOutWashDockNoMoveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallOutWashDockNoMoveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CallToWashDockCompletedEventHandler(ByVal sender As Object, ByVal e As CallToWashDockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallToWashDockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ClearTrailerExceptionCompletedEventHandler(ByVal sender As Object, ByVal e As ClearTrailerExceptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ClearTrailerExceptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetKarDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetKarDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetKarDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetInboundSheetCompletedEventHandler(ByVal sender As Object, ByVal e As GetInboundSheetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInboundSheetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCarrierListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCarrierListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCarrierListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailerRowByBarcodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailerRowByBarcodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailerRowByBarcodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateTrailerCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTrailerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTrailerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrailerDataBySystemIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrailerDataBySystemIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrailerDataBySystemIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrailerCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrailerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrailerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trailer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trailer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetInboundSheetRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As GetInboundSheetRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInboundSheetRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetOutboundSheetRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As GetOutboundSheetRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOutboundSheetRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MarkForYardCheckCompletedEventHandler(ByVal sender As Object, ByVal e As MarkForYardCheckCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MarkForYardCheckCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ResetYardCheckCompletedEventHandler(ByVal sender As Object, ByVal e As ResetYardCheckCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ResetYardCheckCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailerCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailerCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailerCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailersCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BarcodeDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BarcodeDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ProcessYardCheckCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessYardCheckCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessYardCheckCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetYardCheckRefDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetYardCheckRefDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetYardCheckRefDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As YardCheckReferenceDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),YardCheckReferenceDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetYardCheckReviewCompletedEventHandler(ByVal sender As Object, ByVal e As GetYardCheckReviewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetYardCheckReviewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As YardCheckReview
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),YardCheckReview)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UseRackCompletedEventHandler(ByVal sender As Object, ByVal e As UseRackCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UseRackCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As KarLotUser
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),KarLotUser)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveCarriersCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveCarriersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveCarriersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Carrier()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Carrier())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailersByScacCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailersByScacCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailersByScacCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trailer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trailer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailersByTrailerIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailersByTrailerIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailersByTrailerIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trailer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trailer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailersDatasetCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailersDatasetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailersDatasetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ActiveTrailerDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ActiveTrailerDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailersByLoadStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailersByLoadStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailersByLoadStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trailer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trailer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetTrailerOutOfServiceCompletedEventHandler(ByVal sender As Object, ByVal e As SetTrailerOutOfServiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetTrailerOutOfServiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trailer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trailer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetTrailerInServiceCompletedEventHandler(ByVal sender As Object, ByVal e As SetTrailerInServiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetTrailerInServiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trailer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trailer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetMovesCompletedEventHandler(ByVal sender As Object, ByVal e As GetMovesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMovesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrailerMoveTO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrailerMoveTO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TakeMoveCalledToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As TakeMoveCalledToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TakeMoveCalledToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TakeMoveCalledFromWashDockCompletedEventHandler(ByVal sender As Object, ByVal e As TakeMoveCalledFromWashDockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TakeMoveCalledFromWashDockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TakeMoveCalledOutDoorCompletedEventHandler(ByVal sender As Object, ByVal e As TakeMoveCalledOutDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TakeMoveCalledOutDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TakeMoveCalledDoorToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As TakeMoveCalledDoorToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TakeMoveCalledDoorToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupFromDoorToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As PickupFromDoorToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupFromDoorToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupFromLotToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As PickupFromLotToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupFromLotToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupFromWashDockToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As PickupFromWashDockToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupFromWashDockToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupFromDoorToLotCompletedEventHandler(ByVal sender As Object, ByVal e As PickupFromDoorToLotCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupFromDoorToLotCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupForRelocateCompletedEventHandler(ByVal sender As Object, ByVal e As PickupForRelocateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupForRelocateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ParkAtDoorDestinationCompletedEventHandler(ByVal sender As Object, ByVal e As ParkAtDoorDestinationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ParkAtDoorDestinationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ParkAtLotLocationCompletedEventHandler(ByVal sender As Object, ByVal e As ParkAtLotLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ParkAtLotLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ParkAtWashDockLocationCompletedEventHandler(ByVal sender As Object, ByVal e As ParkAtWashDockLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ParkAtWashDockLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetOpenTaskCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetOpenTaskCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOpenTaskCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetUserTaskCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserTaskCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserTaskCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetUserTasksCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserTasksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserTasksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TasksDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TasksDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAllOpenTasksCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllOpenTasksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllOpenTasksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TasksDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TasksDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AssignTaskToUserCompletedEventHandler(ByVal sender As Object, ByVal e As AssignTaskToUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AssignTaskToUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TaskFinishedCompletedEventHandler(ByVal sender As Object, ByVal e As TaskFinishedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TaskFinishedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CompleteTaskByUserCompletedEventHandler(ByVal sender As Object, ByVal e As CompleteTaskByUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CompleteTaskByUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub IsMoveCancelledCompletedEventHandler(ByVal sender As Object, ByVal e As IsMoveCancelledCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsMoveCancelledCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub IsMoveTakenCompletedEventHandler(ByVal sender As Object, ByVal e As IsMoveTakenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsMoveTakenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetMoveChecksumCompletedEventHandler(ByVal sender As Object, ByVal e As GetMoveChecksumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMoveChecksumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Nullable(Of Integer)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Integer))
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetServerTimeCompletedEventHandler(ByVal sender As Object, ByVal e As GetServerTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServerTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetTrailerSealsCompletedEventHandler(ByVal sender As Object, ByVal e As SetTrailerSealsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetTrailerSealsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBuildingsCompletedEventHandler(ByVal sender As Object, ByVal e As GetBuildingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBuildingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Building()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Building())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBuildingsByDroptypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetBuildingsByDroptypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBuildingsByDroptypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Building()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Building())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDoorsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDoorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDoorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Door()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Door())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CallTrailerMoveToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As CallTrailerMoveToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallTrailerMoveToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CallTrailerMoveOutDoorToLotCompletedEventHandler(ByVal sender As Object, ByVal e As CallTrailerMoveOutDoorToLotCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallTrailerMoveOutDoorToLotCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CallTrailerMoveOutDoorToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As CallTrailerMoveOutDoorToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallTrailerMoveOutDoorToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailerMovesCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailerMovesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailerMovesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrailerMoveTO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrailerMoveTO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AddPalletTaskCompletedEventHandler(ByVal sender As Object, ByVal e As AddPalletTaskCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddPalletTaskCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AddBasicTaskCompletedEventHandler(ByVal sender As Object, ByVal e As AddBasicTaskCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddBasicTaskCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTaskTextItemsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTaskTextItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTaskTextItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaskTextDataSet.TaskTextDataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaskTextDataSet.TaskTextDataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTaskArgsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetTaskArgsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTaskArgsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaskTextArgTO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaskTextArgTO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetUpdateTrailerDSCompletedEventHandler(ByVal sender As Object, ByVal e As GetUpdateTrailerDSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUpdateTrailerDSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UpdateTrailerDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UpdateTrailerDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PostUpdateTrailerInfoCompletedEventHandler(ByVal sender As Object, ByVal e As PostUpdateTrailerInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostUpdateTrailerInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDoorTrailersCompletedEventHandler(ByVal sender As Object, ByVal e As GetDoorTrailersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDoorTrailersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Trailer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Trailer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CancelTrailerMovesCompletedEventHandler(ByVal sender As Object, ByVal e As CancelTrailerMovesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelTrailerMovesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCompletedMovesByDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetCompletedMovesByDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCompletedMovesByDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MovesDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MovesDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPreCoolingTrailersCompletedEventHandler(ByVal sender As Object, ByVal e As GetPreCoolingTrailersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPreCoolingTrailersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PreCoolTrailerTO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PreCoolTrailerTO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPreCoolingTrailersByTrailerIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetPreCoolingTrailersByTrailerIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPreCoolingTrailersByTrailerIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PreCoolTrailerTO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PreCoolTrailerTO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPreCoolingTrailersByCarrierCompletedEventHandler(ByVal sender As Object, ByVal e As GetPreCoolingTrailersByCarrierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPreCoolingTrailersByCarrierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PreCoolTrailerTO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PreCoolTrailerTO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AddPrecoolTaskCompletedEventHandler(ByVal sender As Object, ByVal e As AddPrecoolTaskCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddPrecoolTaskCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PreCoolTrailerTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PreCoolTrailerTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AddStopPrecoolTaskCompletedEventHandler(ByVal sender As Object, ByVal e As AddStopPrecoolTaskCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddStopPrecoolTaskCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PreCoolTrailerTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PreCoolTrailerTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CancelPrecoolTaskCompletedEventHandler(ByVal sender As Object, ByVal e As CancelPrecoolTaskCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelPrecoolTaskCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPrecoolingTasksByTrailerSystemIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrecoolingTasksByTrailerSystemIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrecoolingTasksByTrailerSystemIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TasksDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TasksDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveWashDockTrailersCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveWashDockTrailersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveWashDockTrailersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MovesDataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MovesDataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CallOutWashDockToLotCompletedEventHandler(ByVal sender As Object, ByVal e As CallOutWashDockToLotCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallOutWashDockToLotCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
