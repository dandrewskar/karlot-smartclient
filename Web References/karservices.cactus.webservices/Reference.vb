'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace karservices.cactus.webservices
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://karservices.com/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ServiceTestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BarcodeLookupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewCarrierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewBarcodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteBarcodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewInboundTrailerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailerDatasetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckIfTrailerActiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCarrierListByPartialSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckOutTrailerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddCactusInboundSheetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddCactusOutboundSheetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveTrailersByScacOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateAllBarcodeDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFlagQuestionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTextQuestionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMultiQuestionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveInboundAnswersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.KAR_Lot_SmartClient.My.MySettings.Default.KAR_Lot_SmartClient_karservices_cactus_webservices_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ServiceTestCompleted As ServiceTestCompletedEventHandler
        
        '''<remarks/>
        Public Event BarcodeLookupCompleted As BarcodeLookupCompletedEventHandler
        
        '''<remarks/>
        Public Event NewCarrierCompleted As NewCarrierCompletedEventHandler
        
        '''<remarks/>
        Public Event NewBarcodeCompleted As NewBarcodeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteBarcodesCompleted As DeleteBarcodesCompletedEventHandler
        
        '''<remarks/>
        Public Event NewInboundTrailerCompleted As NewInboundTrailerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailerDatasetCompleted As GetActiveTrailerDatasetCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckIfTrailerActiveCompleted As CheckIfTrailerActiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCarrierListByPartialSearchCompleted As GetCarrierListByPartialSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckOutTrailerCompleted As CheckOutTrailerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddCactusInboundSheetCompleted As AddCactusInboundSheetCompletedEventHandler
        
        '''<remarks/>
        Public Event AddCactusOutboundSheetCompleted As AddCactusOutboundSheetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveTrailersByScacCompleted As GetActiveTrailersByScacCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateAllBarcodeDataCompleted As UpdateAllBarcodeDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFlagQuestionsCompleted As GetFlagQuestionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTextQuestionsCompleted As GetTextQuestionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMultiQuestionsCompleted As GetMultiQuestionsCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveInboundAnswersCompleted As SaveInboundAnswersCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/ServiceTest", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ServiceTest() As Boolean
            Dim results() As Object = Me.Invoke("ServiceTest", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ServiceTestAsync()
            Me.ServiceTestAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ServiceTestAsync(ByVal userState As Object)
            If (Me.ServiceTestOperationCompleted Is Nothing) Then
                Me.ServiceTestOperationCompleted = AddressOf Me.OnServiceTestOperationCompleted
            End If
            Me.InvokeAsync("ServiceTest", New Object(-1) {}, Me.ServiceTestOperationCompleted, userState)
        End Sub
        
        Private Sub OnServiceTestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ServiceTestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ServiceTestCompleted(Me, New ServiceTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/BarcodeLookup", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BarcodeLookup(ByVal BarcodeScan As String) As String()
            Dim results() As Object = Me.Invoke("BarcodeLookup", New Object() {BarcodeScan})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub BarcodeLookupAsync(ByVal BarcodeScan As String)
            Me.BarcodeLookupAsync(BarcodeScan, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BarcodeLookupAsync(ByVal BarcodeScan As String, ByVal userState As Object)
            If (Me.BarcodeLookupOperationCompleted Is Nothing) Then
                Me.BarcodeLookupOperationCompleted = AddressOf Me.OnBarcodeLookupOperationCompleted
            End If
            Me.InvokeAsync("BarcodeLookup", New Object() {BarcodeScan}, Me.BarcodeLookupOperationCompleted, userState)
        End Sub
        
        Private Sub OnBarcodeLookupOperationCompleted(ByVal arg As Object)
            If (Not (Me.BarcodeLookupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BarcodeLookupCompleted(Me, New BarcodeLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/NewCarrier", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewCarrier(ByVal ScacString As String, ByVal NameString As String) As String()
            Dim results() As Object = Me.Invoke("NewCarrier", New Object() {ScacString, NameString})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewCarrierAsync(ByVal ScacString As String, ByVal NameString As String)
            Me.NewCarrierAsync(ScacString, NameString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewCarrierAsync(ByVal ScacString As String, ByVal NameString As String, ByVal userState As Object)
            If (Me.NewCarrierOperationCompleted Is Nothing) Then
                Me.NewCarrierOperationCompleted = AddressOf Me.OnNewCarrierOperationCompleted
            End If
            Me.InvokeAsync("NewCarrier", New Object() {ScacString, NameString}, Me.NewCarrierOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewCarrierOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewCarrierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewCarrierCompleted(Me, New NewCarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/NewBarcode", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewBarcode(ByVal NewBarcodeDataString As String, ByVal NewScacString As String, ByVal NewTrailerString As String) As String()
            Dim results() As Object = Me.Invoke("NewBarcode", New Object() {NewBarcodeDataString, NewScacString, NewTrailerString})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewBarcodeAsync(ByVal NewBarcodeDataString As String, ByVal NewScacString As String, ByVal NewTrailerString As String)
            Me.NewBarcodeAsync(NewBarcodeDataString, NewScacString, NewTrailerString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewBarcodeAsync(ByVal NewBarcodeDataString As String, ByVal NewScacString As String, ByVal NewTrailerString As String, ByVal userState As Object)
            If (Me.NewBarcodeOperationCompleted Is Nothing) Then
                Me.NewBarcodeOperationCompleted = AddressOf Me.OnNewBarcodeOperationCompleted
            End If
            Me.InvokeAsync("NewBarcode", New Object() {NewBarcodeDataString, NewScacString, NewTrailerString}, Me.NewBarcodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewBarcodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewBarcodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewBarcodeCompleted(Me, New NewBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/DeleteBarcodes", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteBarcodes(ByVal ScacString As String, ByVal TrailerString As String) As String()
            Dim results() As Object = Me.Invoke("DeleteBarcodes", New Object() {ScacString, TrailerString})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteBarcodesAsync(ByVal ScacString As String, ByVal TrailerString As String)
            Me.DeleteBarcodesAsync(ScacString, TrailerString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteBarcodesAsync(ByVal ScacString As String, ByVal TrailerString As String, ByVal userState As Object)
            If (Me.DeleteBarcodesOperationCompleted Is Nothing) Then
                Me.DeleteBarcodesOperationCompleted = AddressOf Me.OnDeleteBarcodesOperationCompleted
            End If
            Me.InvokeAsync("DeleteBarcodes", New Object() {ScacString, TrailerString}, Me.DeleteBarcodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteBarcodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteBarcodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteBarcodesCompleted(Me, New DeleteBarcodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/NewInboundTrailer", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewInboundTrailer(ByVal Barcode As String, ByVal scac As String, ByVal TrailerID As String, ByVal LoadStatus As String, ByVal Classification As String, ByVal MoveStatus As String, ByVal TrailerTemp As String, ByVal PalletType As String, ByVal CleanState As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal LastAction As System.Nullable(Of Date), ByVal LastUser As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal TrailerAddedTime As System.Nullable(Of Date), ByVal TrailerAddedBy As String, ByVal TrailerType As String, ByVal pBuyers As Boolean) As String()
            Dim results() As Object = Me.Invoke("NewInboundTrailer", New Object() {Barcode, scac, TrailerID, LoadStatus, Classification, MoveStatus, TrailerTemp, PalletType, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerType, pBuyers})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewInboundTrailerAsync(ByVal Barcode As String, ByVal scac As String, ByVal TrailerID As String, ByVal LoadStatus As String, ByVal Classification As String, ByVal MoveStatus As String, ByVal TrailerTemp As String, ByVal PalletType As String, ByVal CleanState As String, ByVal LastAction As System.Nullable(Of Date), ByVal LastUser As String, ByVal TrailerAddedTime As System.Nullable(Of Date), ByVal TrailerAddedBy As String, ByVal TrailerType As String, ByVal pBuyers As Boolean)
            Me.NewInboundTrailerAsync(Barcode, scac, TrailerID, LoadStatus, Classification, MoveStatus, TrailerTemp, PalletType, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerType, pBuyers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewInboundTrailerAsync( _
                    ByVal Barcode As String,  _
                    ByVal scac As String,  _
                    ByVal TrailerID As String,  _
                    ByVal LoadStatus As String,  _
                    ByVal Classification As String,  _
                    ByVal MoveStatus As String,  _
                    ByVal TrailerTemp As String,  _
                    ByVal PalletType As String,  _
                    ByVal CleanState As String,  _
                    ByVal LastAction As System.Nullable(Of Date),  _
                    ByVal LastUser As String,  _
                    ByVal TrailerAddedTime As System.Nullable(Of Date),  _
                    ByVal TrailerAddedBy As String,  _
                    ByVal TrailerType As String,  _
                    ByVal pBuyers As Boolean,  _
                    ByVal userState As Object)
            If (Me.NewInboundTrailerOperationCompleted Is Nothing) Then
                Me.NewInboundTrailerOperationCompleted = AddressOf Me.OnNewInboundTrailerOperationCompleted
            End If
            Me.InvokeAsync("NewInboundTrailer", New Object() {Barcode, scac, TrailerID, LoadStatus, Classification, MoveStatus, TrailerTemp, PalletType, CleanState, LastAction, LastUser, TrailerAddedTime, TrailerAddedBy, TrailerType, pBuyers}, Me.NewInboundTrailerOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewInboundTrailerOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewInboundTrailerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewInboundTrailerCompleted(Me, New NewInboundTrailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailerDataset", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailerDataset() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetActiveTrailerDataset", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerDatasetAsync()
            Me.GetActiveTrailerDatasetAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailerDatasetAsync(ByVal userState As Object)
            If (Me.GetActiveTrailerDatasetOperationCompleted Is Nothing) Then
                Me.GetActiveTrailerDatasetOperationCompleted = AddressOf Me.OnGetActiveTrailerDatasetOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailerDataset", New Object(-1) {}, Me.GetActiveTrailerDatasetOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailerDatasetOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailerDatasetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailerDatasetCompleted(Me, New GetActiveTrailerDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CheckIfTrailerActive", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckIfTrailerActive(ByVal Scac As String, ByVal TrailerID As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckIfTrailerActive", New Object() {Scac, TrailerID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckIfTrailerActiveAsync(ByVal Scac As String, ByVal TrailerID As String)
            Me.CheckIfTrailerActiveAsync(Scac, TrailerID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckIfTrailerActiveAsync(ByVal Scac As String, ByVal TrailerID As String, ByVal userState As Object)
            If (Me.CheckIfTrailerActiveOperationCompleted Is Nothing) Then
                Me.CheckIfTrailerActiveOperationCompleted = AddressOf Me.OnCheckIfTrailerActiveOperationCompleted
            End If
            Me.InvokeAsync("CheckIfTrailerActive", New Object() {Scac, TrailerID}, Me.CheckIfTrailerActiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckIfTrailerActiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckIfTrailerActiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckIfTrailerActiveCompleted(Me, New CheckIfTrailerActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetCarrierListByPartialSearch", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCarrierListByPartialSearch(ByVal PartialNameString As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCarrierListByPartialSearch", New Object() {PartialNameString})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCarrierListByPartialSearchAsync(ByVal PartialNameString As String)
            Me.GetCarrierListByPartialSearchAsync(PartialNameString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCarrierListByPartialSearchAsync(ByVal PartialNameString As String, ByVal userState As Object)
            If (Me.GetCarrierListByPartialSearchOperationCompleted Is Nothing) Then
                Me.GetCarrierListByPartialSearchOperationCompleted = AddressOf Me.OnGetCarrierListByPartialSearchOperationCompleted
            End If
            Me.InvokeAsync("GetCarrierListByPartialSearch", New Object() {PartialNameString}, Me.GetCarrierListByPartialSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCarrierListByPartialSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCarrierListByPartialSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCarrierListByPartialSearchCompleted(Me, New GetCarrierListByPartialSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/CheckOutTrailer", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckOutTrailer(ByVal Scac As String, ByVal TrailerID As String, ByVal UserID As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckOutTrailer", New Object() {Scac, TrailerID, UserID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckOutTrailerAsync(ByVal Scac As String, ByVal TrailerID As String, ByVal UserID As String)
            Me.CheckOutTrailerAsync(Scac, TrailerID, UserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckOutTrailerAsync(ByVal Scac As String, ByVal TrailerID As String, ByVal UserID As String, ByVal userState As Object)
            If (Me.CheckOutTrailerOperationCompleted Is Nothing) Then
                Me.CheckOutTrailerOperationCompleted = AddressOf Me.OnCheckOutTrailerOperationCompleted
            End If
            Me.InvokeAsync("CheckOutTrailer", New Object() {Scac, TrailerID, UserID}, Me.CheckOutTrailerOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckOutTrailerOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckOutTrailerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckOutTrailerCompleted(Me, New CheckOutTrailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AddCactusInboundSheet", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddCactusInboundSheet(ByVal SheetData As CactusInboundSheet) As Boolean
            Dim results() As Object = Me.Invoke("AddCactusInboundSheet", New Object() {SheetData})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddCactusInboundSheetAsync(ByVal SheetData As CactusInboundSheet)
            Me.AddCactusInboundSheetAsync(SheetData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddCactusInboundSheetAsync(ByVal SheetData As CactusInboundSheet, ByVal userState As Object)
            If (Me.AddCactusInboundSheetOperationCompleted Is Nothing) Then
                Me.AddCactusInboundSheetOperationCompleted = AddressOf Me.OnAddCactusInboundSheetOperationCompleted
            End If
            Me.InvokeAsync("AddCactusInboundSheet", New Object() {SheetData}, Me.AddCactusInboundSheetOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddCactusInboundSheetOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddCactusInboundSheetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddCactusInboundSheetCompleted(Me, New AddCactusInboundSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/AddCactusOutboundSheet", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddCactusOutboundSheet(ByVal SheetData As CactusOutboundSheet) As Boolean
            Dim results() As Object = Me.Invoke("AddCactusOutboundSheet", New Object() {SheetData})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddCactusOutboundSheetAsync(ByVal SheetData As CactusOutboundSheet)
            Me.AddCactusOutboundSheetAsync(SheetData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddCactusOutboundSheetAsync(ByVal SheetData As CactusOutboundSheet, ByVal userState As Object)
            If (Me.AddCactusOutboundSheetOperationCompleted Is Nothing) Then
                Me.AddCactusOutboundSheetOperationCompleted = AddressOf Me.OnAddCactusOutboundSheetOperationCompleted
            End If
            Me.InvokeAsync("AddCactusOutboundSheet", New Object() {SheetData}, Me.AddCactusOutboundSheetOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddCactusOutboundSheetOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddCactusOutboundSheetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddCactusOutboundSheetCompleted(Me, New AddCactusOutboundSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetActiveTrailersByScac", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveTrailersByScac(ByVal Scac As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetActiveTrailersByScac", New Object() {Scac})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByScacAsync(ByVal Scac As String)
            Me.GetActiveTrailersByScacAsync(Scac, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveTrailersByScacAsync(ByVal Scac As String, ByVal userState As Object)
            If (Me.GetActiveTrailersByScacOperationCompleted Is Nothing) Then
                Me.GetActiveTrailersByScacOperationCompleted = AddressOf Me.OnGetActiveTrailersByScacOperationCompleted
            End If
            Me.InvokeAsync("GetActiveTrailersByScac", New Object() {Scac}, Me.GetActiveTrailersByScacOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveTrailersByScacOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveTrailersByScacCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveTrailersByScacCompleted(Me, New GetActiveTrailersByScacCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/UpdateAllBarcodeData", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateAllBarcodeData(ByVal BarcodeData As String, ByVal Original_BarcodeData As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateAllBarcodeData", New Object() {BarcodeData, Original_BarcodeData})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateAllBarcodeDataAsync(ByVal BarcodeData As String, ByVal Original_BarcodeData As String)
            Me.UpdateAllBarcodeDataAsync(BarcodeData, Original_BarcodeData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAllBarcodeDataAsync(ByVal BarcodeData As String, ByVal Original_BarcodeData As String, ByVal userState As Object)
            If (Me.UpdateAllBarcodeDataOperationCompleted Is Nothing) Then
                Me.UpdateAllBarcodeDataOperationCompleted = AddressOf Me.OnUpdateAllBarcodeDataOperationCompleted
            End If
            Me.InvokeAsync("UpdateAllBarcodeData", New Object() {BarcodeData, Original_BarcodeData}, Me.UpdateAllBarcodeDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateAllBarcodeDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateAllBarcodeDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateAllBarcodeDataCompleted(Me, New UpdateAllBarcodeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetFlagQuestions", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFlagQuestions() As InboundQuestions()
            Dim results() As Object = Me.Invoke("GetFlagQuestions", New Object(-1) {})
            Return CType(results(0),InboundQuestions())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFlagQuestionsAsync()
            Me.GetFlagQuestionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlagQuestionsAsync(ByVal userState As Object)
            If (Me.GetFlagQuestionsOperationCompleted Is Nothing) Then
                Me.GetFlagQuestionsOperationCompleted = AddressOf Me.OnGetFlagQuestionsOperationCompleted
            End If
            Me.InvokeAsync("GetFlagQuestions", New Object(-1) {}, Me.GetFlagQuestionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFlagQuestionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFlagQuestionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFlagQuestionsCompleted(Me, New GetFlagQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetTextQuestions", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTextQuestions() As InboundQuestions()
            Dim results() As Object = Me.Invoke("GetTextQuestions", New Object(-1) {})
            Return CType(results(0),InboundQuestions())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTextQuestionsAsync()
            Me.GetTextQuestionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTextQuestionsAsync(ByVal userState As Object)
            If (Me.GetTextQuestionsOperationCompleted Is Nothing) Then
                Me.GetTextQuestionsOperationCompleted = AddressOf Me.OnGetTextQuestionsOperationCompleted
            End If
            Me.InvokeAsync("GetTextQuestions", New Object(-1) {}, Me.GetTextQuestionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTextQuestionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTextQuestionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTextQuestionsCompleted(Me, New GetTextQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/GetMultiQuestions", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMultiQuestions() As InboundQuestions()
            Dim results() As Object = Me.Invoke("GetMultiQuestions", New Object(-1) {})
            Return CType(results(0),InboundQuestions())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMultiQuestionsAsync()
            Me.GetMultiQuestionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMultiQuestionsAsync(ByVal userState As Object)
            If (Me.GetMultiQuestionsOperationCompleted Is Nothing) Then
                Me.GetMultiQuestionsOperationCompleted = AddressOf Me.OnGetMultiQuestionsOperationCompleted
            End If
            Me.InvokeAsync("GetMultiQuestions", New Object(-1) {}, Me.GetMultiQuestionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMultiQuestionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMultiQuestionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMultiQuestionsCompleted(Me, New GetMultiQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://karservices.com/SaveInboundAnswers", RequestNamespace:="http://karservices.com/", ResponseNamespace:="http://karservices.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveInboundAnswers(ByVal pAnswer As InboundAnswers) As Integer
            Dim results() As Object = Me.Invoke("SaveInboundAnswers", New Object() {pAnswer})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveInboundAnswersAsync(ByVal pAnswer As InboundAnswers)
            Me.SaveInboundAnswersAsync(pAnswer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveInboundAnswersAsync(ByVal pAnswer As InboundAnswers, ByVal userState As Object)
            If (Me.SaveInboundAnswersOperationCompleted Is Nothing) Then
                Me.SaveInboundAnswersOperationCompleted = AddressOf Me.OnSaveInboundAnswersOperationCompleted
            End If
            Me.InvokeAsync("SaveInboundAnswers", New Object() {pAnswer}, Me.SaveInboundAnswersOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveInboundAnswersOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveInboundAnswersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveInboundAnswersCompleted(Me, New SaveInboundAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class CactusInboundSheet
        
        Private actionDateField As Date
        
        Private carrierNameField As String
        
        Private scacField As String
        
        Private cabNumberField As String
        
        Private trailerNumberField As String
        
        Private sONumberField As String
        
        Private referWillRunField As Boolean
        
        Private referFuelLevelField As Integer
        
        Private hooksField As Boolean
        
        Private palletsField As Boolean
        
        Private emptyField As Boolean
        
        Private otherComponentsField As String
        
        Private trailerInteriorConditionField As String
        
        Private trashField As Boolean
        
        Private landGearField As Boolean
        
        Private doorHingesField As Boolean
        
        Private spareTireField As Boolean
        
        Private doorLatchesField As Boolean
        
        Private unitOperationField As Boolean
        
        Private unitConditionField As Boolean
        
        Private remarksField As String
        
        Private driverSignatureField As String
        
        Private securitySignatureField As String
        
        Private airChuteField As Boolean
        
        Private railsField As Boolean
        
        Private temperatureField As String
        
        Private sealNumberField As String
        
        Private officerNameField As String
        
        Private driverNameField As String
        
        Private destinationField As String
        
        Private buyersField As Boolean
        
        Private barCodeDataField As String
        
        '''<remarks/>
        Public Property ActionDate() As Date
            Get
                Return Me.actionDateField
            End Get
            Set
                Me.actionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarrierName() As String
            Get
                Return Me.carrierNameField
            End Get
            Set
                Me.carrierNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Scac() As String
            Get
                Return Me.scacField
            End Get
            Set
                Me.scacField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CabNumber() As String
            Get
                Return Me.cabNumberField
            End Get
            Set
                Me.cabNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerNumber() As String
            Get
                Return Me.trailerNumberField
            End Get
            Set
                Me.trailerNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SONumber() As String
            Get
                Return Me.sONumberField
            End Get
            Set
                Me.sONumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferWillRun() As Boolean
            Get
                Return Me.referWillRunField
            End Get
            Set
                Me.referWillRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferFuelLevel() As Integer
            Get
                Return Me.referFuelLevelField
            End Get
            Set
                Me.referFuelLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hooks() As Boolean
            Get
                Return Me.hooksField
            End Get
            Set
                Me.hooksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Pallets() As Boolean
            Get
                Return Me.palletsField
            End Get
            Set
                Me.palletsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Empty() As Boolean
            Get
                Return Me.emptyField
            End Get
            Set
                Me.emptyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OtherComponents() As String
            Get
                Return Me.otherComponentsField
            End Get
            Set
                Me.otherComponentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerInteriorCondition() As String
            Get
                Return Me.trailerInteriorConditionField
            End Get
            Set
                Me.trailerInteriorConditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Trash() As Boolean
            Get
                Return Me.trashField
            End Get
            Set
                Me.trashField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LandGear() As Boolean
            Get
                Return Me.landGearField
            End Get
            Set
                Me.landGearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DoorHinges() As Boolean
            Get
                Return Me.doorHingesField
            End Get
            Set
                Me.doorHingesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SpareTire() As Boolean
            Get
                Return Me.spareTireField
            End Get
            Set
                Me.spareTireField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DoorLatches() As Boolean
            Get
                Return Me.doorLatchesField
            End Get
            Set
                Me.doorLatchesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOperation() As Boolean
            Get
                Return Me.unitOperationField
            End Get
            Set
                Me.unitOperationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitCondition() As Boolean
            Get
                Return Me.unitConditionField
            End Get
            Set
                Me.unitConditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Remarks() As String
            Get
                Return Me.remarksField
            End Get
            Set
                Me.remarksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriverSignature() As String
            Get
                Return Me.driverSignatureField
            End Get
            Set
                Me.driverSignatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecuritySignature() As String
            Get
                Return Me.securitySignatureField
            End Get
            Set
                Me.securitySignatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AirChute() As Boolean
            Get
                Return Me.airChuteField
            End Get
            Set
                Me.airChuteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rails() As Boolean
            Get
                Return Me.railsField
            End Get
            Set
                Me.railsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Temperature() As String
            Get
                Return Me.temperatureField
            End Get
            Set
                Me.temperatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SealNumber() As String
            Get
                Return Me.sealNumberField
            End Get
            Set
                Me.sealNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OfficerName() As String
            Get
                Return Me.officerNameField
            End Get
            Set
                Me.officerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriverName() As String
            Get
                Return Me.driverNameField
            End Get
            Set
                Me.driverNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Destination() As String
            Get
                Return Me.destinationField
            End Get
            Set
                Me.destinationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Buyers() As Boolean
            Get
                Return Me.buyersField
            End Get
            Set
                Me.buyersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BarCodeData() As String
            Get
                Return Me.barCodeDataField
            End Get
            Set
                Me.barCodeDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class InboundAnswers
        
        Private answerIDField As Integer
        
        Private questionTextField As String
        
        Private answerTextField As String
        
        Private trailerSystemIDField As Integer
        
        Private carrierField As String
        
        Private trailerIDField As String
        
        Private checkInDateField As Date
        
        '''<remarks/>
        Public Property AnswerID() As Integer
            Get
                Return Me.answerIDField
            End Get
            Set
                Me.answerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuestionText() As String
            Get
                Return Me.questionTextField
            End Get
            Set
                Me.questionTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnswerText() As String
            Get
                Return Me.answerTextField
            End Get
            Set
                Me.answerTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerSystemID() As Integer
            Get
                Return Me.trailerSystemIDField
            End Get
            Set
                Me.trailerSystemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Carrier() As String
            Get
                Return Me.carrierField
            End Get
            Set
                Me.carrierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerID() As String
            Get
                Return Me.trailerIDField
            End Get
            Set
                Me.trailerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CheckInDate() As Date
            Get
                Return Me.checkInDateField
            End Get
            Set
                Me.checkInDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class InboundQuestions
        
        Private questionNumberField As Integer
        
        Private questionTextField As String
        
        Private questionTypeField As String
        
        Private activeQuestionField As Boolean
        
        Private requiredFieldField As Boolean
        
        Private fieldValuesField As String
        
        '''<remarks/>
        Public Property QuestionNumber() As Integer
            Get
                Return Me.questionNumberField
            End Get
            Set
                Me.questionNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuestionText() As String
            Get
                Return Me.questionTextField
            End Get
            Set
                Me.questionTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuestionType() As String
            Get
                Return Me.questionTypeField
            End Get
            Set
                Me.questionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActiveQuestion() As Boolean
            Get
                Return Me.activeQuestionField
            End Get
            Set
                Me.activeQuestionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequiredField() As Boolean
            Get
                Return Me.requiredFieldField
            End Get
            Set
                Me.requiredFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldValues() As String
            Get
                Return Me.fieldValuesField
            End Get
            Set
                Me.fieldValuesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://karservices.com/")>  _
    Partial Public Class CactusOutboundSheet
        
        Private scacField As String
        
        Private carrierNameField As String
        
        Private trailerIDField As String
        
        Private securitySignatureField As String
        
        Private temperatureField As String
        
        Private setPointTempField As String
        
        Private referFuelLevelField As Integer
        
        Private sealNumberField As String
        
        Private officerNameField As String
        
        Private destinationField As String
        
        Private driverNameField As String
        
        Private remarksField As String
        
        Private deliverDateField As String
        
        Private truckNumberField As String
        
        '''<remarks/>
        Public Property Scac() As String
            Get
                Return Me.scacField
            End Get
            Set
                Me.scacField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarrierName() As String
            Get
                Return Me.carrierNameField
            End Get
            Set
                Me.carrierNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrailerID() As String
            Get
                Return Me.trailerIDField
            End Get
            Set
                Me.trailerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecuritySignature() As String
            Get
                Return Me.securitySignatureField
            End Get
            Set
                Me.securitySignatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Temperature() As String
            Get
                Return Me.temperatureField
            End Get
            Set
                Me.temperatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SetPointTemp() As String
            Get
                Return Me.setPointTempField
            End Get
            Set
                Me.setPointTempField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferFuelLevel() As Integer
            Get
                Return Me.referFuelLevelField
            End Get
            Set
                Me.referFuelLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SealNumber() As String
            Get
                Return Me.sealNumberField
            End Get
            Set
                Me.sealNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OfficerName() As String
            Get
                Return Me.officerNameField
            End Get
            Set
                Me.officerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Destination() As String
            Get
                Return Me.destinationField
            End Get
            Set
                Me.destinationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriverName() As String
            Get
                Return Me.driverNameField
            End Get
            Set
                Me.driverNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Remarks() As String
            Get
                Return Me.remarksField
            End Get
            Set
                Me.remarksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DeliverDate() As String
            Get
                Return Me.deliverDateField
            End Get
            Set
                Me.deliverDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TruckNumber() As String
            Get
                Return Me.truckNumberField
            End Get
            Set
                Me.truckNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ServiceTestCompletedEventHandler(ByVal sender As Object, ByVal e As ServiceTestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ServiceTestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub BarcodeLookupCompletedEventHandler(ByVal sender As Object, ByVal e As BarcodeLookupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BarcodeLookupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewCarrierCompletedEventHandler(ByVal sender As Object, ByVal e As NewCarrierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewCarrierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewBarcodeCompletedEventHandler(ByVal sender As Object, ByVal e As NewBarcodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewBarcodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DeleteBarcodesCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteBarcodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteBarcodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewInboundTrailerCompletedEventHandler(ByVal sender As Object, ByVal e As NewInboundTrailerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewInboundTrailerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailerDatasetCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailerDatasetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailerDatasetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckIfTrailerActiveCompletedEventHandler(ByVal sender As Object, ByVal e As CheckIfTrailerActiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckIfTrailerActiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCarrierListByPartialSearchCompletedEventHandler(ByVal sender As Object, ByVal e As GetCarrierListByPartialSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCarrierListByPartialSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckOutTrailerCompletedEventHandler(ByVal sender As Object, ByVal e As CheckOutTrailerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckOutTrailerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AddCactusInboundSheetCompletedEventHandler(ByVal sender As Object, ByVal e As AddCactusInboundSheetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddCactusInboundSheetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AddCactusOutboundSheetCompletedEventHandler(ByVal sender As Object, ByVal e As AddCactusOutboundSheetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddCactusOutboundSheetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetActiveTrailersByScacCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveTrailersByScacCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveTrailersByScacCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateAllBarcodeDataCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateAllBarcodeDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateAllBarcodeDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFlagQuestionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFlagQuestionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFlagQuestionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InboundQuestions()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InboundQuestions())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTextQuestionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTextQuestionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTextQuestionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InboundQuestions()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InboundQuestions())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetMultiQuestionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMultiQuestionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMultiQuestionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InboundQuestions()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InboundQuestions())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SaveInboundAnswersCompletedEventHandler(ByVal sender As Object, ByVal e As SaveInboundAnswersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveInboundAnswersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
End Namespace
